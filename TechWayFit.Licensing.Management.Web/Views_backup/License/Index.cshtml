@model TechWayFit.Licensing.WebUI.ViewModels.License.LicenseListViewModel
@{
    ViewData["Title"] = "License Management";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h2 class="mb-1">
                        <i class="fas fa-certificate text-primary me-2"></i>
                        License Management
                    </h2>
                    <p class="text-muted mb-0">Manage and monitor all product licenses</p>
                </div>
                <div>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>
                        Create License
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Filter Section -->
    <div class="card mb-4">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-filter me-2"></i>
                Filter Licenses
            </h5>
        </div>
        <div class="card-body">
            <form method="get" asp-action="Index">
                <div class="row">
                    <div class="col-md-3">
                        <div class="mb-3">
                            <label asp-for="Filter.SearchTerm" class="form-label">Search</label>
                            <input asp-for="Filter.SearchTerm" class="form-control" placeholder="License ID or Consumer name...">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="mb-3">
                            <label asp-for="Filter.Status" class="form-label">Status</label>
                            <select asp-for="Filter.Status" class="form-select">
                                <option value="">All Statuses</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseStatus.Active">Active</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseStatus.Expired">Expired</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseStatus.Suspended">Suspended</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseStatus.Revoked">Revoked</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseStatus.Pending">Pending</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="mb-3">
                            <label asp-for="Filter.Tier" class="form-label">Tier</label>
                            <select asp-for="Filter.Tier" class="form-select">
                                <option value="">All Tiers</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseTier.Community">Community</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseTier.Professional">Professional</option>
                                <option value="@TechWayFit.Licensing.Core.Models.LicenseTier.Enterprise">Enterprise</option>
                            </select>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="mb-3">
                            <label asp-for="Filter.ValidFromStart" class="form-label">Valid From</label>
                            <input asp-for="Filter.ValidFromStart" type="date" class="form-control">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <div class="mb-3">
                            <label asp-for="Filter.ValidToEnd" class="form-label">Valid To</label>
                            <input asp-for="Filter.ValidToEnd" type="date" class="form-control">
                        </div>
                    </div>
                    <div class="col-md-1">
                        <div class="mb-3">
                            <label class="form-label">&nbsp;</label>
                            <div class="d-grid">
                                <button type="submit" class="btn btn-outline-primary">
                                    <i class="fas fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-check">
                            <input asp-for="Filter.ShowExpiring" class="form-check-input" type="checkbox">
                            <label asp-for="Filter.ShowExpiring" class="form-check-label">
                                Show only expiring licenses
                            </label>
                        </div>
                    </div>
                    <div class="col-md-2">
                        <input asp-for="Filter.ExpiringWithinDays" class="form-control form-control-sm" placeholder="Days">
                    </div>
                    <div class="col-md-7">
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-times me-1"></i>Clear Filters
                        </a>
                    </div>
                </div>
            </form>
        </div>
    </div>

    <!-- Summary Stats -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="card bg-primary text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.Pagination.TotalItems</h4>
                            <p class="mb-0">Total Licenses</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-certificate fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-success text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.Licenses.Count(l => l.Status == TechWayFit.Licensing.Core.Models.LicenseStatus.Active)</h4>
                            <p class="mb-0">Active</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-check-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-warning text-dark">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.Licenses.Count(l => l.DaysUntilExpiry <= 30 && l.DaysUntilExpiry > 0)</h4>
                            <p class="mb-0">Expiring Soon</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-exclamation-triangle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="card bg-danger text-white">
                <div class="card-body">
                    <div class="d-flex justify-content-between">
                        <div>
                            <h4>@Model.Licenses.Count(l => l.Status == TechWayFit.Licensing.Core.Models.LicenseStatus.Expired || l.DaysUntilExpiry < 0)</h4>
                            <p class="mb-0">Expired</p>
                        </div>
                        <div class="align-self-center">
                            <i class="fas fa-times-circle fa-2x"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- License Table -->
    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">
                    <i class="fas fa-list me-2"></i>
                    Licenses (@Model.Pagination.TotalItems total)
                </h5>
                <div>
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="exportLicenses()">
                            <i class="fas fa-download me-1"></i>Export
                        </button>
                        <button type="button" class="btn btn-outline-secondary btn-sm" onclick="refreshPage()">
                            <i class="fas fa-sync-alt me-1"></i>Refresh
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div class="card-body p-0">
            @if (Model.Licenses.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th>License ID</th>
                                <th>Consumer</th>
                                <th>Contact Email</th>
                                <th>Tier</th>
                                <th>Status</th>
                                <th>Valid From</th>
                                <th>Valid To</th>
                                <th>Days Until Expiry</th>
                                <th>Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var license in Model.Licenses)
                            {
                                <tr class="@(license.DaysUntilExpiry <= 30 && license.DaysUntilExpiry > 0 ? "table-warning" : license.DaysUntilExpiry < 0 ? "table-danger" : "")">
                                    <td>
                                        <a asp-action="Details" asp-route-id="@license.LicenseId" class="text-decoration-none">
                                            <code>@license.LicenseId.Substring(0, Math.Min(8, license.LicenseId.Length))...</code>
                                        </a>
                                    </td>
                                    <td>
                                        <strong>@license.ConsumerName</strong>
                                    </td>
                                    <td>
                                        <a href="mailto:@license.ContactEmail">@license.ContactEmail</a>
                                    </td>
                                    <td>
                                        <span class="badge bg-info">@license.Tier</span>
                                    </td>
                                    <td>
                                        <span class="badge @license.StatusCssClass">@license.Status</span>
                                    </td>
                                    <td>@license.ValidFrom.ToString("MMM dd, yyyy")</td>
                                    <td>@license.ValidTo.ToString("MMM dd, yyyy")</td>
                                    <td>
                                        @if (license.DaysUntilExpiry < 0)
                                        {
                                            <span class="text-danger">Expired @Math.Abs(license.DaysUntilExpiry) days ago</span>
                                        }
                                        else if (license.DaysUntilExpiry <= 30)
                                        {
                                            <span class="text-warning">@license.DaysUntilExpiry days</span>
                                        }
                                        else
                                        {
                                            <span class="text-success">@license.DaysUntilExpiry days</span>
                                        }
                                    </td>
                                    <td>
                                        <div class="btn-group" role="group">
                                            <a asp-action="Details" asp-route-id="@license.LicenseId" class="btn btn-outline-primary btn-sm" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                            @if (license.CanRenew)
                                            {
                                                <button class="btn btn-outline-success btn-sm" onclick="renewLicense('@license.LicenseId')" title="Renew">
                                                    <i class="fas fa-sync-alt"></i>
                                                </button>
                                            }
                                            @if (license.CanSuspend)
                                            {
                                                <button class="btn btn-outline-warning btn-sm" onclick="suspendLicense('@license.LicenseId')" title="Suspend">
                                                    <i class="fas fa-pause"></i>
                                                </button>
                                            }
                                            @if (license.CanRevoke)
                                            {
                                                <button class="btn btn-outline-danger btn-sm" onclick="revokeLicense('@license.LicenseId')" title="Revoke">
                                                    <i class="fas fa-ban"></i>
                                                </button>
                                            }
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-certificate fa-3x text-muted mb-3"></i>
                    <h5 class="text-muted">No licenses found</h5>
                    <p class="text-muted">
                        @if (!string.IsNullOrEmpty(Model.Filter.SearchTerm) || Model.Filter.Status.HasValue)
                        {
                            <span>No licenses match your current filters.</span>
                        }
                        else
                        {
                            <span>No licenses have been created yet.</span>
                        }
                    </p>
                    <a asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>Create First License
                    </a>
                </div>
            }
        </div>
        
        @if (Model.Pagination.TotalPages > 1)
        {
            <div class="card-footer">
                <!-- Pagination -->
                <nav aria-label="License pagination">
                    <ul class="pagination justify-content-center mb-0">
                        <li class="page-item @(!Model.Pagination.HasPreviousPage ? "disabled" : "")">
                            <a class="page-link" href="@GetPageUrl(Model.Pagination.CurrentPage - 1)">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                        
                        @for (int i = Math.Max(1, Model.Pagination.CurrentPage - 2); i <= Math.Min(Model.Pagination.TotalPages, Model.Pagination.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@GetPageUrl(i)">@i</a>
                            </li>
                        }
                        
                        <li class="page-item @(!Model.Pagination.HasNextPage ? "disabled" : "")">
                            <a class="page-link" href="@GetPageUrl(Model.Pagination.CurrentPage + 1)">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    </ul>
                </nav>
                
                <div class="text-center mt-2">
                    <small class="text-muted">
                        Showing @((Model.Pagination.CurrentPage - 1) * Model.Pagination.PageSize + 1) to 
                        @Math.Min(Model.Pagination.CurrentPage * Model.Pagination.PageSize, Model.Pagination.TotalItems) 
                        of @Model.Pagination.TotalItems licenses
                    </small>
                </div>
            </div>
        }
    </div>
</div>

@functions {
    private string GetPageUrl(int page)
    {
        var queryDict = new Dictionary<string, string>();
        
        if (!string.IsNullOrEmpty(Model.Filter.SearchTerm))
            queryDict.Add("Filter.SearchTerm", Model.Filter.SearchTerm);
            
        if (Model.Filter.Status.HasValue)
            queryDict.Add("Filter.Status", Model.Filter.Status.Value.ToString());
            
        if (Model.Filter.Tier.HasValue)
            queryDict.Add("Filter.Tier", Model.Filter.Tier.Value.ToString());
            
        if (Model.Filter.ValidFromStart.HasValue)
            queryDict.Add("Filter.ValidFromStart", Model.Filter.ValidFromStart.Value.ToString("yyyy-MM-dd"));
            
        if (Model.Filter.ValidToEnd.HasValue)
            queryDict.Add("Filter.ValidToEnd", Model.Filter.ValidToEnd.Value.ToString("yyyy-MM-dd"));
            
        if (Model.Filter.ShowExpiring)
        {
            queryDict.Add("Filter.ShowExpiring", "true");
            queryDict.Add("Filter.ExpiringWithinDays", Model.Filter.ExpiringWithinDays.ToString());
        }
        
        queryDict.Add("page", page.ToString());
        
        var queryString = string.Join("&", queryDict.Select(kvp => $"{Uri.EscapeDataString(kvp.Key)}={Uri.EscapeDataString(kvp.Value)}"));
        
        return Url.Action("Index") + "?" + queryString;
    }
}

@section Scripts {
    <script>
        function renewLicense(licenseId) {
            if (confirm('Are you sure you want to renew this license?')) {
                // TODO: Implement renew functionality
                alert('Renew functionality will be implemented in a future update.');
            }
        }

        function suspendLicense(licenseId) {
            if (confirm('Are you sure you want to suspend this license?')) {
                // TODO: Implement suspend functionality
                alert('Suspend functionality will be implemented in a future update.');
            }
        }

        function revokeLicense(licenseId) {
            if (confirm('Are you sure you want to revoke this license? This action cannot be undone.')) {
                // TODO: Implement revoke functionality
                alert('Revoke functionality will be implemented in a future update.');
            }
        }

        function exportLicenses() {
            // TODO: Implement export functionality
            alert('Export functionality will be implemented in a future update.');
        }

        function refreshPage() {
            window.location.reload();
        }

        // Auto-submit form when expiring checkbox is changed
        document.querySelector('input[name="Filter.ShowExpiring"]').addEventListener('change', function() {
            if (this.checked) {
                this.closest('form').submit();
            }
        });
    </script>
}

<style>
    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.9rem;
    }
    
    .table td {
        vertical-align: middle;
        font-size: 0.9rem;
    }
    
    .badge-success {
        background-color: #198754 !important;
    }
    
    .badge-danger {
        background-color: #dc3545 !important;
    }
    
    .badge-warning {
        background-color: #ffc107 !important;
        color: #000 !important;
    }
    
    .badge-dark {
        background-color: #212529 !important;
    }
    
    .badge-info {
        background-color: #0dcaf0 !important;
        color: #000 !important;
    }
    
    .badge-secondary {
        background-color: #6c757d !important;
    }
    
    .card {
        border-radius: 10px;
        box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
    }
    
    .btn-group .btn {
        border-radius: 0.25rem;
        margin: 0 1px;
    }
    
    .table-hover tbody tr:hover {
        background-color: rgba(0, 0, 0, 0.02);
    }
</style>
