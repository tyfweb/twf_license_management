@model TechWayFit.Licensing.WebUI.ViewModels.Product.ProductEditViewModel
@{
    ViewData["Title"] = "Edit Product";
    ViewData["Description"] = $"Edit product configuration for {Model.ProductName}";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="header">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">Edit Product</h2>
                <p class="text-muted mb-0">Update product configuration and settings for @Model.ProductName</p>
            </div>
            <div class="d-flex gap-2">
                <a href="@Url.Action("Details", new { id = Model.ProductId })" class="btn btn-outline-secondary">
                    <i class="fas fa-eye me-2"></i>View Details
                </a>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Products
                </a>
            </div>
        </div>
    </div>

    <form method="post" asp-action="Edit" class="needs-validation" novalidate>
        <input type="hidden" asp-for="ProductId" />
        
        <div class="row">
            <div class="col-lg-8">
                <!-- Basic Information Section -->
                <div class="edit-section mb-4">
                    <div class="section-header">
                        <h5><i class="fas fa-info-circle me-2"></i>Basic Information</h5>
                    </div>
                    <div class="section-content">
                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="ProductId" class="form-label">Product ID</label>
                                    <input asp-for="ProductId" class="form-control" readonly />
                                    <div class="form-text">Product ID cannot be changed after creation</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    <label asp-for="ProductName" class="form-label">Product Name</label>
                                    <input asp-for="ProductName" class="form-control" />
                                    <span asp-validation-for="ProductName" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group mb-3">
                                    <label asp-for="ProductType" class="form-label">Product Type</label>
                                    <select asp-for="ProductType" class="form-select" asp-items="Html.GetEnumSelectList<TechWayFit.Licensing.Core.Models.ProductType>()">
                                        <option value="">Select Type</option>
                                    </select>
                                    <span asp-validation-for="ProductType" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group mb-3">
                                    <label asp-for="Version" class="form-label">Version</label>
                                    <input asp-for="Version" class="form-control" />
                                    <span asp-validation-for="Version" class="text-danger"></span>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-check mt-4">
                                    <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                    <label asp-for="IsActive" class="form-check-label">
                                        Product is Active
                                    </label>
                                </div>
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            <label asp-for="Description" class="form-label">Description</label>
                            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe the product and its capabilities..."></textarea>
                            <span asp-validation-for="Description" class="text-danger"></span>
                        </div>
                    </div>
                </div>

                <!-- Metadata Section -->
                <div class="edit-section mb-4">
                    <div class="section-header">
                        <h5><i class="fas fa-tags me-2"></i>Metadata & Settings</h5>
                    </div>
                    <div class="section-content">
                        <div id="metadata-container">
                            @if (Model.Metadata != null && Model.Metadata.Any())
                            {
                                @for (int i = 0; i < Model.Metadata.Count; i++)
                                {
                                    var kvp = Model.Metadata.ElementAt(i);
                                    <div class="row mb-3 metadata-row">
                                        <div class="col-md-5">
                                            <input type="text" name="Metadata[@i].Key" value="@kvp.Key" class="form-control" placeholder="Key" />
                                        </div>
                                        <div class="col-md-5">
                                            <input type="text" name="Metadata[@i].Value" value="@kvp.Value" class="form-control" placeholder="Value" />
                                        </div>
                                        <div class="col-md-2">
                                            <button type="button" class="btn btn-outline-danger btn-sm remove-metadata">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <button type="button" id="add-metadata" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-plus me-1"></i>Add Metadata
                        </button>
                    </div>
                </div>

                <!-- Change History Section -->
                <div class="edit-section mb-4">
                    <div class="section-header">
                        <h5><i class="fas fa-history me-2"></i>Change History</h5>
                    </div>
                    <div class="section-content">
                        <div class="change-history">
                            <div class="change-item">
                                <div class="change-date">@DateTime.Now.ToString("MMM dd, yyyy")</div>
                                <div class="change-event">
                                    <i class="fas fa-edit text-warning me-2"></i>
                                    Product being edited
                                </div>
                            </div>
                            @if (Model.CreatedDate.HasValue)
                            {
                                <div class="change-item">
                                    <div class="change-date">@Model.CreatedDate.Value.ToString("MMM dd, yyyy")</div>
                                    <div class="change-event">
                                        <i class="fas fa-plus-circle text-success me-2"></i>
                                        Product created
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Sidebar -->
            <div class="col-lg-4">
                <!-- Save Actions -->
                <div class="sidebar-section mb-4">
                    <div class="section-header">
                        <h5><i class="fas fa-save me-2"></i>Save Changes</h5>
                    </div>
                    <div class="section-content">
                        <div class="d-grid gap-2">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save me-2"></i>Update Product
                            </button>
                            <a href="@Url.Action("Details", new { id = Model.ProductId })" class="btn btn-outline-secondary">
                                <i class="fas fa-times me-2"></i>Cancel Changes
                            </a>
                        </div>
                        
                        <div class="alert alert-info mt-3">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Note:</strong> Changes will be saved immediately and may affect existing licenses.
                        </div>
                    </div>
                </div>

                <!-- Current Settings -->
                <div class="sidebar-section mb-4">
                    <div class="section-header">
                        <h5><i class="fas fa-cog me-2"></i>Current Settings</h5>
                    </div>
                    <div class="section-content">
                        <div class="setting-item">
                            <label class="setting-label">Product ID</label>
                            <div class="setting-value">@Model.ProductId</div>
                        </div>
                        <div class="setting-item">
                            <label class="setting-label">Current Version</label>
                            <div class="setting-value">@Model.Version</div>
                        </div>
                        <div class="setting-item">
                            <label class="setting-label">Product Type</label>
                            <div class="setting-value">@Model.ProductType</div>
                        </div>
                        <div class="setting-item">
                            <label class="setting-label">Status</label>
                            <div class="setting-value">
                                @if (Model.IsActive)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Inactive</span>
                                }
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Help -->
                <div class="sidebar-section">
                    <div class="section-header">
                        <h5><i class="fas fa-question-circle me-2"></i>Edit Guidelines</h5>
                    </div>
                    <div class="section-content">
                        <div class="small">
                            <div class="mb-2">
                                <strong>Product ID:</strong> Cannot be changed once created.
                            </div>
                            <div class="mb-2">
                                <strong>Version Updates:</strong> Consider impact on existing licenses.
                            </div>
                            <div class="mb-2">
                                <strong>Status Changes:</strong> Deactivating may affect license validation.
                            </div>
                            <div class="mb-2">
                                <strong>Metadata:</strong> Custom properties for additional product information.
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

<style>
    .header {
        margin-bottom: 2rem;
    }

    /* Section Styling */
    .edit-section, .sidebar-section {
        background: white;
        border: 1px solid #e9ecef;
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.2s ease-in-out;
    }

    .edit-section:hover, .sidebar-section:hover {
        border-color: #dee2e6;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.08);
    }

    .section-header {
        background: #f8f9fa;
        border-bottom: 1px solid #e9ecef;
        padding: 1rem 1.5rem;
        margin: 0;
    }

    .section-header h5 {
        margin: 0;
        font-weight: 600;
        color: #1a1a1a;
        font-size: 1rem;
    }

    .section-header i {
        color: #3b82f6;
    }

    .section-content {
        padding: 1.5rem;
    }

    /* Form Styling */
    .form-group {
        margin-bottom: 1rem;
    }

    .form-label {
        font-weight: 500;
        color: #374151;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
    }

    .form-control, .form-select {
        border: 1px solid #e9ecef;
        border-radius: 6px;
        padding: 0.625rem 0.75rem;
        font-size: 0.875rem;
        transition: all 0.2s ease-in-out;
    }

    .form-control:focus, .form-select:focus {
        border-color: #3b82f6;
        box-shadow: 0 0 0 0.2rem rgba(59, 130, 246, 0.1);
    }

    .form-control[readonly] {
        background-color: #f8f9fa;
        color: #6c757d;
    }

    .form-text {
        font-size: 0.75rem;
        color: #6c757d;
        margin-top: 0.25rem;
    }

    .form-check {
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

    .form-check-input {
        margin: 0;
    }

    .form-check-label {
        font-size: 0.875rem;
        color: #374151;
        margin: 0;
    }

    /* Button Styling */
    .btn {
        font-weight: 500;
        border-radius: 6px;
        padding: 0.625rem 1.25rem;
        font-size: 0.875rem;
        transition: all 0.2s ease-in-out;
    }

    .btn-primary {
        background-color: #3b82f6;
        border-color: #3b82f6;
    }

    .btn-primary:hover {
        background-color: #2563eb;
        border-color: #2563eb;
    }

    .btn-outline-secondary {
        border-color: #e9ecef;
        color: #6c757d;
    }

    .btn-outline-secondary:hover {
        background-color: #f8f9fa;
        border-color: #dee2e6;
        color: #495057;
    }

    .btn-outline-danger {
        border-color: #dc3545;
        color: #dc3545;
    }

    .btn-outline-danger:hover {
        background-color: #dc3545;
        border-color: #dc3545;
        color: white;
    }

    .btn-outline-primary {
        border-color: #3b82f6;
        color: #3b82f6;
    }

    .btn-outline-primary:hover {
        background-color: #3b82f6;
        border-color: #3b82f6;
        color: white;
    }

    /* Metadata Rows */
    .metadata-row {
        background: #f8f9fa;
        border-radius: 6px;
        padding: 0.75rem;
        border: 1px solid #e9ecef;
        transition: all 0.2s ease-in-out;
    }

    .metadata-row:hover {
        background: #f1f3f4;
        border-color: #dee2e6;
    }

    /* Setting Items */
    .setting-item {
        padding: 0.75rem 0;
        border-bottom: 1px solid #e9ecef;
    }

    .setting-item:last-child {
        border-bottom: none;
    }

    .setting-label {
        font-size: 0.75rem;
        font-weight: 600;
        color: #6c757d;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.25rem;
        display: block;
    }

    .setting-value {
        font-size: 0.875rem;
        color: #1a1a1a;
        font-weight: 500;
    }

    /* Change History */
    .change-history {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
    }

    .change-item {
        padding: 0.75rem;
        background: #f8f9fa;
        border-radius: 6px;
        border-left: 4px solid #3b82f6;
        transition: all 0.2s ease-in-out;
    }

    .change-item:hover {
        background: #f1f3f4;
    }

    .change-date {
        font-size: 0.75rem;
        font-weight: 600;
        color: #6c757d;
        text-transform: uppercase;
        letter-spacing: 0.5px;
        margin-bottom: 0.25rem;
    }

    .change-event {
        font-size: 0.875rem;
        color: #1a1a1a;
        display: flex;
        align-items: center;
    }

    /* Alert Styling */
    .alert-info {
        background-color: #e1f5fe;
        border-color: #b3e5fc;
        color: #0277bd;
        border-radius: 6px;
        font-size: 0.875rem;
    }

    .alert-danger {
        background-color: #ffebee;
        border-color: #ffcdd2;
        color: #c62828;
        border-radius: 6px;
        font-size: 0.875rem;
    }

    /* Badge Styling */
    .badge {
        font-size: 0.75rem;
        font-weight: 500;
        padding: 0.375rem 0.75rem;
        border-radius: 4px;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .header .d-flex {
            flex-direction: column;
            gap: 1rem;
        }
        
        .section-header, .section-content {
            padding: 1rem;
        }
        
        .metadata-row {
            margin-bottom: 1rem;
        }
    }
</style>



@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
     <script>
        let metadataIndex = @(Model.Metadata?.Count ?? 0);
        
        document.getElementById('add-metadata').addEventListener('click', function() {
            const container = document.getElementById('metadata-container');
            const newRow = document.createElement('div');
            newRow.className = 'row mb-2 metadata-row';
            newRow.innerHTML = `
                <div class="col-md-5">
                    <input type="text" name="Metadata[${metadataIndex}].Key" class="form-control" placeholder="Key" />
                </div>
                <div class="col-md-5">
                    <input type="text" name="Metadata[${metadataIndex}].Value" class="form-control" placeholder="Value" />
                </div>
                <div class="col-md-2">
                    <button type="button" class="btn btn-outline-danger btn-sm remove-metadata">
                        <i class="fas fa-times"></i>
                    </button>
                </div>
            `;
            container.appendChild(newRow);
            metadataIndex++;
        });

        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-metadata') || e.target.parentElement.classList.contains('remove-metadata')) {
                const row = e.target.closest('.metadata-row');
                if (row) {
                    row.remove();
                }
            }
        });

        // Form validation enhancement
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();

        // Auto-save warning
        let formChanged = false;
        document.querySelectorAll('input, select, textarea').forEach(element => {
            element.addEventListener('change', function() {
                formChanged = true;
            });
        });

        window.addEventListener('beforeunload', function(e) {
            if (formChanged) {
                e.preventDefault();
                e.returnValue = '';
            }
        });

        // Form submission handling
        document.querySelector('form').addEventListener('submit', function() {
            formChanged = false;
        });
    </script>
   
}
