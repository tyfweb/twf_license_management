@using TechWayFit.Licensing.Core.Models
@model TechWayFit.Licensing.Management.Web.ViewModels.Product.ProductListViewModel
@{
    ViewData["Title"] = "Product Management";
    ViewData["Description"] = "Manage software products, tiers, and licensing configurations";
}

@section Styles {
    <link rel="stylesheet" href="~/css/product-management.css" />
}

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="header mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">Product Management</h2>
                <p class="text-muted mb-0">Manage your products, versions, and license tiers.</p>
            </div>
            <div class="d-flex gap-2">
                <a href="@Url.Action("Create", "Product")" class="btn btn-primary">
                    <i class="fas fa-plus me-2"></i>New Product
                </a>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row g-2 mb-3">
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-cube"></i>
                    </div>
                    <div class="stats-number">@(ViewBag.TotalProducts ?? Model.Products.Count)</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Total Products</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-success">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="stats-number">@(ViewBag.ActiveProducts ?? Model.Products.Count(p => p.IsActive))</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Active Products</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-key"></i>
                    </div>
                    <div class="stats-number">@Model.Products.Sum(p => p.LicenseCount)</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Total Licenses</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="stats-number">@Model.Products.Sum(p => p.ConsumerCount)</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Total Consumers</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <h5><i class="fas fa-bolt me-2"></i>Quick Actions</h5>
                </div>
                <div class="section-content">
                    <div class="row g-2">
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-primary w-100" onclick="exportProducts()">
                                <i class="fas fa-download me-2"></i>Export Products
                            </button>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-secondary w-100" onclick="importProducts()">
                                <i class="fas fa-upload me-2"></i>Import Products
                            </button>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-info w-100" onclick="bulkUpdate()">
                                <i class="fas fa-edit me-2"></i>Bulk Update
                            </button>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-success w-100" onclick="generateReport()">
                                <i class="fas fa-chart-bar me-2"></i>Generate Report
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row g-2 mb-3">
        <div class="col-12">
            <div class="search-section">
                <form method="get" class="d-flex gap-2 align-items-end">
                    <div class="flex-grow-1">
                        <input type="text" name="searchTerm" class="form-control" placeholder="Search products..." value="@Model.SearchTerm">
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="showInactive" id="showInactive" value="true" @(Model.ShowInactiveProducts ? "checked" : "")>
                        <label class="form-check-label" for="showInactive">
                            Include inactive products
                        </label>
                    </div>
                    <div class="filter-button">
                        <button type="submit" class="btn btn-outline-primary">
                            <i class="fas fa-sliders-h me-1"></i>Filter
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Product Directory -->
    <div class="row">
        <div class="col-12">
            <div class="edit-section">
                <div class="section-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5><i class="fas fa-cube me-2"></i>Product Directory</h5>
                        <div class="btn-group" role="group" aria-label="View toggle">
                            <button type="button" class="btn btn-outline-secondary btn-sm active" id="gridViewBtn" onclick="switchView('grid')">
                                <i class="fas fa-th-large me-1"></i>Grid
                            </button>
                            <button type="button" class="btn btn-outline-secondary btn-sm" id="listViewBtn" onclick="switchView('list')">
                                <i class="fas fa-list me-1"></i>List
                            </button>
                        </div>
                    </div>
                </div>
                <div class="section-content">
                    @if (Model?.Products != null && Model.Products.Any())
                    {
                        <!-- Grid View -->
                        <div id="gridView" class="view-container">
                            <div class="row g-2">
                                @foreach (var product in Model.Products)
                                {
                                    <div class="col-sm-6 col-lg-4 col-xl-3">
                                        <div class="product-card">
                                            <div class="product-card-header">
                                                <div class="product-info">
                                                    <h6 class="product-name">
                                                        <i class="fas fa-cube me-2"></i>@product.ProductName
                                                    </h6>
                                                </div>
                                                @if (!string.IsNullOrEmpty(product.Version))
                                                {
                                                    <span class="badge bg-primary">v@product.Version</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">No Version</span>
                                                }
                                            </div>
                                            <div class="product-card-body">
                                                <div class="product-detail">
                                                    <label class="detail-label">Product Type</label>
                                                    <div class="detail-value">
                                                        <i class="fas fa-tag me-1"></i>@(product.ProductType != default(ProductType) ? product.ProductType.ToString() : "Standard")
                                                    </div>
                                                </div>
                                                <div class="product-detail">
                                                    <label class="detail-label">Tiers</label>
                                                    <div class="detail-value">
                                                        <i class="fas fa-layer-group me-1"></i>@product.TierCount tiers
                                                    </div>
                                                </div>
                                                <div class="product-detail">
                                                    <label class="detail-label">Licenses</label>
                                                    <div class="detail-value">
                                                        <i class="fas fa-key me-1"></i>@product.LicenseCount licenses
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="product-card-actions">
                                                <div class="d-flex justify-content-between gap-1">
                                                    <a href="@Url.Action("Details", "Product", new { id = product.ProductId })" class="btn btn-sm btn-outline-primary flex-fill text-center">
                                                        <i class="fas fa-eye"></i>
                                                        <span class="d-none d-lg-inline ms-1">View</span>
                                                    </a>
                                                    <a href="@Url.Action("Edit", "Product", new { id = product.ProductId })" class="btn btn-sm btn-outline-secondary flex-fill text-center">
                                                        <i class="fas fa-edit"></i>
                                                        <span class="d-none d-lg-inline ms-1">Edit</span>
                                                    </a>
                                                    <button type="button" class="btn btn-sm btn-outline-info flex-fill text-center" onclick="viewVersions('@product.ProductId')">
                                                        <i class="fas fa-code-branch"></i>
                                                        <span class="d-none d-lg-inline ms-1">Versions</span>
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-danger flex-fill text-center" onclick="confirmDelete('@product.ProductId', '@product.ProductName')">
                                                        <i class="fas fa-trash"></i>
                                                        <span class="d-none d-lg-inline ms-1">Delete</span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>
                        </div>

                        <!-- List View -->
                        <div id="listView" class="view-container" style="display: none;">
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead class="table-light">
                                        <tr>
                                            <th>Product Name</th>
                                            <th>Version</th>
                                            <th>Type</th>
                                            <th>Tiers</th>
                                            <th>Licenses</th>
                                            <th>Features</th>
                                            <th>Status</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var product in Model.Products)
                                        {
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <i class="fas fa-cube me-2 text-muted"></i>
                                                        <div>
                                                            <div class="fw-semibold">@product.ProductName</div>
                                                            <small class="text-muted">ID: @product.ProductId</small>
                                                        </div>
                                                    </div>
                                                </td>
                                                <td>
                                                    @if (!string.IsNullOrEmpty(product.Version))
                                                    {
                                                        <span class="badge bg-primary">v@product.Version</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-muted">-</span>
                                                    }
                                                </td>
                                                <td>
                                                    <span class="badge bg-info">@(product.ProductType != default(ProductType) ? product.ProductType.ToString() : "Standard")</span>
                                                </td>
                                                <td>
                                                    <span class="badge bg-secondary rounded-pill">@product.TierCount</span>
                                                </td>
                                                <td>
                                                    <span class="badge bg-primary rounded-pill">@product.LicenseCount</span>
                                                </td>
                                                <td>
                                                    <span class="badge bg-success rounded-pill">@product.FeatureCount</span>
                                                </td>
                                                <td>
                                                    @if (product.IsActive)
                                                    {
                                                        <span class="badge bg-success">Active</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-secondary">Inactive</span>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <a href="@Url.Action("Details", "Product", new { id = product.ProductId })" class="btn btn-outline-primary btn-sm" title="View Details">
                                                            <i class="fas fa-eye"></i>
                                                        </a>
                                                        <a href="@Url.Action("Edit", "Product", new { id = product.ProductId })" class="btn btn-outline-secondary btn-sm" title="Edit">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                        <button type="button" class="btn btn-outline-info btn-sm" title="View Versions" onclick="viewVersions('@product.ProductId')">
                                                            <i class="fas fa-code-branch"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-outline-danger btn-sm" title="Delete" onclick="confirmDelete('@product.ProductId', '@product.ProductName')">
                                                            <i class="fas fa-trash"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-cube fa-3x text-muted mb-3"></i>
                            <h6 class="text-muted">No products found</h6>
                            <p class="text-muted mb-3">
                                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                                {
                                    <span>No products match your search criteria.</span>
                                }
                                else
                                {
                                    <span>Start by adding your first product.</span>
                                }
                            </p>
                            <a href="@Url.Action("Create", "Product")" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>Add First Product
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle text-warning me-2"></i>Confirm Delete
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the product "<strong id="deleteProductName"></strong>"?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Warning:</strong> This action cannot be undone and will affect all associated licenses and consumers.
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Delete Product
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // View switching functionality
        function switchView(viewType) {
            const gridView = document.getElementById('gridView');
            const listView = document.getElementById('listView');
            const gridBtn = document.getElementById('gridViewBtn');
            const listBtn = document.getElementById('listViewBtn');

            if (viewType === 'grid') {
                gridView.style.display = 'block';
                listView.style.display = 'none';
                gridBtn.classList.add('active');
                listBtn.classList.remove('active');
                localStorage.setItem('productViewType', 'grid');
            } else {
                gridView.style.display = 'none';
                listView.style.display = 'block';
                gridBtn.classList.remove('active');
                listBtn.classList.add('active');
                localStorage.setItem('productViewType', 'list');
            }
        }

        // Initialize view based on saved preference
        document.addEventListener('DOMContentLoaded', function() {
            const savedView = localStorage.getItem('productViewType') || 'grid';
            switchView(savedView);
        });

        function confirmDelete(productId, productName) {
            document.getElementById('deleteProductName').textContent = productName;
            document.getElementById('deleteForm').setAttribute('action', '@Url.Action("Delete", "Product")/' + productId);
            new bootstrap.Modal(document.getElementById('deleteModal')).show();
        }

        function viewVersions(productId) {
            window.location.href = '@Url.Action("Details", "Product")/' + productId;
        }

        function exportProducts() {
            alert('Export functionality will be implemented in future updates.');
        }

        function importProducts() {
            alert('Import functionality will be implemented in future updates.');
        }

        function bulkUpdate() {
            alert('Bulk update functionality will be implemented in future updates.');
        }

        function generateReport() {
            alert('Report generation functionality will be implemented in future updates.');
        }
    </script>
}

