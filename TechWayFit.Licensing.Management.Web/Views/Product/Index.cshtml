@model TechWayFit.Licensing.WebUI.ViewModels.Product.ProductListViewModel
@{
    ViewData["Title"] = "Product Management";
    ViewData["Description"] = "Manage software products, tiers, and licensing configurations";
}

<div class="container-fluid">
    <!-- Hero Section -->
    <div class="hero-section mb-4">
        <div class="row align-items-center">
            <div class="col-lg-8">
                <h1 class="hero-title">
                    <i class="fas fa-cube text-primary me-3"></i>
                    Product Management
                </h1>
                <p class="hero-subtitle">
                    Manage your software products, configure tiers, and define licensing features
                </p>
            </div>
            <div class="col-lg-4 text-lg-end">
                <a href="@Url.Action("Create")" class="btn btn-primary btn-lg shadow-sm">
                    <i class="fas fa-plus me-2"></i>
                    Create Product
                </a>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row mb-4">
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon bg-primary">
                            <i class="fas fa-cube"></i>
                        </div>
                        <div class="ms-3">
                            <div class="stat-value">@(ViewBag.TotalProducts ?? Model.Products.Count)</div>
                            <div class="stat-label">Total Products</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon bg-success">
                            <i class="fas fa-check-circle"></i>
                        </div>
                        <div class="ms-3">
                            <div class="stat-value">@(ViewBag.ActiveProducts ?? Model.Products.Count(p => p.IsActive))</div>
                            <div class="stat-label">Active Products</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon bg-warning">
                            <i class="fas fa-pause-circle"></i>
                        </div>
                        <div class="ms-3">
                            <div class="stat-value">@(ViewBag.InactiveProducts ?? Model.Products.Count(p => !p.IsActive))</div>
                            <div class="stat-label">Inactive Products</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card">
                <div class="stat-card-body">
                    <div class="d-flex align-items-center">
                        <div class="stat-icon bg-info">
                            <i class="fas fa-certificate"></i>
                        </div>
                        <div class="ms-3">
                            <div class="stat-value">@Model.Products.Sum(p => p.LicenseCount)</div>
                            <div class="stat-label">Total Licenses</div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-6">
                    <div class="form-floating">
                        <input type="text" class="form-control" id="searchTerm" name="searchTerm" 
                               value="@Model.SearchTerm" placeholder="Search products...">
                        <label for="searchTerm">
                            <i class="fas fa-search me-2"></i>Search products
                        </label>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-check mt-3">
                        <input class="form-check-input" type="checkbox" id="showInactive" name="showInactive" 
                               value="true" @(Model.ShowInactiveProducts ? "checked" : "")>
                        <label class="form-check-label" for="showInactive">
                            Show inactive products
                        </label>
                    </div>
                </div>
                <div class="col-md-3">
                    <button type="submit" class="btn btn-outline-primary w-100">
                        <i class="fas fa-filter me-2"></i>Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <!-- Products Grid -->
    @if (Model.Products.Any())
    {
        <div class="row">
            @foreach (var product in Model.Products)
            {
                <div class="col-lg-6 col-xl-4 mb-4">
                    <div class="card product-card h-100">
                        <div class="card-header d-flex justify-content-between align-items-center">
                            <div class="d-flex align-items-center">
                                <i class="fas fa-cube text-primary me-2"></i>
                                <strong>@product.ProductName</strong>
                            </div>
                            <div class="d-flex align-items-center">
                                @if (product.IsActive)
                                {
                                    <span class="badge bg-success">Active</span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary">Inactive</span>
                                }
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="mb-3">
                                <small class="text-muted">Product ID</small>
                                <div class="fw-medium">@product.ProductId</div>
                            </div>
                            
                            <div class="mb-3">
                                <small class="text-muted">Type & Version</small>
                                <div class="d-flex justify-content-between">
                                    <span class="badge bg-light text-dark">@product.ProductType</span>
                                    <span class="text-muted">v@product.Version</span>
                                </div>
                            </div>

                            <div class="row text-center mb-3">
                                <div class="col-6">
                                    <div class="border-end">
                                        <div class="fw-bold text-primary">@product.LicenseCount</div>
                                        <small class="text-muted">Licenses</small>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="fw-bold text-success">@product.ConsumerCount</div>
                                    <small class="text-muted">Consumers</small>
                                </div>
                            </div>

                            <div class="mb-3">
                                <small class="text-muted">Created</small>
                                <div class="small">@product.CreatedAt.ToString("MMM dd, yyyy")</div>
                            </div>
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="btn-group w-100" role="group">
                                <a href="@Url.Action("Details", new { id = product.ProductId })" 
                                   class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-eye me-1"></i>View
                                </a>
                                <a href="@Url.Action("Edit", new { id = product.ProductId })" 
                                   class="btn btn-outline-secondary btn-sm">
                                    <i class="fas fa-edit me-1"></i>Edit
                                </a>
                                <a href="@Url.Action("Delete", new { id = product.ProductId })" 
                                   class="btn btn-outline-danger btn-sm">
                                    <i class="fas fa-trash me-1"></i>Delete
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Pagination would go here if needed -->
    }
    else
    {
        <div class="text-center py-5">
            <div class="mb-4">
                <i class="fas fa-cube fa-4x text-muted"></i>
            </div>
            <h4 class="text-muted">No Products Found</h4>
            <p class="text-muted mb-4">
                @if (!string.IsNullOrEmpty(Model.SearchTerm))
                {
                    <span>No products match your search criteria.</span>
                }
                else
                {
                    <span>Get started by creating your first product.</span>
                }
            </p>
            <a href="@Url.Action("Create")" class="btn btn-primary">
                <i class="fas fa-plus me-2"></i>Create First Product
            </a>
        </div>
    }
</div>

<style>
.product-card {
    transition: all 0.3s ease;
    border: none;
    box-shadow: var(--tw-shadow-sm);
}

.product-card:hover {
    box-shadow: var(--tw-shadow-lg);
    transform: translateY(-2px);
}

.product-card .card-header {
    background: linear-gradient(135deg, var(--tw-primary-50) 0%, var(--tw-primary-100) 100%);
    border-bottom: 1px solid var(--tw-border-color);
}

.stat-card {
    background: var(--tw-white);
    border-radius: var(--tw-radius-lg);
    box-shadow: var(--tw-shadow-sm);
    transition: all 0.3s ease;
    border: none;
}

.stat-card:hover {
    box-shadow: var(--tw-shadow-md);
    transform: translateY(-1px);
}

.stat-card-body {
    padding: 1.5rem;
}

.stat-icon {
    width: 3rem;
    height: 3rem;
    border-radius: var(--tw-radius-full);
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
}

.stat-value {
    font-size: 1.875rem;
    font-weight: 700;
    color: var(--tw-gray-900);
    line-height: 1;
}

.stat-label {
    font-size: 0.875rem;
    color: var(--tw-gray-600);
    margin-top: 0.25rem;
}
</style>