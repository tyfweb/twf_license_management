@model TechWayFit.Licensing.WebUI.Models.LicenseGenerationResultViewModel
@{
    ViewData["Title"] = "License Generation Result";
}

@if (Model.Success)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        <strong>Success!</strong> License has been generated successfully.
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>

    <div class="row">
        <div class="col-lg-6">
            <div class="card">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-certificate me-2"></i>
                        License Details
                    </h5>
                </div>
                <div class="card-body">
                    @if (Model.License != null)
                    {
                    <dl class="row">
                        <dt class="col-sm-4">Licensed To:</dt>
                        <dd class="col-sm-8">@Model.License.LicensedTo</dd>

                        <dt class="col-sm-4">License ID:</dt>
                        <dd class="col-sm-8"><code>@Model.License.LicenseId</code></dd>

                        <dt class="col-sm-4">Contact Person:</dt>
                        <dd class="col-sm-8">@Model.License.ContactPerson</dd>

                        <dt class="col-sm-4">Contact Email:</dt>
                        <dd class="col-sm-8">@Model.License.ContactEmail</dd>

                        @if (!string.IsNullOrEmpty(Model.License.SecondaryContactPerson))
                        {
                            <dt class="col-sm-4">Secondary Contact:</dt>
                            <dd class="col-sm-8">@Model.License.SecondaryContactPerson</dd>
                        }

                        @if (!string.IsNullOrEmpty(Model.License.SecondaryContactEmail))
                        {
                            <dt class="col-sm-4">Secondary Email:</dt>
                            <dd class="col-sm-8">@Model.License.SecondaryContactEmail</dd>
                        }

                        <dt class="col-sm-4">License Tier:</dt>
                        <dd class="col-sm-8">
                            <span class="badge bg-@(Model.License.Tier == TechWayFit.Licensing.Core.Models.LicenseTier.Community ? "success" : 
                                                  Model.License.Tier == TechWayFit.Licensing.Core.Models.LicenseTier.Professional ? "primary" : "warning")">
                                @Model.License.Tier
                            </span>
                        </dd>

                        <dt class="col-sm-4">Valid From:</dt>
                        <dd class="col-sm-8">@Model.License.ValidFrom.ToString("yyyy-MM-dd HH:mm:ss") UTC</dd>

                        <dt class="col-sm-4">Valid To:</dt>
                        <dd class="col-sm-8">@Model.License.ValidTo.ToString("yyyy-MM-dd HH:mm:ss") UTC</dd>

                        <dt class="col-sm-4">Issued At:</dt>
                        <dd class="col-sm-8">@Model.License.IssuedAt.ToString("yyyy-MM-dd HH:mm:ss") UTC</dd>

                        <dt class="col-sm-4">Status:</dt>
                        <dd class="col-sm-8">
                            @if (Model.License.IsValid)
                            {
                                <span class="badge bg-success">
                                    <i class="fas fa-check me-1"></i>Valid
                                </span>
                            }
                            else
                            {
                                <span class="badge bg-danger">
                                    <i class="fas fa-times me-1"></i>Expired
                                </span>
                            }
                        </dd>
                    </dl>

                    <h6 class="mt-4">Features Included:</h6>
                    <div class="row">
                        @foreach (var feature in Model.License.FeaturesIncluded)
                        {
                            <div class="col-md-6 mb-2">
                                <div class="card border-left-primary">
                                    <div class="card-body py-2">
                                        <div class="d-flex align-items-center">
                                            <i class="fas fa-@(feature.IsEnabled ? "check text-success" : "times text-danger") me-2"></i>
                                            <div>
                                                <strong>@feature.Name</strong>
                                                <br>
                                                <small class="text-muted">@feature.Description</small>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    }
                    else
                    {
                        <p class="text-danger">License data is not available.</p>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-file-code me-2"></i>
                        Generated License File
                    </h5>
                    <button type="button" class="btn btn-sm btn-light" id="downloadBtn">
                        <i class="fas fa-download me-1"></i>Download
                    </button>
                </div>
                <div class="card-body p-0">
                    <div class="json-viewer p-3">
                        <pre id="licenseJson">@Model.LicenseJson</pre>
                    </div>
                </div>
                <div class="card-footer">
                    <small class="text-muted">
                        <i class="fas fa-info-circle me-1"></i>
                        This license file should be added to your application's configuration.
                    </small>
                </div>
            </div>

            <div class="mt-3">
                <div class="card">
                    <div class="card-header bg-info text-white">
                        <h6 class="card-title mb-0">
                            <i class="fas fa-cog me-2"></i>
                            Integration Instructions
                        </h6>
                    </div>
                    <div class="card-body">
                        <p><strong>To use this license in your API Gateway:</strong></p>
                        <ol>
                            <li>Download the license file</li>
                            <li>Add it to your application's configuration directory</li>
                            <li>Update your <code>appsettings.json</code>:</li>
                        </ol>
                        <div class="bg-light p-2 rounded">
                            <code>
{<br>
&nbsp;&nbsp;"Licensing": {<br>
&nbsp;&nbsp;&nbsp;&nbsp;"LicenseFilePath": "path/to/@Model.FileName"<br>
&nbsp;&nbsp;}<br>
}
                            </code>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row mt-4">
        <div class="col-12">
            <div class="d-flex justify-content-between">
                <a href="@Url.Action("Index", "License")" class="btn btn-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Generate Another
                </a>
                <a href="@Url.Action("Validate", "License")" class="btn btn-outline-primary">
                    <i class="fas fa-check me-1"></i>Validate License
                </a>
            </div>
        </div>
    </div>
}
else
{
    <div class="alert alert-danger" role="alert">
        <i class="fas fa-exclamation-triangle me-2"></i>
        <strong>Error!</strong> @Model.ErrorMessage
    </div>
    
    <a href="@Url.Action("Index", "License")" class="btn btn-primary">
        <i class="fas fa-arrow-left me-1"></i>Back to Generator
    </a>
}

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add event listener to download button
            document.getElementById('downloadBtn').addEventListener('click', function(event) {
                downloadLicense(event);
            });
        });
        
        function downloadLicense(event) {
            // Prevent any default behavior and event bubbling
            if (event) {
                event.preventDefault();
                event.stopPropagation();
            }
            
            try {
                console.log('Starting download...');
                
                // Create the license JSON string
                var licenseJson = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.LicenseJson));
                var fileName = '@Model.FileName';
                
                console.log('License data prepared, filename:', fileName);
                
                // Create a blob with the license data
                var blob = new Blob([licenseJson], { type: 'application/json' });
                var url = window.URL.createObjectURL(blob);
                
                console.log('Blob created, triggering download...');
                
                // Create a temporary link and trigger download
                var a = document.createElement('a');
                a.style.display = 'none';
                a.href = url;
                a.download = fileName;
                document.body.appendChild(a);
                a.click();
                
                console.log('Download triggered successfully');
                
                // Clean up
                window.URL.revokeObjectURL(url);
                document.body.removeChild(a);
                
                // Show success message
                alert('License file download started!');
                
            } catch (error) {
                console.error('Error downloading license:', error);
                alert('Error downloading license file: ' + error.message);
            }
            
            return false; // Prevent any form submission
        }

        // Copy license JSON to clipboard
        function copyToClipboard() {
            var licenseText = document.getElementById('licenseJson').textContent;
            navigator.clipboard.writeText(licenseText).then(function() {
                alert('License JSON copied to clipboard!');
            });
        }
    </script>
}
