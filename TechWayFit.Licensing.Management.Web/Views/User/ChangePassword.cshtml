@model TechWayFit.Licensing.WebUI.ViewModels.User.ChangePasswordViewModel
@{
    ViewData["Title"] = "Change Password";
    ViewData["Description"] = "Update user account password securely";
}

@section Styles {
    <link rel="stylesheet" href="~/css/product-management.css" />
}

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="header mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">Change Password</h2>
                <p class="text-muted mb-0">Update the password for user <strong>@Model.UserName</strong> with enhanced security requirements.</p>
            </div>
            <div class="d-flex gap-2">
                <a href="@Url.Action("Details", new { id = Model.UserId })" class="btn btn-outline-info">
                    <i class="fas fa-user me-2"></i>User Details
                </a>
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-2"></i>Back to Users
                </a>
            </div>
        </div>
    </div>

    <!-- Change Password Form -->
    <div class="row justify-content-center">
        <div class="col-lg-8 col-xl-6">
            <form asp-action="ChangePassword" method="post" id="changePasswordForm">
                <input asp-for="UserId" type="hidden" />
                <input asp-for="UserName" type="hidden" />
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>
                
                <!-- User Information Section -->
                <!-- User Information -->
                <div class="mb-4">
                    <div class="d-flex align-items-center mb-3">
                        <i class="fas fa-user text-primary me-2"></i>
                        <h6 class="mb-0 text-primary">User Information</h6>
                    </div>
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="text-muted small">Username</div>
                            <div class="fw-medium">@Model.UserName</div>
                        </div>
                        <div class="col-md-6">
                            <div class="text-muted small">User ID</div>
                            <div class="fw-medium">@Model.UserId</div>
                        </div>
                        
                    </div>
                </div>
                
                <!-- Current Password Section -->                <!-- Current Password Section -->
                <div class="form-section">
                    <div class="form-section-title">
                        <i class="fas fa-key me-2"></i>Current Password Verification
                    </div>
                    
                    <div class="mb-3">
                        <label asp-for="CurrentPassword" class="form-label">Current Password <span class="text-danger">*</span></label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="fas fa-lock"></i></span>
                            <input asp-for="CurrentPassword" class="form-control" placeholder="Enter current password" autocomplete="current-password" />
                            <button type="button" class="btn btn-outline-secondary" id="toggleCurrentPassword">
                                <i class="fas fa-eye" id="currentPasswordIcon"></i>
                            </button>
                        </div>
                        <span asp-validation-for="CurrentPassword" class="text-danger"></span>
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>Enter your current password to verify your identity
                        </div>
                    </div>
                </div>

                <!-- New Password Section -->
                <div class="form-section">
                    <div class="form-section-title">
                        <i class="fas fa-key me-2"></i>New Password Setup
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="NewPassword" class="form-label">New Password <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-shield-alt"></i></span>
                                    <input asp-for="NewPassword" class="form-control" placeholder="Enter new password" autocomplete="new-password" />
                                    <button type="button" class="btn btn-outline-secondary" id="toggleNewPassword">
                                        <i class="fas fa-eye" id="newPasswordIcon"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="NewPassword" class="text-danger"></span>
                                
                                <!-- Password Strength Indicator -->
                                <div class="password-strength mt-2" style="display: none;">
                                    <div class="progress" style="height: 6px;">
                                        <div class="progress-bar" role="progressbar" style="width: 0%"></div>
                                    </div>
                                    <div class="form-text password-strength-text">Password strength: <span class="strength-label">Weak</span></div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label asp-for="ConfirmNewPassword" class="form-label">Confirm New Password <span class="text-danger">*</span></label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="fas fa-check-circle"></i></span>
                                    <input asp-for="ConfirmNewPassword" class="form-control" placeholder="Confirm new password" autocomplete="new-password" />
                                    <button type="button" class="btn btn-outline-secondary" id="toggleConfirmPassword">
                                        <i class="fas fa-eye" id="confirmPasswordIcon"></i>
                                    </button>
                                </div>
                                <span asp-validation-for="ConfirmNewPassword" class="text-danger"></span>
                                
                                <!-- Password Match Indicator -->
                                <div class="password-match mt-2" style="display: none;">
                                    <div class="form-text">
                                        <i class="fas fa-times-circle text-danger me-1 match-icon"></i>
                                        <span class="match-text">Passwords do not match</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Form Actions -->
                <div class="d-flex justify-content-between gap-2 mb-4">
                    <div class="d-flex gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-2"></i>Change Password
                        </button>
                        <a href="@Url.Action("Details", new { id = Model.UserId })" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-2"></i>Cancel
                        </a>
                    </div>
                   
                </div>
            </form>
        </div>

        <!-- Sidebar with Security Information -->
        <div class="col-lg-4">
            <!-- Quick Actions Section -->
            <div class="sidebar-section">
                <div class="sidebar-section-title">
                    <i class="fas fa-bolt me-2"></i>Quick Actions
                </div>
                <div class="sidebar-section-content">
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Details", new { id = Model.UserId })" class="btn btn-outline-info btn-sm">
                            <i class="fas fa-user me-2"></i>View User Profile
                        </a>
                        <a href="@Url.Action("Edit", new { id = Model.UserId })" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-edit me-2"></i>Edit User Details
                        </a>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary btn-sm">
                            <i class="fas fa-list me-2"></i>All Users
                        </a>
                    </div>
                </div>
            </div>

            <!-- Security Guidelines Section -->
            <div class="sidebar-section">
                <div class="sidebar-section-title">
                    <i class="fas fa-shield-alt me-2"></i>Security Guidelines
                </div>
                <div class="sidebar-section-content">
                    <!-- Password Requirements -->
                    <div class="mb-3">
                        <h6 class="text-info mb-2">
                            <i class="fas fa-info-circle me-2"></i>Password Requirements
                        </h6>
                        <ul class="list-unstyled small text-muted">
                            <li><i class="fas fa-check text-success me-2"></i>Minimum 8 characters in length</li>
                            <li><i class="fas fa-check text-success me-2"></i>Must include uppercase and lowercase letters</li>
                            <li><i class="fas fa-check text-success me-2"></i>Must contain at least one number</li>
                            <li><i class="fas fa-check text-success me-2"></i>Must include at least one special character</li>
                            <li><i class="fas fa-check text-success me-2"></i>Cannot be the same as previous passwords</li>
                        </ul>
                    </div>

                    <!-- Important Notice -->
                    <div class="mb-0">
                        <h6 class="text-warning mb-2">
                            <i class="fas fa-exclamation-triangle me-2"></i>Important Notice
                        </h6>
                        <p class="small text-muted mb-2">Changing password will:</p>
                        <ul class="list-unstyled small text-muted">
                            <li><i class="fas fa-sign-out-alt text-warning me-2"></i>Log out all active sessions</li>
                            <li><i class="fas fa-key text-info me-2"></i>Require re-authentication</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Password visibility toggles
            function setupPasswordToggle(toggleId, inputId, iconId) {
                const toggle = document.getElementById(toggleId);
                const input = document.querySelector(`input[id$="${inputId}"]`);
                const icon = document.getElementById(iconId);
                
                if (toggle && input && icon) {
                    toggle.addEventListener('click', function() {
                        if (input.type === 'password') {
                            input.type = 'text';
                            icon.classList.remove('fa-eye');
                            icon.classList.add('fa-eye-slash');
                        } else {
                            input.type = 'password';
                            icon.classList.remove('fa-eye-slash');
                            icon.classList.add('fa-eye');
                        }
                    });
                }
            }

            setupPasswordToggle('toggleCurrentPassword', 'CurrentPassword', 'currentPasswordIcon');
            setupPasswordToggle('toggleNewPassword', 'NewPassword', 'newPasswordIcon');
            setupPasswordToggle('toggleConfirmPassword', 'ConfirmNewPassword', 'confirmPasswordIcon');

            // Password strength indicator
            const newPasswordInput = document.querySelector('input[id$="NewPassword"]');
            const strengthIndicator = document.querySelector('.password-strength');
            const progressBar = strengthIndicator?.querySelector('.progress-bar');
            const strengthLabel = strengthIndicator?.querySelector('.strength-label');

            if (newPasswordInput && strengthIndicator && progressBar && strengthLabel) {
                newPasswordInput.addEventListener('input', function() {
                    const password = this.value;
                    const strength = calculatePasswordStrength(password);
                    
                    if (password.length > 0) {
                        strengthIndicator.style.display = 'block';
                        updateStrengthIndicator(strength, progressBar, strengthLabel);
                    } else {
                        strengthIndicator.style.display = 'none';
                    }
                });
            }

            // Password match indicator
            const confirmPasswordInput = document.querySelector('input[id$="ConfirmNewPassword"]');
            const matchIndicator = document.querySelector('.password-match');
            const matchIcon = matchIndicator?.querySelector('.match-icon');
            const matchText = matchIndicator?.querySelector('.match-text');

            function checkPasswordMatch() {
                if (newPasswordInput && confirmPasswordInput && matchIndicator) {
                    const newPassword = newPasswordInput.value;
                    const confirmPassword = confirmPasswordInput.value;
                    
                    if (confirmPassword.length > 0) {
                        matchIndicator.style.display = 'block';
                        
                        if (newPassword === confirmPassword) {
                            matchIcon.className = 'fas fa-check-circle text-success me-1 match-icon';
                            matchText.textContent = 'Passwords match';
                            matchText.className = 'match-text text-success';
                        } else {
                            matchIcon.className = 'fas fa-times-circle text-danger me-1 match-icon';
                            matchText.textContent = 'Passwords do not match';
                            matchText.className = 'match-text text-danger';
                        }
                    } else {
                        matchIndicator.style.display = 'none';
                    }
                }
            }

            if (newPasswordInput && confirmPasswordInput) {
                newPasswordInput.addEventListener('input', checkPasswordMatch);
                confirmPasswordInput.addEventListener('input', checkPasswordMatch);
            }

            // Form submission validation
            document.getElementById('changePasswordForm').addEventListener('submit', function(e) {
                const currentPassword = document.querySelector('input[id$="CurrentPassword"]').value;
                const newPassword = document.querySelector('input[id$="NewPassword"]').value;
                const confirmPassword = document.querySelector('input[id$="ConfirmNewPassword"]').value;

                if (!currentPassword || !newPassword || !confirmPassword) {
                    e.preventDefault();
                    alert('Please fill in all password fields.');
                    return false;
                }

                if (newPassword !== confirmPassword) {
                    e.preventDefault();
                    alert('New password and confirmation password do not match.');
                    return false;
                }

                if (!isPasswordStrong(newPassword)) {
                    e.preventDefault();
                    alert('Please choose a stronger password that meets all requirements.');
                    return false;
                }
            });
        });

        function calculatePasswordStrength(password) {
            let score = 0;
            let requirements = 0;

            // Length check
            if (password.length >= 8) requirements++;
            if (password.length >= 12) score += 10;

            // Character variety
            if (/[a-z]/.test(password)) { score += 10; requirements++; }
            if (/[A-Z]/.test(password)) { score += 10; requirements++; }
            if (/[0-9]/.test(password)) { score += 10; requirements++; }
            if (/[^A-Za-z0-9]/.test(password)) { score += 10; requirements++; }

            // Additional scoring
            if (password.length >= 10) score += 5;
            if (password.length >= 14) score += 5;

            return { score: Math.min(score, 100), requirements };
        }

        function updateStrengthIndicator(strength, progressBar, strengthLabel) {
            let className = '';
            let label = '';
            let width = strength.score;

            if (strength.score < 30) {
                className = 'bg-danger';
                label = 'Weak';
            } else if (strength.score < 60) {
                className = 'bg-warning';
                label = 'Fair';
            } else if (strength.score < 80) {
                className = 'bg-info';
                label = 'Good';
            } else {
                className = 'bg-success';
                label = 'Strong';
            }

            progressBar.className = `progress-bar ${className}`;
            progressBar.style.width = `${width}%`;
            strengthLabel.textContent = label;
            strengthLabel.className = `strength-label ${className.replace('bg-', 'text-')}`;
        }

        function isPasswordStrong(password) {
            const strength = calculatePasswordStrength(password);
            return strength.requirements >= 4 && strength.score >= 60;
        }
    </script>
}
