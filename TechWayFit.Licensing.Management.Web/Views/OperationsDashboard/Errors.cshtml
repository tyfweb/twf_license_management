@model TechWayFit.Licensing.Management.Web.ViewModels.OperationsDashboard.ErrorAnalysisViewModel
@{
    ViewData["Title"] = "Error Analysis";
    Layout = "~/Views/Shared/_LicenseHubLayout.cshtml";
}

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="header mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">Error Analysis</h2>
                <p class="text-muted mb-0">Analyze error patterns and trends for the last @Model.TimeRange hours.</p>
            </div>
            <div class="d-flex gap-2">
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Back to Dashboard
                </a>
                <button class="btn btn-outline-primary" onclick="refreshData()">
                    <i class="fas fa-sync-alt me-1"></i>Refresh
                </button>
            </div>
        </div>
    </div>

    <!-- Error Summary Cards -->
    <div class="row g-2 mb-3">
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-danger">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-exclamation-triangle"></i>
                    </div>
                    <div class="stats-number">@Model.ErrorSummary.Count()</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Total Error Types</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-warning">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-bug"></i>
                    </div>
                    <div class="stats-number">@Model.ErrorSummary.Sum(e => e.OccurrenceCount)</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Total Occurrences</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-info">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="stats-number">@Model.ErrorSummary.Sum(e => e.AffectedUsers)</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Affected Users</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-success">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="stats-number">@Model.ErrorSummary.Count(e => e.IsResolved)</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Resolved Errors</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Error Summary Table -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <h5><i class="fas fa-list me-2"></i>Error Summary</h5>
                </div>
                <div class="section-content">
                    @if (Model.ErrorSummary.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Error Type</th>
                                        <th>Source</th>
                                        <th>Severity</th>
                                        <th>Occurrences</th>
                                        <th>Affected Users</th>
                                        <th>First Occurrence</th>
                                        <th>Last Occurrence</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var error in Model.ErrorSummary.Take(20))
                                    {
                                        <tr>
                                            <td>
                                                <div class="fw-bold">@error.ErrorType</div>
                                                @if (!string.IsNullOrEmpty(error.ErrorMessageSample))
                                                {
                                                    <small class="text-muted">@error.ErrorMessageSample.Substring(0, Math.Min(50, error.ErrorMessageSample.Length))...</small>
                                                }
                                            </td>
                                            <td>
                                                <code class="small">@error.ErrorSource</code>
                                            </td>
                                            <td>
                                                <span class="badge @(error.SeverityLevel == "High" ? "bg-danger" : error.SeverityLevel == "Medium" ? "bg-warning" : "bg-info")">
                                                    @error.SeverityLevel
                                                </span>
                                            </td>
                                            <td>
                                                <span class="fw-bold">@error.OccurrenceCount.ToString("N0")</span>
                                            </td>
                                            <td>@error.AffectedUsers</td>
                                            <td>
                                                <small>@error.FirstOccurrence.ToString("MMM dd, HH:mm")</small>
                                            </td>
                                            <td>
                                                <small>@error.LastOccurrence.ToString("MMM dd, HH:mm")</small>
                                            </td>
                                            <td>
                                                @if (error.IsResolved)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check me-1"></i>Resolved
                                                    </span>
                                                    @if (!string.IsNullOrEmpty(error.ResolvedBy))
                                                    {
                                                        <br><small class="text-muted">by @error.ResolvedBy</small>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="fas fa-exclamation-triangle me-1"></i>Open
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button class="btn btn-outline-info" onclick="viewErrorDetails('@error.ErrorSummaryId')" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    @if (!error.IsResolved)
                                                    {
                                                        <button class="btn btn-outline-success" onclick="markAsResolved('@error.ErrorSummaryId')" title="Mark as Resolved">
                                                            <i class="fas fa-check"></i>
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                        
                        @if (Model.ErrorSummary.Count() > 20)
                        {
                            <div class="text-center mt-3">
                                <p class="text-muted">Showing first 20 of @Model.ErrorSummary.Count() errors</p>
                                <button class="btn btn-outline-primary" onclick="loadMoreErrors()">
                                    <i class="fas fa-plus me-1"></i>Load More
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="h1 text-success mb-3">
                                <i class="fas fa-check-circle"></i>
                            </div>
                            <h4>No Errors Found</h4>
                            <p class="text-muted">Great! No errors have been recorded in the last @Model.TimeRange hours.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Error Trends and Analysis -->
    @if (Model.ErrorSummary.Any())
    {
        <div class="row g-3">
            <div class="col-md-6">
                <div class="sidebar-section">
                    <div class="section-header">
                        <h5><i class="fas fa-chart-pie me-2"></i>Error Distribution by Severity</h5>
                    </div>
                    <div class="section-content">
                        <div class="row g-2">
                            @{
                                var highErrors = Model.ErrorSummary.Count(e => e.SeverityLevel == "High");
                                var mediumErrors = Model.ErrorSummary.Count(e => e.SeverityLevel == "Medium");
                                var lowErrors = Model.ErrorSummary.Count(e => e.SeverityLevel == "Low");
                                var totalErrors = highErrors + mediumErrors + lowErrors;
                            }
                            <div class="col-4">
                                <div class="text-center p-3 border rounded">
                                    <div class="h4 text-danger">@highErrors</div>
                                    <div class="fw-bold">High</div>
                                    <small class="text-muted">@(totalErrors > 0 ? (highErrors * 100 / totalErrors).ToString("F1") : "0")%</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="text-center p-3 border rounded">
                                    <div class="h4 text-warning">@mediumErrors</div>
                                    <div class="fw-bold">Medium</div>
                                    <small class="text-muted">@(totalErrors > 0 ? (mediumErrors * 100 / totalErrors).ToString("F1") : "0")%</small>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="text-center p-3 border rounded">
                                    <div class="h4 text-info">@lowErrors</div>
                                    <div class="fw-bold">Low</div>
                                    <small class="text-muted">@(totalErrors > 0 ? (lowErrors * 100 / totalErrors).ToString("F1") : "0")%</small>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="sidebar-section">
                    <div class="section-header">
                        <h5><i class="fas fa-chart-bar me-2"></i>Top Error Sources</h5>
                    </div>
                    <div class="section-content">
                        @{
                            var topSources = Model.ErrorSummary
                                .GroupBy(e => e.ErrorSource)
                                .Select(g => new { Source = g.Key, Count = g.Sum(e => e.OccurrenceCount) })
                                .OrderByDescending(s => s.Count)
                                .Take(5);
                        }
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Source</th>
                                        <th>Count</th>
                                        <th>Percentage</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var source in topSources)
                                    {
                                        var percentage = Model.ErrorSummary.Sum(e => e.OccurrenceCount) > 0 
                                            ? (source.Count * 100.0 / Model.ErrorSummary.Sum(e => e.OccurrenceCount))
                                            : 0;
                                        <tr>
                                            <td><code class="small">@source.Source</code></td>
                                            <td><span class="fw-bold">@source.Count</span></td>
                                            <td>
                                                <div class="progress" style="height: 20px;">
                                                    <div class="progress-bar bg-danger" style="width: @percentage.ToString("F1")%">
                                                        @percentage.ToString("F1")%
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function refreshData() {
            window.location.reload();
        }

        function viewErrorDetails(errorId) {
            alert('Error details view would be implemented here for error: ' + errorId);
        }

        function markAsResolved(errorId) {
            if (confirm('Mark this error as resolved?')) {
                alert('Mark as resolved functionality would be implemented here for error: ' + errorId);
            }
        }

        function loadMoreErrors() {
            alert('Load more functionality would be implemented here');
        }
    </script>
}
