@model TechWayFit.Licensing.Management.Web.ViewModels.Product.ProductEnhancedEditViewModel

@{
    ViewData["Title"] = "Product Tiers - " + Model.ProductName;
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="mb-1">Product Tiers</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Products</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Action("Details", new { id = Model.ProductId })">@Model.ProductName</a></li>
                            <li class="breadcrumb-item active">Tiers</li>
                        </ol>
                    </nav>
                </div>
                <div class="btn-group" role="group">
                    <a href="@Url.Action("Details", new { id = Model.ProductId })" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to Product
                    </a>
                    <a href="@Url.Action("Versions", new { id = Model.ProductId })" class="btn btn-outline-primary">
                        <i class="fas fa-code-branch me-1"></i>Versions
                    </a>
                    <a href="@Url.Action("Features", new { id = Model.ProductId })" class="btn btn-outline-primary">
                        <i class="fas fa-star me-1"></i>Features
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Info Card -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body py-3">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <div class="product-icon me-3">
                                    <i class="fas fa-cube fa-2x text-primary"></i>
                                </div>
                                <div>
                                    <h6 class="mb-1">@Model.ProductName</h6>
                                    <small class="text-muted">@Model.ProductType â€¢ Version @Model.Version</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <span class="badge bg-success me-2">Active</span>
                            <span class="badge bg-info">
                                <span id="tiers-count">0</span> Tiers
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Tiers Management -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">
                            <i class="fas fa-layer-group me-2"></i>Product Tiers
                        </h6>
                        <button type="button" class="btn btn-primary btn-sm" onclick="showAddTierModal()">
                            <i class="fas fa-plus me-1"></i>Add Tier
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Alert container -->
                    <div id="alert-container"></div>
                    
                    <!-- Tiers content -->
                    <div id="tiers-content">
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3 text-muted">Loading product tiers...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Tier Modal -->
<div class="modal fade" id="tierModal" tabindex="-1" aria-labelledby="tierModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="tierModalLabel">Add Product Tier</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="tierForm">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="ProductId" value="@Model.ProductId" />
                    <input type="hidden" name="TierId" id="tierId" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="tierName" class="form-label">Tier Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="tierName" name="TierName" required maxlength="50">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="monthlyPrice" class="form-label">Monthly Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="monthlyPrice" name="MonthlyPrice" step="0.01" min="0">
                                </div>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="annualPrice" class="form-label">Annual Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="annualPrice" name="AnnualPrice" step="0.01" min="0">
                                </div>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="trialPeriodDays" class="form-label">Trial Period (Days)</label>
                                <input type="number" class="form-control" id="trialPeriodDays" name="TrialPeriodDays" min="0" max="365" value="0">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="tierDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="tierDescription" name="Description" rows="3" maxlength="200"></textarea>
                        <div class="invalid-feedback"></div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="maxUsers" class="form-label">Max Users</label>
                                <input type="number" class="form-control" id="maxUsers" name="MaxUsers" min="1">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="maxProjects" class="form-label">Max Projects</label>
                                <input type="number" class="form-control" id="maxProjects" name="MaxProjects" min="1">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isFree" name="IsFree">
                                <label class="form-check-label" for="isFree">
                                    Free Tier
                                </label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isActive" name="IsActive" checked>
                                <label class="form-check-label" for="isActive">
                                    Active
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="tierSubmitBtn">Add Tier</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load tiers on page load
            loadProductTiers();
            
            // Handle tier form submission
            $('#tierForm').on('submit', function(e) {
                e.preventDefault();
                saveTier();
            });
        });

        function loadProductTiers() {
            $('#tiers-content').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-3 text-muted">Loading product tiers...</p></div>');
            
            $.get('@Url.Action("GetProductTiers")', { productId: @Model.ProductId })
                .done(function(response) {
                    if (response.success && response.data) {
                        var html = renderProductTiers(response.data);
                        $('#tiers-content').html(html);
                        $('#tiers-count').text(response.data.length);
                    } else {
                        $('#tiers-content').html('<div class="text-center py-5"><div class="text-muted"><i class="fas fa-layer-group fa-3x mb-3"></i><p>No product tiers found.</p><p><small>Click "Add Tier" to create your first tier.</small></p></div></div>');
                        $('#tiers-count').text(0);
                    }
                })
                .fail(function(xhr, status, error) {
                    console.error('Failed to load product tiers:', error);
                    $('#tiers-content').html('<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i>Failed to load product tiers. Please try again.</div>');
                    $('#tiers-count').text(0);
                });
        }

        function renderProductTiers(tiers) {
            if (!tiers || tiers.length === 0) {
                return '<div class="text-center py-5"><div class="text-muted"><i class="fas fa-layer-group fa-3x mb-3"></i><p>No product tiers found.</p><p><small>Click "Add Tier" to create your first tier.</small></p></div></div>';
            }

            var html = '<div class="row">';
            tiers.forEach(function(tier) {
                html += '<div class="col-lg-4 col-md-6 mb-4">';
                html += '  <div class="card h-100 tier-card">';
                html += '    <div class="card-body">';
                html += '      <div class="d-flex justify-content-between align-items-start mb-3">';
                html += '        <h6 class="card-title mb-0 text-primary">' + tier.Name + '</h6>';
                html += '        <div class="dropdown">';
                html += '          <button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">';
                html += '            <i class="fas fa-ellipsis-v"></i>';
                html += '          </button>';
                html += '          <ul class="dropdown-menu dropdown-menu-end">';
                html += '            <li><a class="dropdown-item" href="#" onclick="editTier(\'' + tier.Id + '\')"><i class="fas fa-edit me-2"></i>Edit</a></li>';
                if (tier.CanDelete) {
                    html += '            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTier(\'' + tier.Id + '\')"><i class="fas fa-trash me-2"></i>Delete</a></li>';
                }
                html += '          </ul>';
                html += '        </div>';
                html += '      </div>';
                
                if (tier.Description) {
                    html += '      <p class="card-text text-muted mb-3">' + tier.Description + '</p>';
                }
                
                html += '      <div class="tier-details">';
                html += '        <div class="row text-center">';
                html += '          <div class="col-6">';
                html += '            <div class="tier-stat">';
                html += '              <div class="h5 mb-0 text-success">' + (tier.Price || 'Free') + '</div>';
                html += '              <small class="text-muted">Price</small>';
                html += '            </div>';
                html += '          </div>';
                html += '          <div class="col-6">';
                html += '            <div class="tier-stat">';
                if (tier.IsActive) {
                    html += '              <span class="badge bg-success">Active</span>';
                } else {
                    html += '              <span class="badge bg-secondary">Inactive</span>';
                }
                html += '              <br><small class="text-muted">Status</small>';
                html += '            </div>';
                html += '          </div>';
                html += '        </div>';
                html += '      </div>';
                html += '    </div>';
                html += '  </div>';
                html += '</div>';
            });
            html += '</div>';
            return html;
        }

        function showAddTierModal() {
            // Reset form and modal
            $('#tierForm')[0].reset();
            $('#tierId').val('');
            $('#tierModalLabel').text('Add Product Tier');
            $('#tierSubmitBtn').text('Add Tier');
            clearValidationErrors();
            
            // Show modal
            var modal = new bootstrap.Modal(document.getElementById('tierModal'));
            modal.show();
        }

        function editTier(tierId) {
            // Get tier data
            $.get('@Url.Action("GetProductTier")', { 
                productId: @Model.ProductId, 
                tierId: tierId 
            })
            .done(function(response) {
                if (response.success && response.data) {
                    var tier = response.data;
                    
                    // Populate form
                    $('#tierId').val(tier.TierId);
                    $('#tierName').val(tier.TierName);
                    $('#tierDescription').val(tier.Description);
                    $('#monthlyPrice').val(tier.MonthlyPrice);
                    $('#annualPrice').val(tier.AnnualPrice);
                    $('#trialPeriodDays').val(tier.TrialPeriodDays);
                    $('#maxUsers').val(tier.MaxUsers);
                    $('#maxProjects').val(tier.MaxProjects);
                    $('#isFree').prop('checked', tier.IsFree);
                    $('#isActive').prop('checked', tier.IsActive);
                    
                    // Update modal title and button
                    $('#tierModalLabel').text('Edit Product Tier');
                    $('#tierSubmitBtn').text('Update Tier');
                    clearValidationErrors();
                    
                    // Show modal
                    var modal = new bootstrap.Modal(document.getElementById('tierModal'));
                    modal.show();
                } else {
                    showAlert('Error loading tier data', 'danger');
                }
            })
            .fail(function() {
                showAlert('Error loading tier data', 'danger');
            });
        }

        function deleteTier(tierId) {
            if (confirm('Are you sure you want to delete this tier? This action cannot be undone.')) {
                var formData = new FormData();
                formData.append('productId', @Model.ProductId);
                formData.append('tierId', tierId);
                formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());

                $.ajax({
                    url: '@Url.Action("DeleteProductTier")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            showAlert(response.message, 'success');
                            loadProductTiers(); // Reload the tiers list
                        } else {
                            showAlert(response.message, 'danger');
                        }
                    },
                    error: function() {
                        showAlert('Error deleting tier', 'danger');
                    }
                });
            }
        }

        function saveTier() {
            var tierId = $('#tierId').val();
            var isEdit = tierId && tierId !== '';
            var url = isEdit ? '@Url.Action("EditProductTier")' : '@Url.Action("AddProductTier")';
            
            var formData = new FormData(document.getElementById('tierForm'));
            if (isEdit) {
                formData.append('tierId', tierId);
            }
            formData.append('productId', @Model.ProductId);

            // Disable submit button
            $('#tierSubmitBtn').prop('disabled', true).text('Saving...');

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        showAlert(response.message, 'success');
                        $('#tierModal').modal('hide');
                        loadProductTiers(); // Reload the tiers list
                    } else {
                        if (response.errors && response.errors.length > 0) {
                            showValidationErrors(response.errors);
                        } else {
                            showAlert(response.message, 'danger');
                        }
                    }
                },
                error: function() {
                    showAlert('Error saving tier', 'danger');
                },
                complete: function() {
                    // Re-enable submit button
                    $('#tierSubmitBtn').prop('disabled', false).text(isEdit ? 'Update Tier' : 'Add Tier');
                }
            });
        }

        function clearValidationErrors() {
            $('.is-invalid').removeClass('is-invalid');
            $('.invalid-feedback').empty();
        }

        function showValidationErrors(errors) {
            clearValidationErrors();
            errors.forEach(function(error) {
                showAlert(error, 'danger');
            });
        }

        function showAlert(message, type) {
            var alertClass = 'alert-' + type;
            var alertHtml = '<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert">' +
                            message +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
                            '</div>';
            
            // Remove existing alerts
            $('#alert-container .alert').remove();
            
            // Add new alert
            $('#alert-container').html(alertHtml);
            
            // Auto-hide success alerts after 5 seconds
            if (type === 'success') {
                setTimeout(function() {
                    $('.alert-success').alert('close');
                }, 5000);
            }
        }
    </script>

    <style>
        .tier-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
            border: 1px solid #e9ecef;
        }

        .tier-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .tier-stat {
            padding: 0.5rem 0;
        }

        .product-icon {
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(13, 110, 253, 0.1);
            border-radius: 10px;
        }
    </style>
}
