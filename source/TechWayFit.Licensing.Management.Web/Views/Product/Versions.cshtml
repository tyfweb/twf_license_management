@model TechWayFit.Licensing.Management.Web.ViewModels.Product.ProductEnhancedEditViewModel

@{
    ViewData["Title"] = "Product Versions - " + Model.ProductName;
}

<div class="container-fluid">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <h4 class="mb-1">Product Versions</h4>
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb mb-0">
                            <li class="breadcrumb-item"><a href="@Url.Action("Index")">Products</a></li>
                            <li class="breadcrumb-item"><a href="@Url.Action("Details", new { id = Model.ProductId })">@Model.ProductName</a></li>
                            <li class="breadcrumb-item active">Versions</li>
                        </ol>
                    </nav>
                </div>
                <div class="btn-group" role="group">
                    <a href="@Url.Action("Details", new { id = Model.ProductId })" class="btn btn-outline-secondary">
                        <i class="fas fa-arrow-left me-1"></i>Back to Product
                    </a>
                    <a href="@Url.Action("Tiers", new { id = Model.ProductId })" class="btn btn-outline-primary">
                        <i class="fas fa-layer-group me-1"></i>Tiers
                    </a>
                    <a href="@Url.Action("Features", new { id = Model.ProductId })" class="btn btn-outline-primary">
                        <i class="fas fa-star me-1"></i>Features
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Product Info Card -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card">
                <div class="card-body py-3">
                    <div class="row align-items-center">
                        <div class="col-md-6">
                            <div class="d-flex align-items-center">
                                <div class="product-icon me-3">
                                    <i class="fas fa-code-branch fa-2x text-primary"></i>
                                </div>
                                <div>
                                    <h6 class="mb-1">@Model.ProductName</h6>
                                    <small class="text-muted">@Model.ProductType â€¢ Current Version @Model.Version</small>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6 text-md-end">
                            <span class="badge bg-success me-2">Active</span>
                            <span class="badge bg-info">
                                <span id="versions-count">0</span> Versions
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Versions Management -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h6 class="mb-0">
                            <i class="fas fa-code-branch me-2"></i>Product Versions
                        </h6>
                        <button type="button" class="btn btn-primary btn-sm" onclick="showAddVersionModal()">
                            <i class="fas fa-plus me-1"></i>Add Version
                        </button>
                    </div>
                </div>
                <div class="card-body">
                    <!-- Alert container -->
                    <div id="alert-container"></div>
                    
                    <!-- Versions content -->
                    <div id="versions-content">
                        <div class="text-center py-5">
                            <div class="spinner-border text-primary" role="status">
                                <span class="visually-hidden">Loading...</span>
                            </div>
                            <p class="mt-3 text-muted">Loading product versions...</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Version Modal -->
<div class="modal fade" id="versionModal" tabindex="-1" aria-labelledby="versionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="versionModalLabel">Add Product Version</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="versionForm">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="ProductId" value="@Model.ProductId" />
                    <input type="hidden" name="VersionId" id="versionId" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="versionNumber" class="form-label">Version Number <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="versionNumber" name="VersionNumber" required 
                                       placeholder="e.g., 1.0.0" pattern="^\d+\.\d+\.\d+$">
                                <div class="form-text">Format: Major.Minor.Patch (e.g., 1.0.0)</div>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="releaseDate" class="form-label">Release Date</label>
                                <input type="date" class="form-control" id="releaseDate" name="ReleaseDate">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="versionName" class="form-label">Version Name</label>
                        <input type="text" class="form-control" id="versionName" name="VersionName" 
                               placeholder="e.g., Initial Release, Bug Fix Update">
                        <div class="invalid-feedback"></div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="releaseNotes" class="form-label">Release Notes</label>
                        <textarea class="form-control" id="releaseNotes" name="ReleaseNotes" rows="4" 
                                  placeholder="Describe what's new in this version..."></textarea>
                        <div class="invalid-feedback"></div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isStable" name="IsStable">
                                <label class="form-check-label" for="isStable">
                                    Stable Release
                                </label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isActive" name="IsActive" checked>
                                <label class="form-check-label" for="isActive">
                                    Active
                                </label>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isApproved" name="IsApproved">
                                <label class="form-check-label" for="isApproved">
                                    Approved
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="versionSubmitBtn">Add Version</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load versions on page load
            loadProductVersions();
            
            // Handle version form submission
            $('#versionForm').on('submit', function(e) {
                e.preventDefault();
                saveVersion();
            });
        });

        function loadProductVersions() {
            $('#versions-content').html('<div class="text-center py-5"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-3 text-muted">Loading product versions...</p></div>');
            
            $.get('@Url.Action("GetProductVersions")', { productId: @Model.ProductId })
                .done(function(response) {
                    if (response.success && response.data) {
                        var html = renderProductVersions(response.data);
                        $('#versions-content').html(html);
                        $('#versions-count').text(response.data.length);
                    } else {
                        $('#versions-content').html('<div class="text-center py-5"><div class="text-muted"><i class="fas fa-code-branch fa-3x mb-3"></i><p>No product versions found.</p><p><small>Click "Add Version" to create your first version.</small></p></div></div>');
                        $('#versions-count').text(0);
                    }
                })
                .fail(function(xhr, status, error) {
                    console.error('Failed to load product versions:', error);
                    $('#versions-content').html('<div class="alert alert-danger"><i class="fas fa-exclamation-triangle me-2"></i>Failed to load product versions. Please try again.</div>');
                    $('#versions-count').text(0);
                });
        }

        function renderProductVersions(versions) {
            if (!versions || versions.length === 0) {
                return '<div class="text-center py-5"><div class="text-muted"><i class="fas fa-code-branch fa-3x mb-3"></i><p>No product versions found.</p><p><small>Click "Add Version" to create your first version.</small></p></div></div>';
            }

            var html = '<div class="timeline">';
            versions.forEach(function(version, index) {
                html += '<div class="timeline-item">';
                html += '  <div class="timeline-marker">';
                if (version.IsStable) {
                    html += '    <div class="timeline-marker-icon bg-success"><i class="fas fa-check"></i></div>';
                } else {
                    html += '    <div class="timeline-marker-icon bg-warning"><i class="fas fa-flask"></i></div>';
                }
                html += '  </div>';
                html += '  <div class="timeline-content">';
                html += '    <div class="card">';
                html += '      <div class="card-body">';
                html += '        <div class="d-flex justify-content-between align-items-start mb-2">';
                html += '          <div>';
                html += '            <h6 class="mb-1">Version ' + version.VersionNumber + '</h6>';
                if (version.VersionName) {
                    html += '            <p class="text-primary mb-1">' + version.VersionName + '</p>';
                }
                html += '          </div>';
                html += '          <div class="dropdown">';
                html += '            <button class="btn btn-outline-light btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">';
                html += '              <i class="fas fa-ellipsis-v"></i>';
                html += '            </button>';
                html += '            <ul class="dropdown-menu dropdown-menu-end">';
                html += '              <li><a class="dropdown-item" href="#" onclick="editVersion(\'' + version.Id + '\')"><i class="fas fa-edit me-2"></i>Edit</a></li>';
                if (version.CanDelete) {
                    html += '              <li><a class="dropdown-item text-danger" href="#" onclick="deleteVersion(\'' + version.Id + '\')"><i class="fas fa-trash me-2"></i>Delete</a></li>';
                }
                html += '            </ul>';
                html += '          </div>';
                html += '        </div>';
                
                html += '        <div class="version-badges mb-2">';
                if (version.IsStable) {
                    html += '          <span class="badge bg-success me-1">Stable</span>';
                } else {
                    html += '          <span class="badge bg-warning me-1">Beta</span>';
                }
                if (version.IsApproved) {
                    html += '          <span class="badge bg-info me-1">Approved</span>';
                }
                if (version.IsActive) {
                    html += '          <span class="badge bg-primary me-1">Active</span>';
                } else {
                    html += '          <span class="badge bg-secondary me-1">Inactive</span>';
                }
                html += '        </div>';
                
                if (version.ReleaseNotes) {
                    html += '        <p class="text-muted mb-2">' + version.ReleaseNotes + '</p>';
                }
                
                if (version.ReleaseDate) {
                    html += '        <small class="text-muted"><i class="fas fa-calendar me-1"></i>Released: ' + new Date(version.ReleaseDate).toLocaleDateString() + '</small>';
                }
                
                html += '      </div>';
                html += '    </div>';
                html += '  </div>';
                html += '</div>';
            });
            html += '</div>';
            return html;
        }

        function showAddVersionModal() {
            // Reset form and modal
            $('#versionForm')[0].reset();
            $('#versionId').val('');
            $('#versionModalLabel').text('Add Product Version');
            $('#versionSubmitBtn').text('Add Version');
            clearValidationErrors();
            
            // Show modal
            var modal = new bootstrap.Modal(document.getElementById('versionModal'));
            modal.show();
        }

        function editVersion(versionId) {
            // Get version data
            $.get('@Url.Action("GetProductVersion")', { 
                productId: @Model.ProductId, 
                versionId: versionId 
            })
            .done(function(response) {
                if (response.success && response.data) {
                    var version = response.data;
                    
                    // Populate form
                    $('#versionId').val(version.VersionId);
                    $('#versionNumber').val(version.VersionNumber);
                    $('#versionName').val(version.VersionName);
                    $('#releaseNotes').val(version.ReleaseNotes);
                    if (version.ReleaseDate) {
                        $('#releaseDate').val(new Date(version.ReleaseDate).toISOString().split('T')[0]);
                    }
                    $('#isStable').prop('checked', version.IsStable);
                    $('#isActive').prop('checked', version.IsActive);
                    $('#isApproved').prop('checked', version.IsApproved);
                    
                    // Update modal title and button
                    $('#versionModalLabel').text('Edit Product Version');
                    $('#versionSubmitBtn').text('Update Version');
                    clearValidationErrors();
                    
                    // Show modal
                    var modal = new bootstrap.Modal(document.getElementById('versionModal'));
                    modal.show();
                } else {
                    showAlert('Error loading version data', 'danger');
                }
            })
            .fail(function() {
                showAlert('Error loading version data', 'danger');
            });
        }

        function deleteVersion(versionId) {
            if (confirm('Are you sure you want to delete this version? This action cannot be undone.')) {
                var formData = new FormData();
                formData.append('productId', @Model.ProductId);
                formData.append('versionId', versionId);
                formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());

                $.ajax({
                    url: '@Url.Action("DeleteProductVersion")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            showAlert(response.message, 'success');
                            loadProductVersions(); // Reload the versions list
                        } else {
                            showAlert(response.message, 'danger');
                        }
                    },
                    error: function() {
                        showAlert('Error deleting version', 'danger');
                    }
                });
            }
        }

        function saveVersion() {
            var versionId = $('#versionId').val();
            var isEdit = versionId && versionId !== '';
            var url = isEdit ? '@Url.Action("EditProductVersion")' : '@Url.Action("AddProductVersion")';
            
            var formData = new FormData(document.getElementById('versionForm'));
            if (isEdit) {
                formData.append('versionId', versionId);
            }
            formData.append('productId', @Model.ProductId);

            // Disable submit button
            $('#versionSubmitBtn').prop('disabled', true).text('Saving...');

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                success: function(response) {
                    if (response.success) {
                        showAlert(response.message, 'success');
                        $('#versionModal').modal('hide');
                        loadProductVersions(); // Reload the versions list
                    } else {
                        if (response.errors && response.errors.length > 0) {
                            showValidationErrors(response.errors);
                        } else {
                            showAlert(response.message, 'danger');
                        }
                    }
                },
                error: function() {
                    showAlert('Error saving version', 'danger');
                },
                complete: function() {
                    // Re-enable submit button
                    $('#versionSubmitBtn').prop('disabled', false).text(isEdit ? 'Update Version' : 'Add Version');
                }
            });
        }

        function clearValidationErrors() {
            $('.is-invalid').removeClass('is-invalid');
            $('.invalid-feedback').empty();
        }

        function showValidationErrors(errors) {
            clearValidationErrors();
            errors.forEach(function(error) {
                showAlert(error, 'danger');
            });
        }

        function showAlert(message, type) {
            var alertClass = 'alert-' + type;
            var alertHtml = '<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert">' +
                            message +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
                            '</div>';
            
            // Remove existing alerts
            $('#alert-container .alert').remove();
            
            // Add new alert
            $('#alert-container').html(alertHtml);
            
            // Auto-hide success alerts after 5 seconds
            if (type === 'success') {
                setTimeout(function() {
                    $('.alert-success').alert('close');
                }, 5000);
            }
        }
    </script>

    <style>
        .product-icon {
            width: 60px;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            background: rgba(13, 110, 253, 0.1);
            border-radius: 10px;
        }

        .timeline {
            position: relative;
            padding: 0;
        }

        .timeline-item {
            position: relative;
            padding-left: 3rem;
            margin-bottom: 2rem;
        }

        .timeline-item:not(:last-child)::before {
            content: '';
            position: absolute;
            left: 1.375rem;
            top: 2.5rem;
            bottom: -2rem;
            width: 2px;
            background: #dee2e6;
        }

        .timeline-marker {
            position: absolute;
            left: 0;
            top: 0;
        }

        .timeline-marker-icon {
            width: 2.75rem;
            height: 2.75rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-size: 0.875rem;
        }

        .timeline-content .card {
            border: 1px solid #e9ecef;
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }

        .timeline-content .card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0,0,0,0.1);
        }

        .version-badges .badge {
            font-size: 0.75rem;
        }
    </style>
}
