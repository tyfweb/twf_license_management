@model TechWayFit.Licensing.Management.Web.ViewModels.OperationsDashboard.PerformanceAnalysisViewModel
@{
    ViewData["Title"] = "Performance Analysis";
    Layout = "~/Views/Shared/_LicenseHubLayout.cshtml";
}

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="header mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">Performance Analysis</h2>
                <p class="text-muted mb-0">Monitor system and application performance metrics for the last @Model.TimeRange hours.</p>
            </div>
            <div class="d-flex gap-2">
                <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                    <i class="fas fa-arrow-left me-1"></i>Back to Dashboard
                </a>
                <button class="btn btn-outline-primary" onclick="refreshData()">
                    <i class="fas fa-sync-alt me-1"></i>Refresh
                </button>
            </div>
        </div>
    </div>

    <!-- Performance Summary Cards -->
    <div class="row g-2 mb-3">
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-info">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-globe"></i>
                    </div>
                    <div class="stats-number">@Model.PerformanceMetrics.Count()</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Monitored Pages</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-warning">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-clock"></i>
                    </div>
                    <div class="stats-number">@(Model.PerformanceMetrics.Any() ? Model.PerformanceMetrics.Average(p => p.AvgResponseTimeMs).ToString("F0") : "0") ms</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Avg Load Time</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-success">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-database"></i>
                    </div>
                    <div class="stats-number">@Model.SlowestQueries.Count()</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Query Types</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-primary">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-users"></i>
                    </div>
                    <div class="stats-number">@Model.PerformanceMetrics.Sum(p => p.RequestCount)</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Total Requests</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Page Performance Section -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <h5><i class="fas fa-globe me-2"></i>Page Performance Metrics</h5>
                </div>
                <div class="section-content">
                    @if (Model.PerformanceMetrics.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Page</th>
                                        <th>Controller/Action</th>
                                        <th>Requests</th>
                                        <th>Avg Load Time</th>
                                        <th>Min Load Time</th>
                                        <th>Max Load Time</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var pageItem in Model.PerformanceMetrics.OrderByDescending(p => p.RequestCount))
                                    {
                                        var loadTimeStatus = pageItem.AvgResponseTimeMs < 500 ? "success" : pageItem.AvgResponseTimeMs < 1000 ? "warning" : "danger";
                                        <tr>
                                            <td>
                                                <div class="fw-bold">@pageItem.Controller/@pageItem.Action</div>
                                                @if (!string.IsNullOrEmpty(pageItem.RouteTemplate))
                                                {
                                                    <small class="text-muted">@pageItem.RouteTemplate</small>
                                                }
                                            </td>
                                            <td>
                                                <code class="small">@pageItem.Controller/@pageItem.Action</code>
                                            </td>
                                            <td>
                                                <span class="fw-bold">@pageItem.RequestCount.ToString("N0")</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-@loadTimeStatus">
                                                    @pageItem.AvgResponseTimeMs.ToString("F0") ms
                                                </span>
                                            </td>
                                            <td>@pageItem.MinResponseTimeMs.ToString("F0") ms</td>
                                            <td>@pageItem.MaxResponseTimeMs.ToString("F0") ms</td>
                                            <td>
                                                @if (pageItem.AvgResponseTimeMs < 500)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check me-1"></i>Excellent
                                                    </span>
                                                }
                                                else if (pageItem.AvgResponseTimeMs < 1000)
                                                {
                                                    <span class="badge bg-warning">
                                                        <i class="fas fa-exclamation-triangle me-1"></i>Good
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="fas fa-times me-1"></i>Needs Attention
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button class="btn btn-outline-info" onclick="viewPageDetails('@pageItem.PerformanceId')" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-outline-primary" onclick="optimizePage('@pageItem.PerformanceId')" title="Optimization Tips">
                                                        <i class="fas fa-rocket"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="h1 text-info mb-3">
                                <i class="fas fa-chart-line"></i>
                            </div>
                            <h4>No Performance Data</h4>
                            <p class="text-muted">No page performance metrics available for the last @Model.TimeRange hours.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Query Performance Section -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <h5><i class="fas fa-database me-2"></i>Database Query Performance</h5>
                </div>
                <div class="section-content">
                    @if (Model.SlowestQueries.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>Query Type</th>
                                        <th>Table/Entity</th>
                                        <th>Executions</th>
                                        <th>Avg Duration</th>
                                        <th>Min Duration</th>
                                        <th>Max Duration</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var query in Model.SlowestQueries.OrderByDescending(q => q.ExecutionCount))
                                    {
                                        var queryStatus = query.AvgExecutionTimeMs < 100 ? "success" : query.AvgExecutionTimeMs < 500 ? "warning" : "danger";
                                        <tr>
                                            <td>
                                                <div class="fw-bold">@query.QueryType</div>
                                                @if (!string.IsNullOrEmpty(query.QueryHash))
                                                {
                                                    <small class="text-muted">Hash: @query.QueryHash.Substring(0, Math.Min(8, query.QueryHash.Length))</small>
                                                }
                                            </td>
                                            <td>
                                                <code class="small">@query.TableNames</code>
                                            </td>
                                            <td>
                                                <span class="fw-bold">@query.ExecutionCount.ToString("N0")</span>
                                            </td>
                                            <td>
                                                <span class="badge bg-@queryStatus">
                                                    @query.AvgExecutionTimeMs.ToString("F0") ms
                                                </span>
                                            </td>
                                            <td>@query.MinExecutionTimeMs.ToString("F0") ms</td>
                                            <td>@query.MaxExecutionTimeMs.ToString("F0") ms</td>
                                            <td>
                                                @if (query.AvgExecutionTimeMs < 100)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="fas fa-check me-1"></i>Fast
                                                    </span>
                                                }
                                                else if (query.AvgExecutionTimeMs < 500)
                                                {
                                                    <span class="badge bg-warning">
                                                        <i class="fas fa-clock me-1"></i>Moderate
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="fas fa-exclamation-triangle me-1"></i>Slow
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm" role="group">
                                                    <button class="btn btn-outline-info" onclick="viewQueryDetails('@query.QueryMetricId')" title="View Query">
                                                        <i class="fas fa-eye"></i>
                                                    </button>
                                                    <button class="btn btn-outline-success" onclick="optimizeQuery('@query.QueryMetricId')" title="Optimization Tips">
                                                        <i class="fas fa-tools"></i>
                                                    </button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <div class="h1 text-info mb-3">
                                <i class="fas fa-database"></i>
                            </div>
                            <h4>No Query Data</h4>
                            <p class="text-muted">No database query metrics available for the last @Model.TimeRange hours.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Performance Analytics -->
    @if (Model.PerformanceMetrics.Any() || Model.SlowestQueries.Any())
    {
        <div class="row g-3">
            <div class="col-md-6">
                <div class="sidebar-section">
                    <div class="section-header">
                        <h5><i class="fas fa-chart-pie me-2"></i>Performance Distribution</h5>
                    </div>
                    <div class="section-content">
                        <div class="row g-2">
                            @{
                                var fastPages = Model.PerformanceMetrics.Count(p => p.AvgResponseTimeMs < 500);
                                var moderatePages = Model.PerformanceMetrics.Count(p => p.AvgResponseTimeMs >= 500 && p.AvgResponseTimeMs < 1000);
                                var slowPages = Model.PerformanceMetrics.Count(p => p.AvgResponseTimeMs >= 1000);
                                var totalPages = fastPages + moderatePages + slowPages;
                            }
                            <div class="col-4">
                                <div class="text-center p-3 border rounded">
                                    <div class="h4 text-success">@fastPages</div>
                                    <div class="fw-bold">Fast</div>
                                    <small class="text-muted">&lt; 500ms</small>
                                    <div class="small text-muted">@(totalPages > 0 ? (fastPages * 100 / totalPages).ToString("F0") : "0")%</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="text-center p-3 border rounded">
                                    <div class="h4 text-warning">@moderatePages</div>
                                    <div class="fw-bold">Moderate</div>
                                    <small class="text-muted">500ms - 1s</small>
                                    <div class="small text-muted">@(totalPages > 0 ? (moderatePages * 100 / totalPages).ToString("F0") : "0")%</div>
                                </div>
                            </div>
                            <div class="col-4">
                                <div class="text-center p-3 border rounded">
                                    <div class="h4 text-danger">@slowPages</div>
                                    <div class="fw-bold">Slow</div>
                                    <small class="text-muted">&gt; 1s</small>
                                    <div class="small text-muted">@(totalPages > 0 ? (slowPages * 100 / totalPages).ToString("F0") : "0")%</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            
            <div class="col-md-6">
                <div class="sidebar-section">
                    <div class="section-header">
                        <h5><i class="fas fa-trophy me-2"></i>Top Performers</h5>
                    </div>
                    <div class="section-content">
                        @{
                            var topPages = Model.PerformanceMetrics
                                .OrderBy(p => p.AvgResponseTimeMs)
                                .Take(5);
                        }
                        <div class="table-responsive">
                            <table class="table table-sm">
                                <thead>
                                    <tr>
                                        <th>Page</th>
                                        <th>Load Time</th>
                                        <th>Requests</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var pageItem in topPages)
                                    {
                                        <tr>
                                            <td>
                                                <div class="fw-bold small">@pageItem.Controller/@pageItem.Action</div>
                                                <code class="small text-muted">@pageItem.Controller/@pageItem.Action</code>
                                            </td>
                                            <td>
                                                <span class="badge bg-success">@pageItem.AvgResponseTimeMs.ToString("F0") ms</span>
                                            </td>
                                            <td>@pageItem.RequestCount.ToString("N0")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function refreshData() {
            window.location.reload();
        }

        function viewPageDetails(pageId) {
            alert('Page performance details would be shown here for: ' + pageId);
        }

        function optimizePage(pageId) {
            alert('Performance optimization tips would be shown here for: ' + pageId);
        }

        function viewQueryDetails(queryId) {
            alert('Query details would be shown here for: ' + queryId);
        }

        function optimizeQuery(queryId) {
            alert('Query optimization suggestions would be shown here for: ' + queryId);
        }
    </script>
}
