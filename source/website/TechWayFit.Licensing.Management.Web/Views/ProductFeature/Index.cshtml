@model TechWayFit.Licensing.Management.Web.ViewModels.Product.ProductFeatureIndexViewModel

@{
    ViewData["Title"] = "Product Features";
    ViewData["PageTitle"] = "Product Features";
    var features = ViewData["Features"] as List<TechWayFit.Licensing.Management.Web.ViewModels.Product.FeatureInfoViewModel> ?? new List<TechWayFit.Licensing.Management.Web.ViewModels.Product.FeatureInfoViewModel>();
}

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="page-header mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">Product Features</h2>
                <p class="text-muted mb-0">Manage features and capabilities for @Model.ProductName.</p>
            </div>
            <div class="btn-group" role="group">
                <a href="@Url.Action("Details", "Product", new { id = Model.ProductId })" class="btn btn-outline-primary">
                    <i class="fas fa-info-circle me-1"></i>Basic Details
                </a>
                <a href="@Url.Action("Tiers", "Product", new { id = Model.ProductId })" class="btn btn-outline-primary">
                    <i class="fas fa-layer-group me-1"></i>Tiers
                </a>
                <a href="@Url.Action("Index", "ProductVersion", new { productId = Model.ProductId })" class="btn btn-outline-primary">
                    <i class="fas fa-code-branch me-1"></i>Versions
                </a>
                <a href="@Url.Action("Index", "ProductFeature", new { productId = Model.ProductId })" class="btn btn-primary">
                    <i class="fas fa-star me-1"></i>Features
                </a>
            </div>
        </div>
    </div>

    <!-- Product Info Card -->
    <div class="row g-2 mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <div class="d-flex align-items-center">
                        <div class="product-icon me-3" style="width: 40px; height: 40px; background: rgba(13, 110, 253, 0.1); border-radius: 8px; display: flex; align-items: center; justify-content: center;">
                            <i class="fas fa-cube text-primary"></i>
                        </div>
                        <div>
                            <h6 class="mb-0">@Model.ProductName</h6>
                            <small class="text-muted">@Model.ProductDescription</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Features List -->
    <div class="product-list-container">
        <div class="product-list-header">
            <div class="row align-items-center">
                <div class="col-md-6">
                    <div class="product-list-stats">
                        <span class="badge bg-primary">@features.Count Features</span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="d-flex justify-content-end">
                        <div class="input-group me-2" style="max-width: 300px;">
                            <input type="text" class="form-control" placeholder="Search features..." id="searchInput">
                            <button class="btn btn-outline-secondary" type="button">
                                <i class="fas fa-search"></i>
                            </button>
                        </div>
                        <a href="@Url.Action("Create", "ProductFeature", new { productId = Model.ProductId })" class="btn btn-success">
                            <i class="fas fa-plus me-1"></i>Add Feature
                        </a>
                    </div>
                </div>
            </div>
        </div>

        @if (features.Any())
        {
            <div class="table-responsive">
                <table class="table product-list-table table-hover">
                    <thead>
                        <tr>
                            <th class="sortable" data-sort="name">
                                <i class="fas fa-sort me-1"></i>Feature Name
                            </th>
                            <th class="sortable" data-sort="code">
                                <i class="fas fa-sort me-1"></i>Feature Code
                            </th>
                            <th class="sortable" data-sort="description">
                                <i class="fas fa-sort me-1"></i>Description
                            </th>
                            <th class="sortable" data-sort="displayOrder">
                                <i class="fas fa-sort me-1"></i>Order
                            </th>
                            <th class="sortable" data-sort="status">
                                <i class="fas fa-sort me-1"></i>Status
                            </th>
                            <th class="sortable" data-sort="versions">
                                <i class="fas fa-sort me-1"></i>Version Support
                            </th>
                            <th width="120">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var feature in features)
                        {
                            <tr data-search-text="@(feature.Name + " " + feature.Code + " " + feature.Description)">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="me-2" style="width: 30px; height: 30px; background: rgba(40, 167, 69, 0.1); border-radius: 6px; display: flex; align-items: center; justify-content: center;">
                                            <i class="fas fa-star text-success"></i>
                                        </div>
                                        <div>
                                            <div class="fw-medium">@feature.Name</div>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <code class="bg-light px-2 py-1 rounded">@feature.Code</code>
                                </td>
                                <td>
                                    <span class="text-muted">@(string.IsNullOrEmpty(feature.Description) ? "No description" : feature.Description)</span>
                                </td>
                                <td>
                                    <span class="badge bg-secondary">@feature.DisplayOrder</span>
                                </td>
                                <td>
                                    @if (feature.IsEnabled)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check me-1"></i>Enabled
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="fas fa-times me-1"></i>Disabled
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(feature.SupportFromVersion) || !string.IsNullOrEmpty(feature.SupportToVersion))
                                    {
                                        <small class="text-muted">
                                            @if (!string.IsNullOrEmpty(feature.SupportFromVersion))
                                            {
                                                <span>From: @feature.SupportFromVersion</span>
                                            }
                                            @if (!string.IsNullOrEmpty(feature.SupportToVersion))
                                            {
                                                @if (!string.IsNullOrEmpty(feature.SupportFromVersion))
                                                {
                                                    <br />
                                                }
                                                <span>To: @feature.SupportToVersion</span>
                                            }
                                        </small>
                                    }
                                    else
                                    {
                                        <span class="text-muted">All versions</span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm" role="group">
                                        <a href="@Url.Action("Edit", "ProductFeature", new { productId = Model.ProductId, featureId = feature.Id })" 
                                           class="btn btn-outline-primary" title="Edit Feature">
                                            <i class="fas fa-edit"></i>
                                        </a>
                                        @if (feature.CanDelete)
                                        {
                                            <button type="button" class="btn btn-outline-danger" 
                                                    onclick="confirmDelete('@feature.Id', '@feature.Name')" title="Delete Feature">
                                                <i class="fas fa-trash"></i>
                                            </button>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <div class="mb-3">
                    <i class="fas fa-star fa-3x text-muted"></i>
                </div>
                <h5 class="text-muted">No Features Found</h5>
                <p class="text-muted mb-3">This product doesn't have any features defined yet.</p>
                <a href="@Url.Action("Create", "ProductFeature", new { productId = Model.ProductId })" class="btn btn-primary">
                    <i class="fas fa-plus me-1"></i>Add First Feature
                </a>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Delete</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the feature "<span id="featureName"></span>"?</p>
                <p class="text-danger small">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">Delete Feature</button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Search functionality
        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchTerm = e.target.value.toLowerCase();
            const rows = document.querySelectorAll('tbody tr[data-search-text]');
            
            rows.forEach(row => {
                const searchText = row.getAttribute('data-search-text').toLowerCase();
                if (searchText.includes(searchTerm)) {
                    row.style.display = '';
                } else {
                    row.style.display = 'none';
                }
            });
        });

        // Sort functionality
        document.querySelectorAll('.sortable').forEach(header => {
            header.addEventListener('click', function() {
                const column = this.getAttribute('data-sort');
                sortTable(column);
            });
        });

        function sortTable(column) {
            // Simple table sorting implementation
            const table = document.querySelector('.product-list-table');
            const tbody = table.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr'));
            
            rows.sort((a, b) => {
                let aVal, bVal;
                
                switch(column) {
                    case 'name':
                        aVal = a.querySelector('td:first-child .fw-medium').textContent;
                        bVal = b.querySelector('td:first-child .fw-medium').textContent;
                        break;
                    case 'code':
                        aVal = a.querySelector('td:nth-child(2) code').textContent;
                        bVal = b.querySelector('td:nth-child(2) code').textContent;
                        break;
                    case 'displayOrder':
                        aVal = parseInt(a.querySelector('td:nth-child(4) .badge').textContent);
                        bVal = parseInt(b.querySelector('td:nth-child(4) .badge').textContent);
                        return aVal - bVal;
                    default:
                        aVal = a.querySelector(`td:nth-child(${getColumnIndex(column)})`).textContent;
                        bVal = b.querySelector(`td:nth-child(${getColumnIndex(column)})`).textContent;
                }
                
                return aVal.localeCompare(bVal);
            });
            
            rows.forEach(row => tbody.appendChild(row));
        }

        function getColumnIndex(column) {
            switch(column) {
                case 'name': return 1;
                case 'code': return 2;
                case 'description': return 3;
                case 'displayOrder': return 4;
                case 'status': return 5;
                case 'versions': return 6;
                default: return 1;
            }
        }

        // Delete confirmation
        function confirmDelete(featureId, featureName) {
            document.getElementById('featureName').textContent = featureName;
            document.getElementById('deleteForm').action = '@Url.Action("Delete", "ProductFeature", new { productId = Model.ProductId })' + '?featureId=' + featureId;
            
            var modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            modal.show();
        }
    </script>
}
