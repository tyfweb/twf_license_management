@model IEnumerable<TechWayFit.Licensing.Management.Core.Models.Product.ProductFeature>
@{
    ViewData["Title"] = "Product Features";
    var header = new TechWayFit.Licensing.Management.Web.ViewModels.Shared.PageHeaderViewModel
    {
        Title = "Product Features",
        Icon = "fas fa-puzzle-piece"
    };
}

@section PageHeader {
    <partial name="_PageHeaderViewComponent" model="header" />
}

<div class="product-list-container">
    <!-- Header with Search and Actions -->
    <div class="product-list-header">
        <div class="search-section">
            <div class="search-controls">
                <div class="search-input">
                    <i class="fas fa-search search-icon"></i>
                    <input type="text" id="searchInput" class="form-control" placeholder="Search features..." />
                </div>
                <span class="filter-count" id="filterCount" style="display: none;">0 results</span>
                <a href="#" class="clear-filter" id="clearFilter" style="display: none;">Clear</a>
            </div>
            <div class="action-controls">
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Add Feature
                </a>
            </div>
        </div>
    </div>

    <!-- Table Section -->
    <div class="product-list-table">
        @if (Model.Any())
        {
            <table class="table">
                <thead>
                    <tr>
                        <th class="sortable" data-sort="name">
                            Feature Name
                            <i class="fas fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-sort="description">
                            Description
                            <i class="fas fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-sort="order">
                            Display Order
                            <i class="fas fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-sort="usage">
                            Usage Type
                            <i class="fas fa-sort sort-icon"></i>
                        </th>
                        <th class="sortable" data-sort="status">
                            Status
                            <i class="fas fa-sort sort-icon"></i>
                        </th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="productTable">
                    @foreach (var item in Model)
                    {
                        <tr data-search="@(item.Name?.ToLower()) @(item.Description?.ToLower()) @(item.Code?.ToLower())">
                            <td>
                                <div class="d-flex align-items-center">
                                    <div class="item-icon icon-primary">
                                        <i class="fas fa-puzzle-piece"></i>
                                    </div>
                                    <div class="item-details">
                                        <div class="item-title">@Html.DisplayFor(modelItem => item.Name)</div>
                                        @if (!string.IsNullOrEmpty(item.Code))
                                        {
                                            <div class="item-subtitle">Code: @Html.DisplayFor(modelItem => item.Code)</div>
                                        }
                                    </div>
                                </div>
                            </td>
                            <td>
                                @if (!string.IsNullOrEmpty(item.Description))
                                {
                                    <span title="@item.Description">
                                        @(item.Description.Length > 60 ? item.Description.Substring(0, 60) + "..." : item.Description)
                                    </span>
                                }
                                else
                                {
                                    <span class="text-muted">No description</span>
                                }
                            </td>
                            <td>
                                <span class="badge badge-tier">Order: @item.DisplayOrder</span>
                            </td>
                            <td>
                                @if (item.Usage?.IsUnlimited == true)
                                {
                                    <span class="badge badge-success">Unlimited</span>
                                }
                                else if (item.Usage?.MaxUsage > 0)
                                {
                                    <span class="badge badge-warning">Limited (@item.Usage.MaxUsage)</span>
                                }
                                else
                                {
                                    <span class="badge badge-secondary">Basic</span>
                                }
                            </td>
                            <td>
                                <span class="badge @(item.IsEnabled ? "badge-status-active" : "badge-status-inactive")">
                                    @(item.IsEnabled ? "Enabled" : "Disabled")
                                </span>
                            </td>
                            <td>
                                <div class="actions">
                                    <div class="dropdown">
                                        <button class="btn btn-sm dropdown-toggle" type="button" data-bs-toggle="dropdown">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li>
                                                <a class="dropdown-item" asp-action="Details" asp-route-id="@item.FeatureId">
                                                    <i class="fas fa-eye"></i> View Details
                                                </a>
                                            </li>
                                            <li>
                                                <a class="dropdown-item" asp-action="Edit" asp-route-id="@item.FeatureId">
                                                    <i class="fas fa-edit"></i> Edit
                                                </a>
                                            </li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li>
                                                <a class="dropdown-item text-danger" asp-action="Delete" asp-route-id="@item.FeatureId">
                                                    <i class="fas fa-trash"></i> Delete
                                                </a>
                                            </li>
                                        </ul>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="product-list-empty">
                <div class="empty-icon">
                    <i class="fas fa-puzzle-piece"></i>
                </div>
                <div class="empty-title">No Product Features Found</div>
                <div class="empty-subtitle">Get started by creating your first product feature.</div>
                <a asp-action="Create" class="btn btn-primary">
                    <i class="fas fa-plus"></i> Create First Feature
                </a>
            </div>
        }
    </div>

    <!-- Footer with Info -->
    @if (Model.Any())
    {
        <div class="product-list-footer">
            <div class="list-info">
                <div class="count-info">
                    Showing <span id="visibleCount">@Model.Count()</span> of <span id="totalCount">@Model.Count()</span> features
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Search functionality
            $('#searchInput').on('keyup', function() {
                var searchText = $(this).val().toLowerCase();
                var $rows = $('#productTable tr');
                var visibleCount = 0;
                
                $rows.each(function() {
                    var searchData = $(this).data('search') || '';
                    if (searchData.includes(searchText)) {
                        $(this).removeClass('filtered-out');
                        visibleCount++;
                    } else {
                        $(this).addClass('filtered-out');
                    }
                });
                
                // Update counts and filter indicators
                $('#visibleCount').text(visibleCount);
                
                if (searchText) {
                    $('#filterCount').text(visibleCount + ' results').show();
                    $('#clearFilter').show();
                } else {
                    $('#filterCount').hide();
                    $('#clearFilter').hide();
                }
            });
            
            // Clear filter
            $('#clearFilter').on('click', function(e) {
                e.preventDefault();
                $('#searchInput').val('');
                $('#productTable tr').removeClass('filtered-out');
                $('#filterCount').hide();
                $('#clearFilter').hide();
                $('#visibleCount').text($('#totalCount').text());
            });
            
            // Table sorting
            $('.sortable').on('click', function() {
                var $this = $(this);
                var column = $this.data('sort');
                var $table = $this.closest('table');
                var $tbody = $table.find('tbody');
                var $rows = $tbody.find('tr:not(.filtered-out)');
                var isAsc = $this.hasClass('sort-asc');
                
                // Reset all sort classes
                $('.sortable').removeClass('sort-asc sort-desc');
                
                // Set current sort direction
                if (isAsc) {
                    $this.addClass('sort-desc');
                } else {
                    $this.addClass('sort-asc');
                }
                
                // Sort rows
                $rows.sort(function(a, b) {
                    var aVal = $(a).find('td').eq($this.index()).text().toLowerCase();
                    var bVal = $(b).find('td').eq($this.index()).text().toLowerCase();
                    
                    if (isAsc) {
                        return aVal < bVal ? 1 : aVal > bVal ? -1 : 0;
                    } else {
                        return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
                    }
                });
                
                // Reorder rows in DOM
                $tbody.append($rows);
            });
        });
    </script>
}
