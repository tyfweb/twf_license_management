@model TechWayFit.Licensing.Management.Web.ViewModels.Settings.SettingsIndexViewModel
@using TechWayFit.Licensing.Management.Web.ViewModels.Settings
@{
    ViewData["Title"] = "System Settings";
    ViewData["Description"] = "Manage system settings and configuration";
}


@Html.AntiForgeryToken()

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="header mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">System Settings</h2>
                <p class="text-muted mb-0">Manage your application configuration and system settings.</p>
            </div>
            <div class="d-flex gap-2">
                <button type="button" class="btn btn-primary" onclick="saveAllChanges()">
                    <i class="fas fa-save me-2"></i>Save All Changes
                </button>
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-secondary" onclick="validateAllSettings()">
                        <i class="fas fa-check-circle me-1"></i>Validate All
                    </button>
                    <a href="@Url.Action("Backup")" class="btn btn-outline-secondary">
                        <i class="fas fa-download me-1"></i>Backup
                    </a>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Cards -->
    <div class="row g-2 mb-3">
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-cog"></i>
                    </div>
                    <div class="stats-number">@Model.TotalSettings</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Total Settings</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card stats-card-success">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-edit"></i>
                    </div>
                    <div class="stats-number" id="modifiedCount">@Model.ModifiedSettings</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Modified</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-lock"></i>
                    </div>
                    <div class="stats-number">@Model.ReadOnlySettings</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Read-Only</div>
                </div>
            </div>
        </div>
        <div class="col-sm-6 col-lg-3">
            <div class="stats-card">
                <div class="stats-row-1">
                    <div class="stats-icon">
                        <i class="fas fa-tags"></i>
                    </div>
                    <div class="stats-number">@Model.Categories.Count</div>
                </div>
                <div class="stats-row-2">
                    <div class="stats-label">Categories</div>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <h5><i class="fas fa-bolt me-2"></i>Quick Actions</h5>
                </div>
                <div class="section-content">
                    <div class="row g-2">
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-primary w-100" onclick="resetAllModified()">
                                <i class="fas fa-undo me-2"></i>Reset Modified
                            </button>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-secondary w-100" onclick="exportSettings()">
                                <i class="fas fa-download me-2"></i>Export Settings
                            </button>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-info w-100" onclick="importSettings()">
                                <i class="fas fa-upload me-2"></i>Import Settings
                            </button>
                        </div>
                        <div class="col-sm-6 col-lg-3">
                            <button type="button" class="btn btn-outline-success w-100" onclick="validateAllSettings()">
                                <i class="fas fa-shield-alt me-2"></i>Validate All
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Theme Selector Section -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <h5><i class="fas fa-palette me-2"></i>Application Theme</h5>
                </div>
                <div class="section-content">
                    <div class="row g-3">
                        <div class="col-md-6">
                            <div class="theme-selector-container">
                                <label class="form-label">Select Theme</label>
                                <div class="theme-options d-flex gap-3 flex-wrap">
                                    <div class="theme-option" data-theme="default">
                                        <div class="theme-preview theme-preview-default">
                                            <div class="theme-preview-header"></div>
                                            <div class="theme-preview-content">
                                                <div class="theme-preview-text"></div>
                                                <div class="theme-preview-button"></div>
                                            </div>
                                        </div>
                                        <span class="theme-label">Default</span>
                                    </div>
                                    <div class="theme-option" data-theme="dark">
                                        <div class="theme-preview theme-preview-dark">
                                            <div class="theme-preview-header"></div>
                                            <div class="theme-preview-content">
                                                <div class="theme-preview-text"></div>
                                                <div class="theme-preview-button"></div>
                                            </div>
                                        </div>
                                        <span class="theme-label">Dark</span>
                                    </div>
                                    <div class="theme-option" data-theme="blue">
                                        <div class="theme-preview theme-preview-blue">
                                            <div class="theme-preview-header"></div>
                                            <div class="theme-preview-content">
                                                <div class="theme-preview-text"></div>
                                                <div class="theme-preview-button"></div>
                                            </div>
                                        </div>
                                        <span class="theme-label">Blue</span>
                                    </div>
                                    <div class="theme-option" data-theme="green">
                                        <div class="theme-preview theme-preview-green">
                                            <div class="theme-preview-header"></div>
                                            <div class="theme-preview-content">
                                                <div class="theme-preview-text"></div>
                                                <div class="theme-preview-button"></div>
                                            </div>
                                        </div>
                                        <span class="theme-label">Green</span>
                                    </div>
                                    <div class="theme-option" data-theme="purple">
                                        <div class="theme-preview theme-preview-purple">
                                            <div class="theme-preview-header"></div>
                                            <div class="theme-preview-content">
                                                <div class="theme-preview-text"></div>
                                                <div class="theme-preview-button"></div>
                                            </div>
                                        </div>
                                        <span class="theme-label">Purple</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="theme-settings">
                                <div class="mb-3">
                                    <div class="form-check form-switch">
                                        <input class="form-check-input" type="checkbox" id="themeAutoDetect">
                                        <label class="form-check-label" for="themeAutoDetect">
                                            Auto-detect theme based on system preference
                                        </label>
                                    </div>
                                </div>
                                <div class="mb-3">
                                    <label for="themeTransitionDuration" class="form-label">Transition Duration</label>
                                    <div class="input-group">
                                        <input type="range" class="form-range" id="themeTransitionDuration" min="0" max="1000" step="50" value="200">
                                        <span class="input-group-text" id="transitionValue">200ms</span>
                                    </div>
                                </div>
                                <div class="theme-actions">
                                    <button type="button" class="btn btn-primary btn-sm" id="applyThemeBtn">
                                        <i class="fas fa-check me-1"></i>Apply Theme
                                    </button>
                                    <button type="button" class="btn btn-outline-secondary btn-sm" id="resetThemeBtn">
                                        <i class="fas fa-undo me-1"></i>Reset to Default
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Search and Filter Section -->
    <div class="row g-2 mb-3">
        <div class="col-12">
            <div class="search-section">
                <div class="d-flex flex-wrap align-items-center gap-3">
                    <div class="flex-grow-1">
                        <div class="search-box">
                            <i class="fas fa-search search-icon"></i>
                            <input type="text" class="form-control" id="searchInput" placeholder="Search settings by name, description, or key...">
                        </div>
                    </div>
                    <div class="d-flex align-items-center gap-2">
                        <div class="form-check mb-0">
                            <input class="form-check-input" type="checkbox" id="showModifiedOnly">
                            <label class="form-check-label text-nowrap" for="showModifiedOnly">
                                Show modified only
                            </label>
                        </div>
                        <button type="button" class="btn btn-primary" id="searchBtn">
                            <i class="fas fa-search me-1"></i>Search
                        </button>
                        <button type="button" class="btn btn-outline-secondary" id="clearFiltersBtn">
                            <i class="fas fa-times me-1"></i>Clear
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Category Tabs -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="edit-section">
                <div class="section-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5><i class="fas fa-cogs me-2"></i>Settings Management</h5>
                    </div>
                </div>
                
                <!-- Category Navigation -->
                <div class="category-navigation mb-3">
                    <div class="btn-group" role="group" aria-label="Category filter">
                        <button type="button" class="btn btn-outline-primary active" data-category="all" onclick="filterByCategory('all', this)">
                            <i class="fas fa-layer-group me-1"></i>All Settings
                            <span class="badge bg-secondary ms-1">@Model.TotalSettings</span>
                        </button>
                        @foreach (var category in Model.Categories)
                        {
                            <button type="button" class="btn btn-outline-primary" data-category="@category" onclick="filterByCategory('@category', this)">
                                <i class="fas fa-tag me-1"></i>@category
                                <span class="badge bg-secondary ms-1">@Model.GetCategorySettingsCount(category)</span>
                            </button>
                        }
                        <button type="button" class="btn btn-outline-primary" data-category="config" onclick="filterByCategory('config', this)">
                            <i class="fas fa-file-code me-1"></i>Configuration
                            <span class="badge bg-secondary ms-1">@Model.ConfigurationSettings.Count</span>
                        </button>
                    </div>
                </div>

                <!-- Content Area -->
                <div class="section-content">
                    <!-- Alerts -->
                    <div id="alertContainer"></div>

                    <!-- List View -->
                    <div id="listView">
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Setting</th>
                                        <th>Category</th>
                                        <th>Current Value</th>
                                        <th>Type</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody id="settingsTableBody">
                                    @foreach (var categoryGroup in Model.SettingsGrouped.OrderBy(g => g.Key))
                                    {
                                        @foreach (var setting in categoryGroup.Value.OrderBy(s => s.SortOrder))
                                        {
                                            <tr class="setting-row @(setting.IsModified ? "table-warning" : "")" 
                                                data-setting-id="@setting.SettingId" 
                                                data-category="@setting.Category"
                                                data-possible-values="@(setting.PossibleValues ?? "")"
                                                data-search-text="@($"{setting.DisplayName} {setting.Description} {setting.Category} {setting.Key}".ToLower())">
                                                <td>
                                                    <div class="fw-semibold">
                                                        @setting.DisplayName
                                                        @if (setting.IsRequired)
                                                        {
                                                            <span class="text-danger">*</span>
                                                        }
                                                        @if (setting.IsModified)
                                                        {
                                                            <i class="fas fa-circle text-warning ms-1" title="Modified"></i>
                                                        }
                                                    </div>
                                                    <small class="text-muted d-block">@setting.Key</small>
                                                    @if (!string.IsNullOrEmpty(setting.Description))
                                                    {
                                                        <small class="text-muted d-block">@setting.Description</small>
                                                    }
                                                </td>
                                                <td>
                                                    <span class="badge bg-secondary">@setting.Category</span>
                                                </td>
                                                <td>
                                                    <div class="setting-value-display">
                                                        @if (setting.DataType.ToLower() == "boolean" || setting.DataType.ToLower() == "bool")
                                                        {
                                                            <span class="badge @(string.Equals(setting.Value, "true", StringComparison.OrdinalIgnoreCase) ? "bg-success" : "bg-secondary")">
                                                                @(string.Equals(setting.Value, "true", StringComparison.OrdinalIgnoreCase) ? "Enabled" : "Disabled")
                                                            </span>
                                                        }
                                                        else if (setting.DataType.ToLower() == "multi-list" || setting.DataType.ToLower() == "multilist" || setting.DataType.ToLower() == "multiple" || setting.DataType.ToLower() == "checkbox-list")
                                                        {
                                                            @try
                                                            {
                                                                var selectedValues = System.Text.Json.JsonSerializer.Deserialize<string[]>(setting.Value ?? "[]");
                                                                if (selectedValues != null && selectedValues.Length > 0)
                                                                {
                                                                    var displayText = string.Join(", ", selectedValues);
                                                                    var truncatedText = displayText.Length > 50 ? displayText.Substring(0, 50) + "..." : displayText;
                                                                    <span class="text-truncate d-inline-block" style="max-width: 200px;" title="@displayText">@truncatedText</span>
                                                                }
                                                                else
                                                                {
                                                                    <span class="text-muted">No items selected</span>
                                                                }
                                                            }
                                                            catch
                                                            {
                                                                <span class="text-danger">Invalid JSON format</span>
                                                            }
                                                        }
                                                        else if (setting.DataType.ToLower() == "image" || setting.DataType.ToLower() == "file")
                                                        {
                                                            @if (!string.IsNullOrEmpty(setting.Value) && setting.Value.StartsWith("data:image/"))
                                                            {
                                                                <div class="d-flex align-items-center">
                                                                    <img src="@setting.Value" class="img-thumbnail me-2" style="max-width: 40px; max-height: 40px;">
                                                                    <span class="text-muted">Image uploaded</span>
                                                                </div>
                                                            }
                                                            else
                                                            {
                                                                <span class="text-muted">No image</span>
                                                            }
                                                        }
                                                        else
                                                        {
                                                            <span class="text-truncate d-inline-block" style="max-width: 200px;" title="@setting.Value">@setting.Value</span>
                                                        }
                                                    </div>
                                                </td>
                                                <td>
                                                    <span class="badge bg-info">@setting.DataType</span>
                                                </td>
                                                <td>
                                                    @if (setting.IsReadOnly)
                                                    {
                                                        <span class="badge bg-secondary">Read-Only</span>
                                                    }
                                                    else if (setting.IsModified)
                                                    {
                                                        <span class="badge bg-warning">Modified</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge bg-light text-dark">Default</span>
                                                    }
                                                </td>
                                                <td>
                                                    <div class="btn-group" role="group">
                                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="editSetting('@setting.SettingId')" title="Edit">
                                                            <i class="fas fa-edit"></i>
                                                        </button>
                                                        <button type="button" class="btn btn-sm btn-outline-warning" onclick="resetSetting('@setting.SettingId')" title="Reset to default">
                                                            <i class="fas fa-undo"></i>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>

                    <!-- Configuration Settings Section -->
                    <div class="settings-category-section" data-category="config" style="display: none;">
                        <h6 class="category-header">
                            <i class="fas fa-file-code me-2"></i>Configuration Settings
                        </h6>
                        <div class="row">
                            <div class="col-12">
                                <div class="configuration-display">
                                    @foreach (var configGroup in Model.ConfigurationSettings)
                                    {
                                        <div class="config-group mb-4">
                                            <div class="card">
                                                <div class="card-header">
                                                    <h6 class="mb-0">
                                                        <i class="fas fa-cog me-2"></i>@configGroup.Key
                                                    </h6>
                                                </div>
                                                <div class="card-body">
                                                    @{
                                                        string configJson = "";
                                                        try
                                                        {
                                                            configJson = System.Text.Json.JsonSerializer.Serialize(configGroup.Value, new System.Text.Json.JsonSerializerOptions 
                                                            { 
                                                                WriteIndented = true,
                                                                Encoder = System.Text.Encodings.Web.JavaScriptEncoder.UnsafeRelaxedJsonEscaping
                                                            });
                                                        }
                                                        catch
                                                        {
                                                            configJson = configGroup.Value?.ToString() ?? "null";
                                                        }
                                                    }
                                                    
                                                    @if (configGroup.Value is IDictionary<string, object> dict && dict.Any())
                                                    {
                                                        <div class="config-items">
                                                            @foreach (var item in dict)
                                                            {
                                                                <div class="config-item mb-2">
                                                                    <div class="row">
                                                                        <div class="col-md-3">
                                                                            <strong class="config-key">@item.Key:</strong>
                                                                        </div>
                                                                        <div class="col-md-9">
                                                                            <span class="config-value">
                                                                                @if (item.Value is IDictionary<string, object> nestedDict)
                                                                                {
                                                                                    <details class="nested-config">
                                                                                        <summary>@nestedDict.Count nested items</summary>
                                                                                        <div class="nested-config-content ms-3 mt-2">
                                                                                            @foreach (var nested in nestedDict)
                                                                                            {
                                                                                                <div class="mb-1">
                                                                                                    <span class="text-muted">@nested.Key:</span>
                                                                                                    <span class="ms-2">@(nested.Value?.ToString() ?? "null")</span>
                                                                                                </div>
                                                                                            }
                                                                                        </div>
                                                                                    </details>
                                                                                }
                                                                                else if (item.Value is System.Collections.IEnumerable enumerable && !(item.Value is string))
                                                                                {
                                                                                    <div class="config-array">
                                                                                        @{
                                                                                            var items = enumerable.Cast<object>().ToList();
                                                                                        }
                                                                                        @if (items.Count > 0)
                                                                                        {
                                                                                            <span class="badge bg-info">@items.Count items</span>
                                                                                            <ul class="list-unstyled mt-1 ms-3">
                                                                                                @foreach (var arrayItem in items.Take(5))
                                                                                                {
                                                                                                    <li><small>• @(arrayItem?.ToString() ?? "null")</small></li>
                                                                                                }
                                                                                                @if (items.Count > 5)
                                                                                                {
                                                                                                    <li><small>... and @(items.Count - 5) more</small></li>
                                                                                                }
                                                                                            </ul>
                                                                                        }
                                                                                        else
                                                                                        {
                                                                                            <span class="text-muted">Empty array</span>
                                                                                        }
                                                                                    </div>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <code class="config-simple-value">@(item.Value?.ToString() ?? "null")</code>
                                                                                }
                                                                            </span>
                                                                        </div>
                                                                    </div>
                                                                </div>
                                                            }
                                                        </div>
                                                    }
                                                    else
                                                    {
                                                        <div class="config-simple">
                                                            <code class="config-simple-value">@(configGroup.Value?.ToString() ?? "null")</code>
                                                        </div>
                                                    }
                                                    
                                                    <!-- Raw JSON view -->
                                                    <div class="mt-3">
                                                        <details>
                                                            <summary class="text-muted"><small>View Raw JSON</small></summary>
                                                            <pre class="mt-2 p-2 bg-light border rounded"><code>@configJson</code></pre>
                                                        </details>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- No Results -->
                    <div id="noResults" class="no-results d-none">
                        <i class="fas fa-search"></i>
                        <h5>No settings found</h5>
                        <p>Try adjusting your search criteria or filters.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/js/settings.js"  asp-append-version="true"></script>
}
