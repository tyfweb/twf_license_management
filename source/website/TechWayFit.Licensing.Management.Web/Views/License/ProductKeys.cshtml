@model TechWayFit.Licensing.Management.Web.ViewModels.License.LicenseProductKeysViewModel
@{
    ViewData["Title"] = "ProductKeys Management";
    ViewData["PageTitle"] = $"ProductKeys for License: {Model.License.LicenseCode}";
    ViewData["Breadcrumb"] = new List<(string Text, string? Url)>
    {
        ("Licenses", Url.Action("Index", "License")),
        (Model.License.LicenseCode, Url.Action("Details", "License", new { id = Model.License.LicenseId })),
        ("ProductKeys", null)
    };
}

<div class="container-fluid">
    <!-- License Information Header -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card border-primary">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">
                        <i class="fas fa-key me-2"></i>
                        ProductKeys for License: @Model.License.LicenseCode
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <strong>Product:</strong><br>
                            <span class="text-muted">@Model.License.LicenseConsumer.Product.Name</span>
                        </div>
                        <div class="col-md-3">
                            <strong>Consumer:</strong><br>
                            <span class="text-muted">@Model.License.LicenseConsumer.Consumer.CompanyName</span>
                        </div>
                        <div class="col-md-3">
                            <strong>License Status:</strong><br>
                            <span class="badge @(Model.License.Status == TechWayFit.Licensing.Core.Models.LicenseStatus.Active ? "bg-success" : "bg-warning")">
                                @Model.License.Status
                            </span>
                        </div>
                        <div class="col-md-3">
                            <strong>Valid Until:</strong><br>
                            <span class="text-muted">@Model.License.ValidTo.ToString("MMM dd, yyyy")</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Statistics Dashboard -->
    <div class="row mb-4">
        <div class="col-md-2">
            <div class="card bg-info text-white">
                <div class="card-body text-center">
                    <h4>@Model.Stats.TotalKeys</h4>
                    <small>Total Keys</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-success text-white">
                <div class="card-body text-center">
                    <h4>@Model.Stats.ActiveKeys</h4>
                    <small>Active</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-warning text-white">
                <div class="card-body text-center">
                    <h4>@Model.Stats.PendingKeys</h4>
                    <small>Pending</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-danger text-white">
                <div class="card-body text-center">
                    <h4>@Model.Stats.ExpiredKeys</h4>
                    <small>Expired</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-dark text-white">
                <div class="card-body text-center">
                    <h4>@Model.Stats.RevokedKeys</h4>
                    <small>Revoked</small>
                </div>
            </div>
        </div>
        <div class="col-md-2">
            <div class="card bg-secondary text-white">
                <div class="card-body text-center">
                    <h4>@Model.Stats.SuspendedKeys</h4>
                    <small>Suspended</small>
                </div>
            </div>
        </div>
    </div>

    <!-- Action Buttons -->
    <div class="row mb-3">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center">
                <div>
                    <a href="@Url.Action("Details", "License", new { id = Model.License.LicenseId })" 
                       class="btn btn-secondary">
                        <i class="fas fa-arrow-left me-1"></i> Back to License
                    </a>
                </div>
                <div>
                    @if (Model.License.Status == TechWayFit.Licensing.Core.Models.LicenseStatus.Active)
                    {
                        <form method="post" action="@Url.Action("GenerateProductKey")" class="d-inline">
                            <input type="hidden" name="licenseId" value="@Model.License.LicenseId" />
                            <input type="hidden" name="quantity" value="1" />
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-plus me-1"></i> Generate ProductKey
                            </button>
                        </form>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- ProductKeys Table -->
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    <h6 class="mb-0">ProductKeys (@Model.Stats.TotalKeys total)</h6>
                </div>
                <div class="card-body">
                    @if (Model.ProductKeys.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-striped table-hover">
                                <thead class="table-dark">
                                    <tr>
                                        <th>ProductKey</th>
                                        <th>Status</th>
                                        <th>Created</th>
                                        <th>Activated</th>
                                        <th>Expires</th>
                                        <th>Machine Info</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var productKey in Model.ProductKeys)
                                    {
                                        <tr>
                                            <td>
                                                <code class="text-primary">@productKey.ProductKey</code>
                                                @if (!string.IsNullOrEmpty(productKey.ClientIdentifier))
                                                {
                                                    <br><small class="text-muted">Client: @productKey.ClientIdentifier</small>
                                                }
                                            </td>
                                            <td>
                                                <span class="badge @productKey.StatusCssClass">
                                                    <i class="@productKey.StatusIcon me-1"></i>
                                                    @productKey.Status
                                                </span>
                                                @if (productKey.IsExpired)
                                                {
                                                    <br><small class="text-danger">Expired</small>
                                                }
                                                else if (productKey.DaysUntilExpiry <= 30 && productKey.DaysUntilExpiry > 0)
                                                {
                                                    <br><small class="text-warning">@productKey.DaysUntilExpiry days left</small>
                                                }
                                            </td>
                                            <td>
                                                @productKey.CreatedAt.ToString("MMM dd, yyyy")
                                                <br><small class="text-muted">@productKey.CreatedAt.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                @if (productKey.ActivationDate.HasValue)
                                                {
                                                    @productKey.ActivationDate.Value.ToString("MMM dd, yyyy")
                                                    <br><small class="text-muted">@productKey.ActivationDate.Value.ToString("HH:mm")</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">Not activated</span>
                                                }
                                            </td>
                                            <td>
                                                @if (productKey.ActivationEndDate.HasValue)
                                                {
                                                    @productKey.ActivationEndDate.Value.ToString("MMM dd, yyyy")
                                                    <br><small class="text-muted">@productKey.ActivationEndDate.Value.ToString("HH:mm")</small>
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No expiry</span>
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(productKey.MachineId))
                                                {
                                                    <span title="Machine ID: @productKey.MachineId">
                                                        <i class="fas fa-desktop me-1"></i>
                                                        @if (!string.IsNullOrEmpty(productKey.MachineName))
                                                        {
                                                            <text>@productKey.MachineName</text>
                                                        }
                                                        else
                                                        {
                                                            <text>@productKey.MachineId.Substring(0, Math.Min(8, productKey.MachineId.Length))...</text>
                                                        }
                                                    </span>
                                                    @if (productKey.LastHeartbeat.HasValue)
                                                    {
                                                        <br><small class="text-muted">
                                                            Last seen: @productKey.LastHeartbeat.Value.ToString("MMM dd, HH:mm")
                                                        </small>
                                                    }
                                                }
                                                else
                                                {
                                                    <span class="text-muted">No machine info</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group-vertical btn-group-sm">
                                                    @if (productKey.CanDeactivate)
                                                    {
                                                        <form method="post" action="@Url.Action("DeactivateProductKey")" class="d-inline">
                                                            <input type="hidden" name="licenseId" value="@Model.License.LicenseId" />
                                                            <input type="hidden" name="productKey" value="@productKey.ProductKey" />
                                                            <button type="submit" class="btn btn-outline-danger btn-sm"
                                                                    onclick="return confirm('Are you sure you want to deactivate this ProductKey?')">
                                                                <i class="fas fa-ban me-1"></i> Deactivate
                                                            </button>
                                                        </form>
                                                    }
                                                    @if (!string.IsNullOrEmpty(productKey.ActivationSignature))
                                                    {
                                                        <button type="button" class="btn btn-outline-info btn-sm mt-1"
                                                                data-bs-toggle="modal" data-bs-target="#signatureModal-@productKey.Id">
                                                            <i class="fas fa-info-circle me-1"></i> Details
                                                        </button>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination -->
                        @if (Model.Pagination.TotalPages > 1)
                        {
                            <nav aria-label="ProductKeys pagination">
                                <ul class="pagination justify-content-center">
                                    <li class="page-item @(Model.Pagination.CurrentPage <= 1 ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("ProductKeys", new { licenseId = Model.License.LicenseId, page = Model.Pagination.CurrentPage - 1 })">
                                            Previous
                                        </a>
                                    </li>
                                    
                                    @for (int i = Math.Max(1, Model.Pagination.CurrentPage - 2); i <= Math.Min(Model.Pagination.TotalPages, Model.Pagination.CurrentPage + 2); i++)
                                    {
                                        <li class="page-item @(i == Model.Pagination.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("ProductKeys", new { licenseId = Model.License.LicenseId, page = i })">@i</a>
                                        </li>
                                    }
                                    
                                    <li class="page-item @(Model.Pagination.CurrentPage >= Model.Pagination.TotalPages ? "disabled" : "")">
                                        <a class="page-link" href="@Url.Action("ProductKeys", new { licenseId = Model.License.LicenseId, page = Model.Pagination.CurrentPage + 1 })">
                                            Next
                                        </a>
                                    </li>
                                </ul>
                            </nav>
                        }
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-key fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No ProductKeys Generated</h5>
                            <p class="text-muted">This license doesn't have any ProductKeys yet.</p>
                            @if (Model.License.Status == TechWayFit.Licensing.Core.Models.LicenseStatus.Active)
                            {
                                <form method="post" action="@Url.Action("GenerateProductKey")" class="d-inline">
                                    <input type="hidden" name="licenseId" value="@Model.License.LicenseId" />
                                    <input type="hidden" name="quantity" value="1" />
                                    <button type="submit" class="btn btn-primary">
                                        <i class="fas fa-plus me-1"></i> Generate First ProductKey
                                    </button>
                                </form>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Signature Details Modals -->
@foreach (var productKey in Model.ProductKeys.Where(pk => !string.IsNullOrEmpty(pk.ActivationSignature)))
{
    <div class="modal fade" id="signatureModal-@productKey.Id" tabindex="-1" aria-labelledby="signatureModalLabel-@productKey.Id" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="signatureModalLabel-@productKey.Id">ProductKey Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <dl class="row">
                        <dt class="col-sm-3">ProductKey:</dt>
                        <dd class="col-sm-9"><code>@productKey.ProductKey</code></dd>
                        
                        <dt class="col-sm-3">Status:</dt>
                        <dd class="col-sm-9">
                            <span class="badge @productKey.StatusCssClass">@productKey.Status</span>
                        </dd>
                        
                        @if (!string.IsNullOrEmpty(productKey.ActivationSignature))
                        {
                            <dt class="col-sm-3">Activation Signature:</dt>
                            <dd class="col-sm-9">
                                <textarea class="form-control" rows="3" readonly>@productKey.ActivationSignature</textarea>
                            </dd>
                        }
                        
                        @if (!string.IsNullOrEmpty(productKey.MachineId))
                        {
                            <dt class="col-sm-3">Machine ID:</dt>
                            <dd class="col-sm-9"><code>@productKey.MachineId</code></dd>
                        }
                        
                        @if (!string.IsNullOrEmpty(productKey.MachineName))
                        {
                            <dt class="col-sm-3">Machine Name:</dt>
                            <dd class="col-sm-9">@productKey.MachineName</dd>
                        }
                        
                        @if (productKey.LastHeartbeat.HasValue)
                        {
                            <dt class="col-sm-3">Last Heartbeat:</dt>
                            <dd class="col-sm-9">@productKey.LastHeartbeat.Value.ToString("yyyy-MM-dd HH:mm:ss UTC")</dd>
                        }
                    </dl>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Auto-refresh every 30 seconds for real-time updates
        setInterval(function() {
            // Only refresh if there are active keys to monitor
            if (@Model.Stats.ActiveKeys > 0) {
                location.reload();
            }
        }, 30000);
        
        // Copy ProductKey to clipboard functionality
        function copyToClipboard(text) {
            navigator.clipboard.writeText(text).then(function() {
                // Show success feedback
                alert('ProductKey copied to clipboard!');
            });
        }
        
        // Add click handlers to ProductKey codes for copying
        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('code.text-primary').forEach(function(element) {
                element.style.cursor = 'pointer';
                element.title = 'Click to copy';
                element.addEventListener('click', function() {
                    copyToClipboard(this.textContent);
                });
            });
        });
    </script>
}
