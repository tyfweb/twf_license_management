@model TechWayFit.Licensing.Management.Web.ViewModels.Product.ProductVersionCreateEditViewModel

@{
    ViewData["Title"] = "Edit Product Version";
    var productName = ViewData["ProductName"]?.ToString() ?? "";
    var productId = (Guid)(ViewData["ProductId"] ?? Guid.Empty);
    var versionId = (Guid)(ViewData["VersionId"] ?? Guid.Empty);
    
    // Prepare header data
    var headerModel = new TechWayFit.Licensing.Management.Web.ViewModels.Shared.PageHeaderViewModel
    {
        Title = "Edit Version",
        Icon = "fas fa-edit",
        BreadcrumbItems = new List<TechWayFit.Licensing.Management.Web.ViewModels.Shared.BreadcrumbItem>
        {
            new() { Text = "Products", Controller = "Product", Action = "Index" },
            new() { Text = productName, Controller = "Product", Action = "Details", RouteValues = new { id = productId } },
            new() { Text = "Versions", Controller = "ProductVersion", Action = "Index", RouteValues = new { productId = productId } },
            new() { Text = "Edit", IsActive = true }
        },
        BackButtonText = "Back to Versions",
        BackButtonController = "ProductVersion",
        BackButtonAction = "Index",
        BackButtonRouteValues = new { productId = productId }
    };
}

@await Html.PartialAsync("_PageHeaderPartial", headerModel)

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="header mb-3">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h2 class="mb-1">Edit Product Version</h2>
                <p class="text-muted mb-0">Update version information for @productName.</p>
            </div>
            <div class="btn-group" role="group">
                <a href="@Url.Action("Details", "Product", new { id = productId })" class="btn btn-outline-primary">
                    <i class="fas fa-info-circle me-1"></i>Basic Details
                </a>
                <a href="@Url.Action("Tiers", "Product", new { id = productId })" class="btn btn-outline-primary">
                    <i class="fas fa-layer-group me-1"></i>Tiers
                </a>
                <a href="@Url.Action("Index", "ProductVersion", new { productId = productId })" class="btn btn-outline-primary">
                    <i class="fas fa-code-branch me-1"></i>Versions
                </a>
                <a href="@Url.Action("Index", "ProductFeature", new { productId = productId })" class="btn btn-outline-primary">
                    <i class="fas fa-star me-1"></i>Features
                </a>
            </div>
        </div>
    </div>

    <!-- Product Info Card -->
    <div class="row g-2 mb-3">
        <div class="col-12">
            <div class="sidebar-section">
                <div class="section-header">
                    <div class="d-flex align-items-center">
                        <div class="product-icon me-3" style="width: 40px; height: 40px;">
                            <i class="fas fa-cube text-primary"></i>
                        </div>
                        <div>
                            <h6 class="mb-0">@productName</h6>
                            <small class="text-muted">Editing version: @Model.Name (@Model.Version)</small>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div class="container-fluid">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "Product")">Products</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Details", "Product", new { id = productId })">@productName</a>
            </li>
            <li class="breadcrumb-item">
                <a href="@Url.Action("Index", "ProductVersion", new { productId = productId })">Versions</a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">Edit: @Model.Name</li>
        </ol>
    </nav>

    <!-- Alert Messages -->
    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="row">
        <div class="col-lg-8 col-md-10">
            <div class="version-form">
                <div class="d-flex justify-content-between align-items-center mb-4">
                    <div>
                        <h4 class="mb-1">Edit Product Version</h4>
                        <p class="text-muted mb-0">Modify version settings for @productName</p>
                    </div>
                    <div>
                        <i class="fas fa-tags text-primary" style="font-size: 2rem;"></i>
                    </div>
                </div>

                <!-- Version Info -->
                <div class="row mb-3">
                    <div class="col-md-6">
                        <div class="version-info-badge">
                            <strong>Version ID:</strong> @Model.VersionId
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="version-info-badge">
                            <strong>Current Status:</strong> 
                            <span class="badge @(Model.IsCurrent ? "bg-success" : "bg-secondary")">
                                @(Model.IsCurrent ? "Current" : "Not Current")
                            </span>
                        </div>
                    </div>
                </div>

                @if (!ViewData.ModelState.IsValid)
                {
                    <div class="alert alert-danger">
                        <h6>Please correct the following errors:</h6>
                        <ul class="mb-0">
                            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                            {
                                <li>@error.ErrorMessage</li>
                            }
                        </ul>
                    </div>
                }

                <form method="post" action="@Url.Action("Edit", new { productId = productId, versionId = versionId })">
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.VersionId)
                    @Html.HiddenFor(m => m.ProductId)

                    <!-- Basic Information -->
                    <div class="form-section">
                        <h4>Basic Information</h4>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-row">
                                    <label asp-for="Version" class="form-label">
                                        Version Number <span class="required-field">*</span>
                                    </label>
                                    <input asp-for="Version" class="form-control version-input" 
                                           placeholder="e.g., 1.0.0" />
                                    <span asp-validation-for="Version" class="text-danger"></span>
                                    <small class="form-text text-muted">Use semantic versioning (Major.Minor.Patch)</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-row">
                                    <label asp-for="Name" class="form-label">
                                        Version Name <span class="required-field">*</span>
                                    </label>
                                    <input asp-for="Name" class="form-control" placeholder="e.g., Initial Release" />
                                    <span asp-validation-for="Name" class="text-danger"></span>
                                    <small class="form-text text-muted">Friendly name for this version</small>
                                </div>
                            </div>
                        </div>

                        <div class="form-row">
                            <label asp-for="ReleaseNotes" class="form-label">Release Notes</label>
                            <textarea asp-for="ReleaseNotes" class="form-control" rows="4" 
                                      placeholder="Describe what's new in this version..."></textarea>
                            <span asp-validation-for="ReleaseNotes" class="text-danger"></span>
                        </div>
                    </div>

                    <!-- Release Information -->
                    <div class="form-section">
                        <h4>Release Information</h4>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-row">
                                    <label asp-for="ReleaseDate" class="form-label">Release Date</label>
                                    <input asp-for="ReleaseDate" type="date" class="form-control" />
                                    <span asp-validation-for="ReleaseDate" class="text-danger"></span>
                                    <small class="form-text text-muted">When this version was or will be released</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-row">
                                    <div class="form-check mt-4">
                                        <input asp-for="IsCurrent" class="form-check-input" type="checkbox" />
                                        <label asp-for="IsCurrent" class="form-check-label">
                                            Set as current version
                                        </label>
                                    </div>
                                    <small class="form-text text-muted">Mark this as the current active version</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Lifecycle Information -->
                    <div class="form-section">
                        <h4>Lifecycle Information</h4>
                        
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-row">
                                    <label asp-for="SupportEndDate" class="form-label">Support End Date</label>
                                    <input asp-for="SupportEndDate" type="date" class="form-control" />
                                    <span asp-validation-for="SupportEndDate" class="text-danger"></span>
                                    <small class="form-text text-muted">When support for this version ends</small>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-row">
                                    <label asp-for="EndOfLifeDate" class="form-label">End of Life Date</label>
                                    <input asp-for="EndOfLifeDate" type="date" class="form-control" />
                                    <span asp-validation-for="EndOfLifeDate" class="text-danger"></span>
                                    <small class="form-text text-muted">When this version reaches end of life</small>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Form Actions -->
                    <div class="d-flex justify-content-between">
                        <div>
                            <a href="@Url.Action("Index", new { productId = productId })" 
                               class="btn btn-secondary">
                                <i class="fas fa-arrow-left"></i> Cancel
                            </a>
                        </div>
                        <div class="btn-group">
                            @if (Model.CanDelete)
                            {
                                <button type="button" 
                                        class="btn btn-outline-danger" 
                                        onclick="deleteVersion()">
                                    <i class="fas fa-trash"></i> Delete Version
                                </button>
                            }
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-save"></i> Update Version
                            </button>
                        </div>
                    </div>
                </form>

                <!-- Hidden Delete Form -->
                @if (Model.CanDelete)
                {
                    <form id="deleteForm" method="post" 
                          action="@Url.Action("Delete", new { productId = productId, versionId = versionId })" 
                          style="display: none;">
                        @Html.AntiForgeryToken()
                    </form>
                }
            </div>
        </div>
        
        <!-- Information Panel -->
        <div class="col-lg-4">
            <div class="sidebar-section">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-info-circle"></i> Version Information
                    </h6>
                </div>
                <div class="card-body">
                    <h6>Version Details</h6>
                    <ul class="list-unstyled small mb-3">
                        <li><strong>Created:</strong> @(Model.VersionId != Guid.Empty ? "Existing Version" : "New Version")</li>
                        <li><strong>Status:</strong> 
                            <span class="badge @(Model.IsCurrent ? "bg-success" : "bg-secondary")">
                                @(Model.IsCurrent ? "Current" : "Not Current")
                            </span>
                        </li>
                        @if (Model.ReleaseDate.HasValue)
                        {
                            <li><strong>Release Date:</strong> @Model.ReleaseDate.Value.ToString("MMM dd, yyyy")</li>
                        }
                    </ul>
                    
                    <h6>Modification Guidelines</h6>
                    <ul class="small mb-3">
                        <li>Changing version numbers may affect existing licenses</li>
                        <li>Only one version can be marked as current</li>
                        <li>End of life dates affect feature availability</li>
                        <li>Release notes help users understand changes</li>
                    </ul>
                    
                    <h6>Impact Assessment</h6>
                    <ul class="small">
                        <li>Test changes in staging environment</li>
                        <li>Review existing licenses using this version</li>
                        <li>Consider backwards compatibility</li>
                        <li>Communicate changes to users</li>
                    </ul>
                </div>
            </div>
            
            <!-- Quick Actions -->
            <div class="sidebar-section">
                <div class="card-header">
                    <h6 class="mb-0">
                        <i class="fas fa-bolt"></i> Quick Actions
                    </h6>
                </div>
                <div class="card-body">
                    @if (!Model.IsCurrent)
                    {
                        <form method="post" 
                              action="@Url.Action("SetCurrent", new { productId = productId, versionId = versionId })" 
                              style="display: inline;">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-sm btn-success w-100 mb-2">
                                <i class="fas fa-star"></i> Set as Current Version
                            </button>
                        </form>
                    }
                    
                    <a href="@Url.Action("Create", new { productId = productId })" 
                       class="btn btn-sm btn-outline-primary w-100 mb-2">
                        <i class="fas fa-plus"></i> Add New Version
                    </a>
                    
                    <a href="@Url.Action("Index", "ProductFeature", new { productId = productId })" 
                       class="btn btn-sm btn-outline-secondary w-100">
                        <i class="fas fa-puzzle-piece"></i> Manage Features
                    </a>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    
    <script>
        function deleteVersion() {
            if (confirm('Are you sure you want to delete this version?\n\nThis action cannot be undone and may affect existing licenses.')) {
                document.getElementById('deleteForm').submit();
            }
        }
        
        $(document).ready(function() {
            // Warning when changing current version status
            $('#IsCurrent').on('change', function() {
                if ($(this).is(':checked')) {
                    if (!confirm('Setting this as the current version will unmark any other current version. Continue?')) {
                        $(this).prop('checked', false);
                    }
                }
            });
        });
    </script>
}
