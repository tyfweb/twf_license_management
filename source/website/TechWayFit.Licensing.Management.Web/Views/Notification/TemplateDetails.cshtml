@model TechWayFit.Licensing.Management.Web.ViewModels.Notification.NotificationTemplateDetailViewModel
@{
    ViewData["Title"] = $"Template: {Model.TemplateName}";
    ViewData["Description"] = $"Details and statistics for notification template {Model.TemplateName}";
}

@section Styles {
    <style>
        .template-header {
            background: linear-gradient(135deg, var(--background-secondary, #f8f9fa) 0%, var(--background-tertiary, #e9ecef) 100%);
            border-radius: 8px;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            border: 1px solid var(--border-color, #dee2e6);
        }
        .template-content {
            background: var(--background-primary, #fff);
            border: 1px solid var(--border-color, #dee2e6);
            border-radius: 8px;
            padding: 1.5rem;
        }
        .variable-tag {
            background: var(--info-light, #e7f3ff);
            color: var(--info-color, #0066cc);
            padding: 0.25rem 0.5rem;
            border-radius: 4px;
            font-family: monospace;
            font-size: 0.875rem;
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            margin-bottom: 1.5rem;
        }
        .stat-item {
            text-align: center;
            padding: 1rem;
            background: var(--background-secondary, #f8f9fa);
            border-radius: 8px;
            border: 1px solid var(--border-color, #dee2e6);
        }
        .stat-number {
            font-size: 2rem;
            font-weight: bold;
            color: var(--text-primary, #495057);
        }
        .stat-label {
            color: var(--text-muted, #6c757d);
            font-size: 0.875rem;
        }
        .usage-chart {
            height: 300px;
        }
        .template-preview {
            background: var(--background-secondary, #f8f9fa);
            border: 1px solid var(--border-color, #dee2e6);
            border-radius: 4px;
            padding: 1rem;
            font-family: monospace;
            white-space: pre-wrap;
            max-height: 300px;
            overflow-y: auto;
        }
        .recent-usage-table {
            max-height: 400px;
            overflow-y: auto;
        }
    </style>
}

<div class="container-fluid py-3">
    <!-- Header Section -->
    <div class="template-header">
        <div class="d-flex justify-content-between align-items-start">
            <div class="flex-grow-1">
                <nav aria-label="breadcrumb" class="mb-2">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="@Url.Action("Index")">Notifications</a></li>
                        <li class="breadcrumb-item"><a href="@Url.Action("Templates")">Templates</a></li>
                        <li class="breadcrumb-item active">@Model.TemplateName</li>
                    </ol>
                </nav>
                <h2 class="mb-2">@Model.TemplateName</h2>
                <div class="d-flex gap-2 mb-3">
                    <span class="badge bg-info">@Model.NotificationType</span>
                    <span class="badge bg-secondary">@Model.Preferences.Mode</span>
                    <span class="badge @(Model.IsActive ? "bg-success" : "bg-warning")">
                        @(Model.IsActive ? "Active" : "Inactive")
                    </span>
                </div>
                <div class="text-muted">
                    <i class="fas fa-user me-1"></i>Created by @Model.CreatedBy on @Model.CreatedDate.ToString("MMMM dd, yyyy")
                </div>
            </div>
            <div class="d-flex gap-2">
                <a href="@Url.Action("EditTemplate", new { id = Model.TemplateId })" class="btn btn-primary">
                    <i class="fas fa-edit me-2"></i>Edit Template
                </a>
                <a href="@Url.Action("Test", new { templateId = Model.TemplateId })" class="btn btn-outline-info">
                    <i class="fas fa-vial me-1"></i>Test
                </a>
                <div class="btn-group">
                    <button type="button" class="btn btn-outline-secondary dropdown-toggle" data-bs-toggle="dropdown">
                        <i class="fas fa-ellipsis-h me-1"></i>More
                    </button>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#" onclick="duplicateTemplate()">
                            <i class="fas fa-copy me-2"></i>Duplicate Template
                        </a></li>
                        <li><a class="dropdown-item" href="#" onclick="exportTemplate()">
                            <i class="fas fa-download me-2"></i>Export Template
                        </a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="@Url.Action("Send", new { templateId = Model.TemplateId })">
                            <i class="fas fa-paper-plane me-2"></i>Send with Template
                        </a></li>
                        @if (!Model.IsActive)
                        {
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTemplate()">
                                <i class="fas fa-trash me-2"></i>Delete Template
                            </a></li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <!-- Template Statistics -->
            <div class="edit-section mb-4">
                <div class="section-header">
                    <h5><i class="fas fa-chart-bar me-2"></i>Usage Statistics</h5>
                </div>
                <div class="section-content">
                    <div class="stats-grid">
                        <div class="stat-item">
                            <div class="stat-number">@Model.Statistics.TotalUsage</div>
                            <div class="stat-label">Total Uses</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number text-success">@Model.Statistics.SuccessfulDeliveries</div>
                            <div class="stat-label">Successful</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number text-danger">@Model.Statistics.FailedDeliveries</div>
                            <div class="stat-label">Failed</div>
                        </div>
                        <div class="stat-item">
                            <div class="stat-number text-info">@Model.Statistics.SuccessRate.ToString("F1")%</div>
                            <div class="stat-label">Success Rate</div>
                        </div>
                        @if (Model.Statistics.LastUsed.HasValue)
                        {
                            <div class="stat-item">
                                <div class="stat-number small">@Model.Statistics.LastUsed.Value.ToString("MMM dd")</div>
                                <div class="stat-label">Last Used</div>
                            </div>
                        }                        <div class="stat-item">
                            <div class="stat-number small">@(Model.Statistics.AverageDeliveryTime?.TotalSeconds.ToString("F1") ?? "0")s</div>
                            <div class="stat-label">Avg. Delivery</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Template Content -->
            <div class="edit-section mb-4">
                <div class="section-header">
                    <h5><i class="fas fa-file-alt me-2"></i>Template Content</h5>
                </div>
                <div class="section-content">
                    <div class="mb-3">
                        <label class="form-label fw-bold">Subject</label>
                        <div class="template-content">
                            @Model.Subject
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label fw-bold">Message Template</label>
                        <div class="template-preview">@Model.MessageTemplate</div>
                    </div>
                    @if (Model.TemplateVariables.Any())
                    {
                        <div class="mb-3">
                            <label class="form-label fw-bold">Template Variables</label>
                            <div class="d-flex flex-wrap gap-2">
                                @foreach (var variable in Model.TemplateVariables)
                                {
                                    <span class="variable-tag">@variable.Key</span>
                                }
                            </div>
                        </div>
                    }
                </div>
            </div>

            <!-- Recent Usage -->
            <div class="edit-section">
                <div class="section-header">
                    <div class="d-flex justify-content-between align-items-center">
                        <h5><i class="fas fa-history me-2"></i>Recent Usage</h5>
                        <a href="@Url.Action("History", new { notificationTemplateId = Model.TemplateId })" class="btn btn-outline-primary btn-sm">
                            <i class="fas fa-external-link-alt me-1"></i>View All
                        </a>
                    </div>
                </div>
                <div class="section-content">
                    @if (Model.RecentUsage.Any())
                    {
                        <div class="recent-usage-table">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Date</th>
                                        <th>Entity</th>
                                        <th>Recipient</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var usage in Model.RecentUsage.Take(10))
                                    {
                                        <tr>
                                            <td>
                                                <span class="text-nowrap">@usage.SentDate.ToString("MMM dd, yyyy")</span>
                                                <small class="text-muted d-block">@usage.SentDate.ToString("HH:mm")</small>
                                            </td>
                                            <td>
                                                <div class="fw-medium">@usage.EntityType</div>
                                                <small class="text-muted">@usage.EntityId.ToString().Substring(0, Math.Min(12, usage.EntityId.ToString().Length))...</small>
                                            </td>
                                            <td>
                                                <div class="text-truncate" style="max-width: 150px;" title="@usage.RecipientDisplay">
                                                    @usage.RecipientDisplay
                                                </div>
                                            </td>
                                            <td>
                                                <span class="badge @usage.StatusCssClass">@usage.DeliveryStatus</span>
                                                @if (!string.IsNullOrEmpty(usage.DeliveryError))
                                                {
                                                    <i class="fas fa-exclamation-triangle text-warning ms-1" 
                                                       title="@usage.DeliveryError" data-bs-toggle="tooltip"></i>
                                                }
                                            </td>
                                            <td>
                                                <button type="button" class="btn btn-outline-primary btn-sm" 
                                                        onclick="viewNotificationDetails('@usage.NotificationId')" 
                                                        title="View Details">
                                                    <i class="fas fa-eye"></i>
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-inbox fa-2x text-muted mb-2"></i>
                            <p class="text-muted">This template hasn't been used yet.</p>
                            <a href="@Url.Action("Test", new { templateId = Model.TemplateId })" class="btn btn-outline-primary">
                                <i class="fas fa-vial me-2"></i>Test Template
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Template Configuration -->
            <div class="sidebar-section mb-4">
                <div class="section-header">
                    <h6><i class="fas fa-cog me-2"></i>Configuration</h6>
                </div>
                <div class="section-content">
                    <div class="row g-2">
                        <div class="col-6">
                            <div class="text-center p-2 bg-light rounded">
                                <i class="fas fa-@(Model.Preferences.Mode == TechWayFit.Licensing.Management.Core.Models.Notification.NotificationMode.Email ? "envelope" : Model.Preferences.Mode == TechWayFit.Licensing.Management.Core.Models.Notification.NotificationMode.Sms ? "sms" : "bell") mb-1"></i>
                                <div class="small fw-medium">@Model.Preferences.Mode</div>
                            </div>
                        </div>
                        <div class="col-6">
                            <div class="text-center p-2 bg-light rounded">
                                <i class="fas fa-tag mb-1"></i>
                                <div class="small fw-medium">@Model.NotificationType</div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mt-3">
                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                            <span class="small text-muted">Template ID</span>
                            <code class="small">@Model.TemplateId.Substring(0, 8)...</code>
                        </div>
                        <div class="d-flex justify-content-between align-items-center py-2 border-bottom">
                            <span class="small text-muted">Status</span>
                            <span class="badge @(Model.IsActive ? "bg-success" : "bg-warning") small">
                                @(Model.IsActive ? "Active" : "Inactive")
                            </span>
                        </div>
                        <div class="d-flex justify-content-between align-items-center py-2">
                            <span class="small text-muted">Variables</span>
                            <span class="small fw-medium">@Model.TemplateVariables.Count</span>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Quick Actions -->
            <div class="sidebar-section mb-4">
                <div class="section-header">
                    <h6><i class="fas fa-bolt me-2"></i>Quick Actions</h6>
                </div>
                <div class="section-content">
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Send", new { templateId = Model.TemplateId })" class="btn btn-outline-primary">
                            <i class="fas fa-paper-plane me-2"></i>Send Notification
                        </a>
                        <a href="@Url.Action("Test", new { templateId = Model.TemplateId })" class="btn btn-outline-info">
                            <i class="fas fa-vial me-2"></i>Test Template
                        </a>
                        <button type="button" class="btn btn-outline-secondary" onclick="previewTemplate()">
                            <i class="fas fa-eye me-2"></i>Preview
                        </button>
                        <button type="button" class="btn btn-outline-success" onclick="duplicateTemplate()">
                            <i class="fas fa-copy me-2"></i>Duplicate
                        </button>
                    </div>
                </div>
            </div>

            <!-- Performance Insights -->
            @if (Model.Statistics.TotalUsage > 0)
            {
                <div class="sidebar-section">
                    <div class="section-header">
                        <h6><i class="fas fa-chart-line me-2"></i>Performance</h6>
                    </div>
                    <div class="section-content">
                        <div class="progress mb-2">
                            <div class="progress-bar bg-success" style="width: @Model.Statistics.SuccessRate%"></div>
                            <div class="progress-bar bg-danger" style="width: @(100 - Model.Statistics.SuccessRate)%"></div>
                        </div>
                        <div class="d-flex justify-content-between small text-muted mb-3">
                            <span>@Model.Statistics.SuccessRate.ToString("F1")% Success Rate</span>
                            <span>@Model.Statistics.FailedDeliveries failures</span>
                        </div>
                        
                        @if (Model.Statistics.SuccessRate >= 95)
                        {
                            <div class="alert alert-success small py-2">
                                <i class="fas fa-check-circle me-1"></i>
                                Excellent performance! This template has a very high success rate.
                            </div>
                        }
                        else if (Model.Statistics.SuccessRate >= 85)
                        {
                            <div class="alert alert-info small py-2">
                                <i class="fas fa-info-circle me-1"></i>
                                Good performance. Consider reviewing failed deliveries for optimization.
                            </div>
                        }
                        else
                        {
                            <div class="alert alert-warning small py-2">
                                <i class="fas fa-exclamation-triangle me-1"></i>
                                Performance could be improved. Review template content and configuration.
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Notification Details Modal -->
<div class="modal fade" id="notificationDetailsModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Notification Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="notificationDetailsContent">
                <!-- Content loaded via AJAX -->
            </div>
        </div>
    </div>
</div>

<!-- Template Preview Modal -->
<div class="modal fade" id="templatePreviewModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Template Preview</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <h6>Subject:</h6>
                <p class="border p-2 bg-light">@Model.Subject</p>
                
                <h6>Message:</h6>
                <div class="border p-3 bg-light template-preview">@Model.MessageTemplate</div>
                
                @if (Model.TemplateVariables.Any())
                {
                    <h6 class="mt-3">Available Variables:</h6>
                    <div class="d-flex flex-wrap gap-2">
                        @foreach (var variable in Model.TemplateVariables)
                        {
                            <span class="variable-tag">{{@variable.Key}}</span>
                        }
                    </div>
                }
            </div>
            <div class="modal-footer">
                <a href="@Url.Action("EditTemplate", new { id = Model.TemplateId })" class="btn btn-primary">
                    <i class="fas fa-edit me-2"></i>Edit Template
                </a>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // View notification details
        function viewNotificationDetails(notificationId) {
            $.get('@Url.Action("GetNotificationDetails")/' + notificationId, function(data) {
                $('#notificationDetailsContent').html(data);
                $('#notificationDetailsModal').modal('show');
            }).fail(function() {
                alert('Error loading notification details');
            });
        }

        // Preview template
        function previewTemplate() {
            new bootstrap.Modal(document.getElementById('templatePreviewModal')).show();
        }

        // Duplicate template
        function duplicateTemplate() {
            if (confirm('Create a copy of this template?')) {
                // TODO: Implement template duplication
                alert('Template duplication will be implemented in a future update.');
            }
        }

        // Export template
        function exportTemplate() {
            // TODO: Implement template export
            alert('Template export will be implemented in a future update.');
        }

        // Delete template
        function deleteTemplate() {
            if (confirm('Are you sure you want to delete this template? This action cannot be undone.')) {
                // TODO: Implement template deletion
                alert('Template deletion will be implemented in a future update.');
            }
        }

        // Initialize tooltips
        document.addEventListener('DOMContentLoaded', function() {
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });
        });
    </script>
}
