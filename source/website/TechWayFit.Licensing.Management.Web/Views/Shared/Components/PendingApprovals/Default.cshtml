@model TechWayFit.Licensing.Management.Web.ViewModels.Approval.PendingApprovalsDashboardViewModel

<div class="card h-100 shadow-sm">
    <div class="card-header d-flex justify-content-between align-items-center bg-primary text-white">
        <h5 class="card-title mb-0">
            <i class="fas fa-clock me-2"></i>
            Pending Approvals
        </h5>
        @if (Model.TotalPendingCount > 0)
        {
            <span class="badge bg-warning text-dark">@Model.TotalPendingCount</span>
        }
    </div>
    
    <div class="card-body p-0">
        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-warning m-3 mb-0">
                <i class="fas fa-exclamation-triangle me-2"></i>
                @Model.ErrorMessage
            </div>
        }
        else if (!Model.PendingItems.Any())
        {
            <div class="d-flex flex-column align-items-center justify-content-center py-4 text-muted">
                <i class="fas fa-check-circle fa-3x mb-3 text-success"></i>
                <p class="mb-0">No pending approvals</p>
                <small>All items have been processed</small>
            </div>
        }
        else
        {
            <div class="list-group list-group-flush">
                @foreach (var item in Model.PendingItems)
                {
                    <div class="list-group-item">
                        <div class="d-flex justify-content-between align-items-start">
                            <div class="flex-grow-1">
                                <div class="d-flex align-items-center mb-1">
                                    @switch (item.EntityType.ToLower())
                                    {
                                        case "consumer":
                                            <i class="fas fa-building text-info me-2"></i>
                                            break;
                                        case "product":
                                            <i class="fas fa-box text-success me-2"></i>
                                            break;
                                        case "license":
                                            <i class="fas fa-key text-warning me-2"></i>
                                            break;
                                        default:
                                            <i class="fas fa-file text-secondary me-2"></i>
                                            break;
                                    }
                                    <strong class="me-2">@item.EntityDisplayName</strong>
                                    <span class="badge bg-secondary">@item.EntityType</span>
                                </div>
                                
                                <p class="mb-1 text-muted small">@item.EntityDescription</p>
                                
                                <div class="d-flex flex-wrap gap-2 small text-muted">
                                    <span>
                                        <i class="fas fa-user me-1"></i>
                                        Submitted by: @item.SubmittedBy
                                    </span>
                                    <span>
                                        <i class="fas fa-calendar me-1"></i>
                                        @item.SubmittedOn.ToString("MMM dd, yyyy")
                                    </span>
                                    @if (item.DaysInQueue > 0)
                                    {
                                        <span class="@(item.DaysInQueue > 7 ? "text-danger" : item.DaysInQueue > 3 ? "text-warning" : "")">
                                            <i class="fas fa-hourglass-half me-1"></i>
                                            @item.DaysInQueue day@(item.DaysInQueue != 1 ? "s" : "") in queue
                                        </span>
                                    }
                                </div>
                            </div>
                            
                            <div class="d-flex flex-column gap-1">
                                @if (Model.ShowActions)
                                {
                                    <div class="btn-group-vertical btn-group-sm" role="group">
                                        @if (item.CanApprove && !string.IsNullOrEmpty(item.ApprovalUrl))
                                        {
                                            <a href="@item.ApprovalUrl" class="btn btn-success btn-sm" title="Approve">
                                                <i class="fas fa-check"></i>
                                            </a>
                                        }
                                        @if (item.CanReject && !string.IsNullOrEmpty(item.RejectUrl))
                                        {
                                            <a href="@item.RejectUrl" class="btn btn-danger btn-sm" title="Reject">
                                                <i class="fas fa-times"></i>
                                            </a>
                                        }
                                        @if (!string.IsNullOrEmpty(item.DetailsUrl))
                                        {
                                            <a href="@item.DetailsUrl" class="btn btn-outline-primary btn-sm" title="View Details">
                                                <i class="fas fa-eye"></i>
                                            </a>
                                        }
                                    </div>
                                }
                                else
                                {
                                    @if (!string.IsNullOrEmpty(item.DetailsUrl))
                                    {
                                        <a href="@item.DetailsUrl" class="btn btn-outline-primary btn-sm" title="View Details">
                                            <i class="fas fa-eye me-1"></i> View
                                        </a>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
    
    @if (Model.HasMoreItems || Model.TotalPendingCount > 0)
    {
        <div class="card-footer bg-light">
            <div class="d-flex justify-content-between align-items-center">
                @if (Model.HasMoreItems)
                {
                    <small class="text-muted">
                        Showing @Model.PendingItems.Count of @Model.TotalPendingCount items
                    </small>
                }
                else
                {
                    <small class="text-muted">
                        @Model.TotalPendingCount total pending
                    </small>
                }
                
                @if (!string.IsNullOrEmpty(Model.ViewAllUrl))
                {
                    <a href="@Model.ViewAllUrl" class="btn btn-outline-primary btn-sm">
                        <i class="fas fa-list me-1"></i>
                        View All
                    </a>
                }
            </div>
        </div>
    }
</div>

@* Add some custom styles for the dashboard widget *@
<style>
    .pending-approvals-widget .list-group-item {
        border-left: none;
        border-right: none;
    }
    
    .pending-approvals-widget .list-group-item:first-child {
        border-top: none;
    }
    
    .pending-approvals-widget .list-group-item:last-child {
        border-bottom: none;
    }
    
    .pending-approvals-widget .btn-group-vertical .btn {
        border-radius: 0.25rem;
        margin-bottom: 2px;
    }
    
    .pending-approvals-widget .btn-group-vertical .btn:last-child {
        margin-bottom: 0;
    }
</style>
