@model TechWayFit.Licensing.Management.Web.ViewModels.Product.ProductEnhancedEditViewModel
@{
    ViewData["Title"] = "Enhanced Product Management";
    ViewData["Description"] = $"Comprehensive management interface for {Model.ProductName}";
}

@section Styles {
    <link rel="stylesheet" href="~/css/product-management.css" />
}

<div class="container-fluid px-4">
    <!-- Header Section -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div>
            <h1 class="h3 mb-0 text-gray-800">Enhanced Product Management</h1>
            <p class="text-muted mb-0">Comprehensive management interface for @Model.ProductName</p>
        </div>
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="@Url.Action("Index")">Products</a></li>
                <li class="breadcrumb-item"><a href="@Url.Action("Details", new { id = Model.ProductId })">@Model.ProductName</a></li>
                <li class="breadcrumb-item active" aria-current="page">Enhanced Management</li>
            </ol>
        </nav>
    </div>

    <div class="row">
        <!-- Main Content Area -->
        <div class="col-lg-8">
            <!-- Product Overview Section -->
            <div class="edit-section mb-4">
                <div class="section-header">
                    <h5><i class="fas fa-cube me-2"></i>Product Overview</h5>
                </div>
                <div class="section-content">
                    <div class="row">
                        <div class="col-md-8">
                            <h6 class="mb-1">@Model.ProductName</h6>
                            <p class="text-muted mb-0">@Model.Description</p>
                        </div>
                        <div class="col-md-4 text-end">
                            <span class="badge bg-primary me-2">ID: @Model.ProductId</span>
                            <span class="badge bg-secondary">v@Model.Version</span>
                        </div>
                    </div>
                </div>
            </div>
                    <!-- Tab Navigation -->

            <!-- Tab Navigation Section -->
            <div class="edit-section mb-4">
                <div class="section-content">
                    <!-- Tab Navigation -->
                    <ul class="nav nav-tabs" id="productTabs" role="tablist">
                        <li class="nav-item" role="presentation">
                            <a class="nav-link @(Model.ActiveSection == "basic" ? "active" : "")" href="@Url.Action("EditEnhanced", new { id = Model.ProductId })" role="tab">
                                <i class="fas fa-info-circle"></i> Basic Information
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link @(Model.ActiveSection == "tiers" ? "active" : "")" href="@Url.Action("EditEnhancedTiers", new { id = Model.ProductId })" role="tab">
                                <i class="fas fa-layer-group"></i> Product Tiers
                                <span class="badge bg-info ms-1" id="tiers-count">0</span>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link @(Model.ActiveSection == "versions" ? "active" : "")" href="@Url.Action("EditEnhancedVersions", new { id = Model.ProductId })" role="tab">
                                <i class="fas fa-code-branch"></i> Product Versions
                                <span class="badge bg-info ms-1" id="versions-count">0</span>
                            </a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link @(Model.ActiveSection == "features" ? "active" : "")" href="@Url.Action("EditEnhancedFeatures", new { id = Model.ProductId })" role="tab">
                                <i class="fas fa-star"></i> Features
                                <span class="badge bg-info ms-1" id="features-count">0</span>
                            </a>
                        </li>
                    </ul>

                    <!-- Tab Content -->
                    <div class="tab-content mt-3" id="productTabContent">
                        <!-- Basic Information Tab -->
                        @if (Model.ActiveSection == "basic")
                        {
                            <div class="tab-pane fade show active" id="basic" role="tabpanel">
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="detail-group">
                                            <label class="detail-label">Product Name</label>
                                            <div class="detail-value">@Model.ProductName</div>
                                        </div>
                                        <div class="detail-group">
                                            <label class="detail-label">Product Type</label>
                                            <div class="detail-value">@Model.ProductType</div>
                                        </div>
                                        <div class="detail-group">
                                            <label class="detail-label">Version</label>
                                            <div class="detail-value">@Model.Version</div>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="detail-group">
                                            <label class="detail-label">Description</label>
                                            <div class="detail-value">@Model.Description</div>
                                        </div>
                                        <div class="detail-group">
                                            <label class="detail-label">Status</label>
                                            <div class="detail-value">
                                                @if (Model.IsActive)
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-secondary">Inactive</span>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="mt-3">
                                    <a href="@Url.Action("Edit", new { id = Model.ProductId })" class="btn btn-outline-primary">
                                        <i class="fas fa-edit me-2"></i>Edit Basic Information
                                    </a>
                                </div>
                            </div>
                        }

                        <!-- Product Tiers Tab -->
                        @if (Model.ActiveSection == "tiers")
                        {
                            <div class="tab-pane fade show active" id="tiers" role="tabpanel">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h6 class="mb-0">Product Tiers Management</h6>
                                    <button type="button" class="btn btn-primary btn-sm" onclick="showAddTierModal()">
                                        <i class="fas fa-plus me-1"></i>Add Tier
                                    </button>
                                </div>
                                <div id="tiers-content">
                                    <div class="text-center py-4">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <p class="mt-2 text-muted">Loading product tiers...</p>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Product Versions Tab -->
                        @if (Model.ActiveSection == "versions")
                        {
                            <div class="tab-pane fade show active" id="versions" role="tabpanel">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h6 class="mb-0">Product Versions Management</h6>
                                    <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addVersionModal">
                                        <i class="fas fa-plus me-1"></i>Add Version
                                    </button>
                                </div>
                                <div id="versions-content">
                                    <div class="text-center py-4">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <p class="mt-2 text-muted">Loading product versions...</p>
                                    </div>
                                </div>
                            </div>
                        }

                        <!-- Features Tab -->
                        @if (Model.ActiveSection == "features")
                        {
                            <div class="tab-pane fade show active" id="features" role="tabpanel">
                                <div class="d-flex justify-content-between align-items-center mb-3">
                                    <h6 class="mb-0">Features Management</h6>  
                                    <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal" data-bs-target="#addFeatureModal">
                                        <i class="fas fa-plus me-1"></i>Add Feature
                                    </button>
                                </div>
                                <div id="features-content">
                                    <div class="text-center py-4">
                                        <div class="spinner-border text-primary" role="status">
                                            <span class="visually-hidden">Loading...</span>
                                        </div>
                                        <p class="mt-2 text-muted">Loading features...</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Quick Actions -->
            <div class="sidebar-section mb-4">
                <div class="section-header">
                    <h5><i class="fas fa-lightning-bolt me-2"></i>Quick Actions</h5>
                </div>
                <div class="section-content">
                    <div class="d-grid gap-2">
                        <a href="@Url.Action("Edit", new { id = Model.ProductId })" class="btn btn-outline-primary">
                            <i class="fas fa-edit me-2"></i>Edit Basic Info
                        </a>
                        <a href="@Url.Action("Details", new { id = Model.ProductId })" class="btn btn-outline-secondary">
                            <i class="fas fa-eye me-2"></i>View Details
                        </a>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="fas fa-arrow-left me-2"></i>Back to Products
                        </a>
                    </div>
                </div>
            </div>

            <!-- Product Information -->
            <div class="sidebar-section mb-4">
                <div class="section-header">
                    <h5><i class="fas fa-info-circle me-2"></i>Product Information</h5>
                </div>
                <div class="section-content">
                    <div class="detail-group">
                        <label class="detail-label">Product ID</label>
                        <div class="detail-value">
                            <i class="fas fa-hashtag"></i>
                            <span class="text-monospace">@Model.ProductId</span>
                        </div>
                    </div>
                    <div class="detail-group">
                        <label class="detail-label">Current Version</label>
                        <div class="detail-value">
                            <i class="fas fa-code-branch"></i>
                            @Model.Version
                        </div>
                    </div>
                    <div class="detail-group">
                        <label class="detail-label">Product Type</label>
                        <div class="detail-value">
                            <i class="fas fa-tag"></i>
                            @Model.ProductType
                        </div>
                    </div>
                    <div class="detail-group">
                        <label class="detail-label">Status</label>
                        <div class="detail-value">
                            <i class="fas fa-circle-check"></i>
                            @if (Model.IsActive)
                            {
                                <span class="badge bg-success ms-2">Active</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary ms-2">Inactive</span>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Management Statistics -->
            <div class="sidebar-section mb-4">
                <div class="section-header">
                    <h5><i class="fas fa-chart-bar me-2"></i>Management Statistics</h5>
                </div>
                <div class="section-content">
                    <div class="stat-item">
                        <div class="stat-value" id="sidebar-tiers-count">-</div>
                        <div class="stat-label">Product Tiers</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-value" id="sidebar-versions-count">-</div>
                        <div class="stat-label">Product Versions</div>
                    </div>
                    <div class="stat-item">
                        <div class="stat-value" id="sidebar-features-count">-</div>
                        <div class="stat-label">Features</div>
                    </div>
                </div>
            </div>

            <!-- Management Guidelines -->
            <div class="sidebar-section">
                <div class="section-header">
                    <h5><i class="fas fa-question-circle me-2"></i>Management Guidelines</h5>
                </div>
                <div class="section-content">
                    <div class="small">
                        <div class="mb-2">
                            <strong>Product Tiers:</strong> Define pricing and feature sets for different customer segments.
                        </div>
                        <div class="mb-2">
                            <strong>Versions:</strong> Once approved, versions should not be deleted to maintain license integrity.
                        </div>
                        <div class="mb-2">
                            <strong>Features:</strong> Organize features by category for better management.
                        </div>
                        <div class="mb-2">
                            <strong>Soft Deletes:</strong> All deletions are soft deletes to preserve data history.
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add/Edit Tier Modal -->
<div class="modal fade" id="tierModal" tabindex="-1" aria-labelledby="tierModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="tierModalLabel">Add Product Tier</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="tierForm">
                <div class="modal-body">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="ProductId" value="@Model.ProductId" />
                    <input type="hidden" name="TierId" id="tierId" />
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="tierName" class="form-label">Tier Name <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="tierName" name="TierName" required maxlength="50">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="monthlyPrice" class="form-label">Monthly Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="monthlyPrice" name="MonthlyPrice" step="0.01" min="0">
                                </div>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="annualPrice" class="form-label">Annual Price</label>
                                <div class="input-group">
                                    <span class="input-group-text">$</span>
                                    <input type="number" class="form-control" id="annualPrice" name="AnnualPrice" step="0.01" min="0">
                                </div>
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="trialPeriodDays" class="form-label">Trial Period (Days)</label>
                                <input type="number" class="form-control" id="trialPeriodDays" name="TrialPeriodDays" min="0" max="365" value="0">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="mb-3">
                        <label for="tierDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="tierDescription" name="Description" rows="3" maxlength="200"></textarea>
                        <div class="invalid-feedback"></div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="maxUsers" class="form-label">Max Users</label>
                                <input type="number" class="form-control" id="maxUsers" name="MaxUsers" min="1">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="maxProjects" class="form-label">Max Projects</label>
                                <input type="number" class="form-control" id="maxProjects" name="MaxProjects" min="1">
                                <div class="invalid-feedback"></div>
                            </div>
                        </div>
                    </div>
                    
                    <div class="row">
                        <div class="col-md-6">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isFree" name="IsFree">
                                <label class="form-check-label" for="isFree">
                                    Free Tier
                                </label>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="form-check mb-3">
                                <input class="form-check-input" type="checkbox" id="isActive" name="IsActive" checked>
                                <label class="form-check-label" for="isActive">
                                    Active
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary" id="tierSubmitBtn">Add Tier</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Version Modal -->
<div class="modal fade" id="addVersionModal" tabindex="-1" aria-labelledby="addVersionModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addVersionModalLabel">Add Product Version</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addVersionForm">
                <div class="modal-body">
                    <input type="hidden" name="ProductId" value="@Model.ProductId" />
                    <div class="mb-3">
                        <label for="versionNumber" class="form-label">Version Number</label>
                        <input type="text" class="form-control" id="versionNumber" name="VersionNumber" required>
                    </div>
                    <div class="mb-3">
                        <label for="versionDescription" class="form-label">Release Notes</label>
                        <textarea class="form-control" id="versionDescription" name="ReleaseNotes" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="releaseDate" class="form-label">Release Date</label>
                        <input type="date" class="form-control" id="releaseDate" name="ReleaseDate">
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="isStable" name="IsStable">
                        <label class="form-check-label" for="isStable">
                            Stable Release
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Version</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Feature Modal -->
<div class="modal fade" id="addFeatureModal" tabindex="-1" aria-labelledby="addFeatureModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addFeatureModalLabel">Add Feature</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="addFeatureForm">
                <div class="modal-body">
                    <input type="hidden" name="ProductId" value="@Model.ProductId" />
                    <div class="mb-3">
                        <label for="featureName" class="form-label">Feature Name</label>
                        <input type="text" class="form-control" id="featureName" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="featureDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="featureDescription" name="Description" rows="3"></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="featureCategory" class="form-label">Category</label>
                        <select class="form-select" id="featureCategory" name="CategoryId">
                            <option value="">Select Category</option>
                            @if (ViewBag.FeatureCategories != null)
                            {
                                @foreach (var category in (dynamic)ViewBag.FeatureCategories)
                                {
                                    <option value="@category.Value">@category.Text</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="isCore" name="IsCore">
                        <label class="form-check-label" for="isCore">
                            Core Feature
                        </label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-primary">Add Feature</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Load content based on active section
            var activeSection = '@Model.ActiveSection';
            
            if (activeSection === 'tiers') {
                loadProductTiers();
            } else if (activeSection === 'versions') {
                loadProductVersions();
            } else if (activeSection === 'features') {
                loadProductFeatures();
            }
            
            // Form submissions
            $('#addTierForm').on('submit', function(e) {
                e.preventDefault();
                addProductTier();
            });
            
            $('#addVersionForm').on('submit', function(e) {
                e.preventDefault();
                addProductVersion();
            });
            
            $('#addFeatureForm').on('submit', function(e) {
                e.preventDefault();
                addProductFeature();
            });
        });

        function loadProductTiers() {
            $('#tiers-content').html('<div class="text-center py-4"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-2 text-muted">Loading product tiers...</p></div>');
            
            $.get('@Url.Action("GetProductTiers")', { productId: @Model.ProductId })
                .done(function(response) {
                    if (response.success && response.data) {
                        var html = renderProductTiers(response.data);
                        $('#tiers-content').html(html);
                        var count = response.data.length;
                        $('#tiers-count').text(count);
                        $('#sidebar-tiers-count').text(count);
                    } else {
                        $('#tiers-content').html('<div class="alert alert-warning">No product tiers found.</div>');
                        $('#tiers-count').text(0);
                        $('#sidebar-tiers-count').text(0);
                    }
                })
                .fail(function(xhr, status, error) {
                    console.error('Failed to load product tiers:', error);
                    $('#tiers-content').html('<div class="alert alert-danger">Failed to load product tiers. Please try again.</div>');
                    $('#tiers-count').text(0);
                    $('#sidebar-tiers-count').text(0);
                });
        }

        function loadProductVersions() {
            $('#versions-content').html('<div class="text-center py-4"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-2 text-muted">Loading product versions...</p></div>');
            
            $.get('@Url.Action("GetProductVersions")', { productId: @Model.ProductId })
                .done(function(response) {
                    if (response.success && response.data) {
                        var html = renderProductVersions(response.data);
                        $('#versions-content').html(html);
                        var count = response.data.length;
                        $('#versions-count').text(count);
                        $('#sidebar-versions-count').text(count);
                    } else {
                        $('#versions-content').html('<div class="alert alert-warning">No product versions found.</div>');
                        $('#versions-count').text(0);
                        $('#sidebar-versions-count').text(0);
                    }
                })
                .fail(function(xhr, status, error) {
                    console.error('Failed to load product versions:', error);
                    $('#versions-content').html('<div class="alert alert-danger">Failed to load product versions. Please try again.</div>');
                    $('#versions-count').text(0);
                    $('#sidebar-versions-count').text(0);
                });
        }

        function loadProductFeatures() {
            $('#features-content').html('<div class="text-center py-4"><div class="spinner-border text-primary" role="status"><span class="visually-hidden">Loading...</span></div><p class="mt-2 text-muted">Loading features...</p></div>');
            
            $.get('@Url.Action("GetProductFeatures")', { productId: @Model.ProductId })
                .done(function(response) {
                    if (response.success && response.data) {
                        var html = renderProductFeatures(response.data);
                        $('#features-content').html(html);
                        var count = response.data.length;
                        $('#features-count').text(count);
                        $('#sidebar-features-count').text(count);
                    } else {
                        $('#features-content').html('<div class="alert alert-warning">No features found.</div>');
                        $('#features-count').text(0);
                        $('#sidebar-features-count').text(0);
                    }
                })
                .fail(function(xhr, status, error) {
                    console.error('Failed to load features:', error);
                    $('#features-content').html('<div class="alert alert-danger">Failed to load features. Please try again.</div>');
                    $('#features-count').text(0);
                    $('#sidebar-features-count').text(0);
                });
        }

        function addProductTier() {
            var formData = $('#addTierForm').serialize();
            
            $.post('@Url.Action("AddProductTier")', formData)
                .done(function(response) {
                    if (response.success) {
                        $('#addTierModal').modal('hide');
                        $('#addTierForm')[0].reset();
                        showNotification('Product tier added successfully!', 'success');
                        // Reload the page to show the updated tier list
                        window.location.href = '@Url.Action("EditEnhancedTiers", new { id = Model.ProductId })';
                    } else {
                        showNotification(response.message || 'Failed to add product tier.', 'error');
                    }
                })
                .fail(function() {
                    showNotification('Failed to add product tier.', 'error');
                });
        }

        function addProductVersion() {
            var formData = $('#addVersionForm').serialize();
            
            $.post('@Url.Action("AddProductVersion")', formData)
                .done(function(response) {
                    if (response.success) {
                        $('#addVersionModal').modal('hide');
                        $('#addVersionForm')[0].reset();
                        showNotification('Product version added successfully!', 'success');
                        // Reload the page to show the updated version list
                        window.location.href = '@Url.Action("EditEnhancedVersions", new { id = Model.ProductId })';
                    } else {
                        showNotification(response.message || 'Failed to add product version.', 'error');
                    }
                })
                .fail(function() {
                    showNotification('Failed to add product version.', 'error');
                });
        }

        function addProductFeature() {
            var formData = $('#addFeatureForm').serialize();
            
            $.post('@Url.Action("AddProductFeature")', formData)
                .done(function(response) {
                    if (response.success) {
                        $('#addFeatureModal').modal('hide');
                        $('#addFeatureForm')[0].reset();
                        showNotification('Feature added successfully!', 'success');
                        // Reload the page to show the updated feature list
                        window.location.href = '@Url.Action("EditEnhancedFeatures", new { id = Model.ProductId })';
                    } else {
                        showNotification(response.message || 'Failed to add feature.', 'error');
                    }
                })
                .fail(function() {
                    showNotification('Failed to add feature.', 'error');
                });
        }

        function showNotification(message, type) {
            var alertClass = type === 'success' ? 'alert-success' : 'alert-danger';
            var icon = type === 'success' ? 'fa-check-circle' : 'fa-exclamation-triangle';
            
            var notification = $('<div class="alert ' + alertClass + ' alert-dismissible fade show position-fixed" style="top: 20px; right: 20px; z-index: 9999;">' +
                '<i class="fas ' + icon + ' me-2"></i>' + message +
                '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
                '</div>');
            
            $('body').append(notification);
            
            setTimeout(function() {
                notification.alert('close');
            }, 5000);
        }

        // Global functions for action buttons in loaded content
        window.editTier = function(tierId) {
            // Implementation for editing tier
            console.log('Edit tier:', tierId);
        };

        window.deleteTier = function(tierId) {
            if (confirm('Are you sure you want to delete this tier? This is a soft delete.')) {
                $.post('@Url.Action("DeleteProductTier")', { tierId: tierId })
                    .done(function(response) {
                        if (response.success) {
                            showNotification('Product tier deleted successfully!', 'success');
                            // Reload the page to show the updated tier list
                            window.location.href = '@Url.Action("EditEnhancedTiers", new { id = Model.ProductId })';
                        } else {
                            showNotification(response.message || 'Failed to delete product tier.', 'error');
                        }
                    })
                    .fail(function() {
                        showNotification('Failed to delete product tier.', 'error');
                    });
            }
        };

        window.editVersion = function(versionId) {
            // Implementation for editing version
            console.log('Edit version:', versionId);
        };

        window.deleteVersion = function(versionId) {
            if (confirm('Are you sure you want to delete this version? This is a soft delete.')) {
                $.post('@Url.Action("DeleteProductVersion")', { versionId: versionId })
                    .done(function(response) {
                        if (response.success) {
                            showNotification('Product version deleted successfully!', 'success');
                            // Reload the page to show the updated version list
                            window.location.href = '@Url.Action("EditEnhancedVersions", new { id = Model.ProductId })';
                        } else {
                            showNotification(response.message || 'Failed to delete product version.', 'error');
                        }
                    })
                    .fail(function() {
                        showNotification('Failed to delete product version.', 'error');
                    });
            }
        };

        window.editFeature = function(featureId) {
            // Implementation for editing feature
            console.log('Edit feature:', featureId);
        };

        window.deleteFeature = function(featureId) {
            if (confirm('Are you sure you want to delete this feature? This is a soft delete.')) {
                $.post('@Url.Action("DeleteProductFeature")', { featureId: featureId })
                    .done(function(response) {
                        if (response.success) {
                            showNotification('Feature deleted successfully!', 'success');
                            // Reload the page to show the updated feature list
                            window.location.href = '@Url.Action("EditEnhancedFeatures", new { id = Model.ProductId })';
                        } else {
                            showNotification(response.message || 'Failed to delete feature.', 'error');
                        }
                    })
                    .fail(function() {
                        showNotification('Failed to delete feature.', 'error');
                    });
            }
        };

        // Render functions for converting JSON data to HTML
        function renderProductTiers(tiers) {
            if (!tiers || tiers.length === 0) {
                return '<div class="alert alert-info"><i class="fas fa-info-circle me-2"></i>No product tiers found. Click "Add Tier" to create the first tier.</div>';
            }

            var html = '<div class="row">';
            tiers.forEach(function(tier) {
                html += '<div class="col-md-6 mb-3 tier-item">';
                html += '  <div class="card h-100">';
                html += '    <div class="card-body">';
                html += '      <div class="d-flex justify-content-between align-items-start mb-2">';
                html += '        <h6 class="card-title mb-0">' + tier.Name + '</h6>';
                html += '        <div class="dropdown">';
                html += '          <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">';
                html += '            <i class="fas fa-ellipsis-v"></i>';
                html += '          </button>';
                html += '          <ul class="dropdown-menu">';
                html += '            <li><a class="dropdown-item" href="#" onclick="editTier(\'' + tier.Id + '\')"><i class="fas fa-edit me-2"></i>Edit</a></li>';
                if (tier.CanDelete) {
                    html += '            <li><a class="dropdown-item text-danger" href="#" onclick="deleteTier(\'' + tier.Id + '\')"><i class="fas fa-trash me-2"></i>Delete</a></li>';
                }
                html += '          </ul>';
                html += '        </div>';
                html += '      </div>';
                html += '      <p class="card-text text-muted small mb-2">' + (tier.Description || '') + '</p>';
                html += '      <div class="d-flex justify-content-between align-items-center">';
                html += '        <span class="fw-bold text-primary">' + (tier.Price || 'Free') + '</span>';
                if (tier.IsActive) {
                    html += '        <span class="badge bg-success">Active</span>';
                } else {
                    html += '        <span class="badge bg-secondary">Inactive</span>';
                }
                html += '      </div>';
                html += '    </div>';
                html += '  </div>';
                html += '</div>';
            });
            html += '</div>';
            return html;
        }

        function renderProductVersions(versions) {
            if (!versions || versions.length === 0) {
                return '<div class="alert alert-info"><i class="fas fa-info-circle me-2"></i>No product versions found. Click "Add Version" to create the first version.</div>';
            }

            var html = '<div class="list-group">';
            versions.forEach(function(version) {
                html += '<div class="list-group-item version-item">';
                html += '  <div class="d-flex justify-content-between align-items-start">';
                html += '    <div class="flex-grow-1">';
                html += '      <div class="d-flex align-items-center mb-1">';
                html += '        <h6 class="mb-0 me-2">Version ' + version.VersionNumber + '</h6>';
                if (version.IsStable) {
                    html += '        <span class="badge bg-success">Stable</span>';
                } else {
                    html += '        <span class="badge bg-warning">Beta</span>';
                }
                if (version.IsApproved) {
                    html += '        <span class="badge bg-info ms-1">Approved</span>';
                }
                html += '      </div>';
                if (version.ReleaseNotes) {
                    html += '      <p class="mb-1 text-muted small">' + version.ReleaseNotes + '</p>';
                }
                if (version.ReleaseDate) {
                    html += '      <small class="text-muted">Released: ' + new Date(version.ReleaseDate).toLocaleDateString() + '</small>';
                }
                html += '    </div>';
                html += '    <div class="dropdown">';
                html += '      <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">';
                html += '        <i class="fas fa-ellipsis-v"></i>';
                html += '      </button>';
                html += '      <ul class="dropdown-menu">';
                html += '        <li><a class="dropdown-item" href="#" onclick="editVersion(\'' + version.Id + '\')"><i class="fas fa-edit me-2"></i>Edit</a></li>';
                if (version.CanDelete) {
                    html += '        <li><a class="dropdown-item text-danger" href="#" onclick="deleteVersion(\'' + version.Id + '\')"><i class="fas fa-trash me-2"></i>Delete</a></li>';
                }
                html += '      </ul>';
                html += '    </div>';
                html += '  </div>';
                html += '</div>';
            });
            html += '</div>';
            return html;
        }

        function renderProductFeatures(features) {
            if (!features || features.length === 0) {
                return '<div class="alert alert-info"><i class="fas fa-info-circle me-2"></i>No features found. Click "Add Feature" to create the first feature.</div>';
            }

            var html = '<div class="row">';
            features.forEach(function(feature) {
                html += '<div class="col-md-6 mb-3 feature-item">';
                html += '  <div class="card h-100">';
                html += '    <div class="card-body">';
                html += '      <div class="d-flex justify-content-between align-items-start mb-2">';
                html += '        <h6 class="card-title mb-0">' + feature.Name + '</h6>';
                html += '        <div class="dropdown">';
                html += '          <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">';
                html += '            <i class="fas fa-ellipsis-v"></i>';
                html += '          </button>';
                html += '          <ul class="dropdown-menu">';
                html += '            <li><a class="dropdown-item" href="#" onclick="editFeature(\'' + feature.Id + '\')"><i class="fas fa-edit me-2"></i>Edit</a></li>';
                html += '            <li><a class="dropdown-item text-danger" href="#" onclick="deleteFeature(\'' + feature.Id + '\')"><i class="fas fa-trash me-2"></i>Delete</a></li>';
                html += '          </ul>';
                html += '        </div>';
                html += '      </div>';
                html += '      <p class="card-text text-muted small mb-2">' + (feature.Description || '') + '</p>';
                html += '      <div class="d-flex justify-content-between align-items-center">';
                if (feature.Category) {
                    html += '        <span class="badge bg-light text-dark">' + feature.Category + '</span>';
                }
                if (feature.IsCore) {
                    html += '        <span class="badge bg-primary">Core Feature</span>';
                } else {
                    html += '        <span class="badge bg-secondary">Optional</span>';
                }
                html += '      </div>';
                html += '    </div>';
                html += '  </div>';
                html += '</div>';
            });
            html += '</div>';
            return html;
        }

        // Product Tier CRUD Functions
        function showAddTierModal() {
            // Reset form and modal
            $('#tierForm')[0].reset();
            $('#tierId').val('');
            $('#tierModalLabel').text('Add Product Tier');
            $('#tierSubmitBtn').text('Add Tier');
            clearValidationErrors();
            
            // Show modal
            var modal = new bootstrap.Modal(document.getElementById('tierModal'));
            modal.show();
        }

        function editTier(tierId) {
            // Get tier data
            $.get('@Url.Action("GetProductTier")', { 
                productId: @Model.ProductId, 
                tierId: tierId 
            })
            .done(function(response) {
                if (response.success && response.data) {
                    var tier = response.data;
                    
                    // Populate form
                    $('#tierId').val(tier.TierId);
                    $('#tierName').val(tier.TierName);
                    $('#tierDescription').val(tier.Description);
                    $('#monthlyPrice').val(tier.MonthlyPrice);
                    $('#annualPrice').val(tier.AnnualPrice);
                    $('#trialPeriodDays').val(tier.TrialPeriodDays);
                    $('#maxUsers').val(tier.MaxUsers);
                    $('#maxProjects').val(tier.MaxProjects);
                    $('#isFree').prop('checked', tier.IsFree);
                    $('#isActive').prop('checked', tier.IsActive);
                    
                    // Update modal title and button
                    $('#tierModalLabel').text('Edit Product Tier');
                    $('#tierSubmitBtn').text('Update Tier');
                    clearValidationErrors();
                    
                    // Show modal
                    var modal = new bootstrap.Modal(document.getElementById('tierModal'));
                    modal.show();
                } else {
                    showAlert('Error loading tier data', 'danger');
                }
            })
            .fail(function() {
                showAlert('Error loading tier data', 'danger');
            });
        }

        function deleteTier(tierId) {
            if (confirm('Are you sure you want to delete this tier? This action cannot be undone.')) {
                var formData = new FormData();
                formData.append('productId', @Model.ProductId);
                formData.append('tierId', tierId);
                formData.append('__RequestVerificationToken', $('[name=__RequestVerificationToken]').val());

                $.ajax({
                    url: '@Url.Action("DeleteProductTier")',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            showAlert(response.message, 'success');
                            loadProductTiers(); // Reload the tiers list
                        } else {
                            showAlert(response.message, 'danger');
                        }
                    },
                    error: function() {
                        showAlert('Error deleting tier', 'danger');
                    }
                });
            }
        }

        // Handle tier form submission
        $(document).ready(function() {
            $('#tierForm').on('submit', function(e) {
                e.preventDefault();
                
                var tierId = $('#tierId').val();
                var isEdit = tierId && tierId !== '';
                var url = isEdit ? '@Url.Action("EditProductTier")' : '@Url.Action("AddProductTier")';
                
                var formData = new FormData(this);
                if (isEdit) {
                    formData.append('tierId', tierId);
                }
                formData.append('productId', @Model.ProductId);

                // Disable submit button
                $('#tierSubmitBtn').prop('disabled', true).text('Saving...');

                $.ajax({
                    url: url,
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        if (response.success) {
                            showAlert(response.message, 'success');
                            $('#tierModal').modal('hide');
                            loadProductTiers(); // Reload the tiers list
                        } else {
                            if (response.errors && response.errors.length > 0) {
                                showValidationErrors(response.errors);
                            } else {
                                showAlert(response.message, 'danger');
                            }
                        }
                    },
                    error: function() {
                        showAlert('Error saving tier', 'danger');
                    },
                    complete: function() {
                        // Re-enable submit button
                        $('#tierSubmitBtn').prop('disabled', false).text(isEdit ? 'Update Tier' : 'Add Tier');
                    }
                });
            });
        });

        function clearValidationErrors() {
            $('.is-invalid').removeClass('is-invalid');
            $('.invalid-feedback').empty();
        }

        function showValidationErrors(errors) {
            clearValidationErrors();
            errors.forEach(function(error) {
                showAlert(error, 'danger');
            });
        }

        function showAlert(message, type) {
            var alertClass = 'alert-' + type;
            var alertHtml = '<div class="alert ' + alertClass + ' alert-dismissible fade show" role="alert">' +
                            message +
                            '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>' +
                            '</div>';
            
            // Remove existing alerts
            $('.alert').remove();
            
            // Add new alert at the top of the tiers content
            $('#tiers-content').prepend(alertHtml);
            
            // Auto-hide success alerts after 5 seconds
            if (type === 'success') {
                setTimeout(function() {
                    $('.alert-success').alert('close');
                }, 5000);
            }
        }
    </script>
}
