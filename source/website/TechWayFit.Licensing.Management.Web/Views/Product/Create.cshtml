@model TechWayFit.Licensing.Management.Web.ViewModels.Product.ProductCreateViewModel
@{
    ViewData["Title"] = "Create Product";

    // Prepare header data
    var headerModel = new TechWayFit.Licensing.Management.Web.ViewModels.Shared.PageHeaderViewModel
    {
        Title = "Create Product",
        Icon = "fas fa-box-open",
        BreadcrumbItems = new List<TechWayFit.Licensing.Management.Web.ViewModels.Shared.BreadcrumbItem>
        {
            new() { Text = "Dashboard", Controller = "License", Action = "Index" },
            new() { Text = "Products", Controller = "Product", Action = "Index" },
            new() { Text = "Create", IsActive = true }
        },
        BackButtonText = "Back to Products",
        BackButtonController = "Product",
        BackButtonAction = "Index"
    };
}

@section Styles {
    <link rel="stylesheet" href="~/css/product-management.css" />
    <link rel="stylesheet" href="~/css/form-styles.css" />
}

@await Html.PartialAsync("_PageHeaderPartial", headerModel)

<div class="container-fluid">
    <form method="post" asp-action="Create" class="needs-validation" novalidate>
        <div class="row">
            <!-- Main Content - Scrollable -->
            <div class="col-md-8">
                <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                <!-- Basic Information Section -->
                <div class="form-section">
                    <h5><i class="fas fa-info-circle me-2"></i>Basic Information</h5>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group">
                                <label asp-for="ProductName" class="form-label">Product Name</label>
                                <input asp-for="ProductName" class="form-control" placeholder="Enter product name" />
                                <span asp-validation-for="ProductName" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="ProductType" class="form-label">Product Type</label>
                                <select asp-for="ProductType" class="form-select" asp-items="Html.GetEnumSelectList<TechWayFit.Licensing.Core.Models.ProductType>()">
                                    <option value="">Select Type</option>
                                </select>
                                <span asp-validation-for="ProductType" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="Version" class="form-label">Version</label>
                                <input asp-for="Version" class="form-control" placeholder="e.g., 1.0.0" />
                                <span asp-validation-for="Version" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <div class="form-check mt-4">
                                    <input asp-for="IsActive" class="form-check-input" type="checkbox" />
                                    <label asp-for="IsActive" class="form-check-label">
                                        Product is Active
                                    </label>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12">
                            <div class="form-group">
                                <label asp-for="Description" class="form-label">Description</label>
                                <textarea asp-for="Description" class="form-control" rows="3" placeholder="Describe the product and its capabilities..."></textarea>
                                <span asp-validation-for="Description" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Contact & Support Information -->
                <div class="form-section">
                    <h5><i class="fas fa-headset me-2"></i>Support & Contact Information</h5>
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="ReleaseDate" class="form-label">Release Date</label>
                                <input asp-for="ReleaseDate" type="date" class="form-control" />
                                <span asp-validation-for="ReleaseDate" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="SupportEmail" class="form-label">Support Email</label>
                                <input asp-for="SupportEmail" type="email" class="form-control" placeholder="support@example.com" />
                                <span asp-validation-for="SupportEmail" class="text-danger"></span>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <div class="form-group">
                                <label asp-for="SupportPhone" class="form-label">Support Phone</label>
                                <input asp-for="SupportPhone" type="tel" class="form-control" placeholder="+1 (555) 123-4567" />
                                <span asp-validation-for="SupportPhone" class="text-danger"></span>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Metadata Section -->
                <div class="form-section">
                    <h5><i class="fas fa-tags me-2"></i>Metadata & Settings</h5>
                    <div id="metadata-container">
                        @if (Model.Metadata != null && Model.Metadata.Any())
                        {
                            @for (int i = 0; i < Model.Metadata.Count; i++)
                            {
                                var kvp = Model.Metadata.ElementAt(i);
                                <div class="row metadata-row">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <input type="text" name="Metadata[@i].Key" value="@kvp.Key" class="form-control" placeholder="Key" />
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            <input type="text" name="Metadata[@i].Value" value="@kvp.Value" class="form-control" placeholder="Value" />
                                        </div>
                                    </div>
                                    <div class="col-md-2">
                                        <div class="form-group">
                                            <button type="button" class="btn btn-outline-danger btn-sm remove-metadata">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <button type="button" id="add-metadata" class="btn btn-add-metadata">
                        <i class="fas fa-plus me-1"></i>Add Metadata
                    </button>
                </div>

            </div>
            <!-- Sidebar - Fixed -->
            <div class="col-md-4">
                <div class="form-section">
                    <h5><i class="fas fa-info me-2"></i>Information</h5>
                    <div class="alert alert-info alert-persistent">
                        <h6><i class="fas fa-lightbulb me-1"></i>Tips</h6>
                        <ul class="mb-0 small">
                            <li>Choose a clear and descriptive name for your product</li>
                            <li>Product Type helps categorize your software application</li>
                            <li>Use semantic versioning format (e.g., 1.0.0, 2.1.3)</li>
                            <li>Provide valid contact information for customer support</li>
                            <li>Add metadata for additional product configuration</li>
                        </ul>
                    </div>
                </div>

                <!-- Actions -->
                <div class="form-section">
                    <h5><i class="fas fa-tasks me-2"></i>Actions</h5>
                    <div class="d-grid gap-2">
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-save me-1"></i>Create Product
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="fas fa-times me-1"></i>Cancel
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    
    <script>
        let metadataIndex = @(Model.Metadata?.Count ?? 0);
        
        document.getElementById('add-metadata').addEventListener('click', function() {
            const container = document.getElementById('metadata-container');
            const newRow = document.createElement('div');
            newRow.className = 'row metadata-row';
            newRow.innerHTML = `
                <div class="col-md-5">
                    <div class="form-group">
                        <input type="text" name="Metadata[${metadataIndex}].Key" class="form-control" placeholder="Key" />
                    </div>
                </div>
                <div class="col-md-5">
                    <div class="form-group">
                        <input type="text" name="Metadata[${metadataIndex}].Value" class="form-control" placeholder="Value" />
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <button type="button" class="btn btn-outline-danger btn-sm remove-metadata">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                </div>
            `;
            container.appendChild(newRow);
            metadataIndex++;
        });

        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('remove-metadata') || e.target.parentElement.classList.contains('remove-metadata')) {
                const row = e.target.closest('.metadata-row');
                if (row) {
                    row.remove();
                }
            }
        });

        // Form validation enhancement
        (function() {
            'use strict';
            window.addEventListener('load', function() {
                var forms = document.getElementsByClassName('needs-validation');
                var validation = Array.prototype.filter.call(forms, function(form) {
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
                    form.addEventListener('submit', function(event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();
    </script>
}
