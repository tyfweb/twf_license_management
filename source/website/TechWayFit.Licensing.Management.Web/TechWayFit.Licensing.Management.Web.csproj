<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <AssemblyName>TechWayFit.Licensing.WebUI</AssemblyName>
    
    <!-- Assembly Information -->
    <AssemblyTitle>TechWayFit Licensing Management Web UI</AssemblyTitle>
    <AssemblyDescription>Web user interface for TechWayFit licensing management system</AssemblyDescription>
    <IsPackable>false</IsPackable>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="EFCore.NamingConventions" Version="9.0.0" />
    <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" Version="8.0.0" />
    <PackageReference Include="Serilog.Expressions" Version="5.0.0" />
    <PackageReference Include="System.Text.Json" Version="9.0.7" />
    <PackageReference Include="Npgsql" Version="9.0.3" />
    <PackageReference Include="Npgsql.EntityFrameworkCore.PostgreSQL" Version="9.0.3" />
    <PackageReference Include="Microsoft.EntityFrameworkCore" Version="9.0.7" />
    <PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="9.0.7" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="9.0.7" />
    <PackageReference Include="Microsoft.Extensions.Options" Version="9.0.7" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="9.0.7" />
    <PackageReference Include="TechWayFit.Licensing.Core" Version="1.0.0" />
    
    <!-- Serilog packages for file logging -->
    <PackageReference Include="Serilog" Version="4.2.0" />
    <PackageReference Include="Serilog.AspNetCore" Version="9.0.0" />
    <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
    <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
    <PackageReference Include="Serilog.Settings.Configuration" Version="9.0.0" />
    <PackageReference Include="Serilog.Enrichers.Environment" Version="3.0.1" />
    <PackageReference Include="Serilog.Enrichers.Process" Version="3.0.0" />
    <PackageReference Include="Serilog.Enrichers.Thread" Version="4.0.0" /> 
    
    <!-- Hangfire packages for job scheduling -->
    <PackageReference Include="Hangfire.Core" Version="1.8.5" />
    <PackageReference Include="Hangfire.SqlServer" Version="1.8.5" />
    <PackageReference Include="Hangfire.AspNetCore" Version="1.8.5" />
    <PackageReference Include="Hangfire.MemoryStorage" Version="1.8.1" />
    
    <!-- Swagger/OpenAPI packages for API documentation -->
    <PackageReference Include="Swashbuckle.AspNetCore" Version="6.8.1" />
    <PackageReference Include="Swashbuckle.AspNetCore.Annotations" Version="6.8.1" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="../../repositories/TechWayFit.Licensing.Management.Infrastructure.InMemory/TechWayFit.Licensing.Management.Infrastructure.InMemory.csproj" />
    <ProjectReference Include="../../repositories/TechWayFit.Licensing.Management.Infrastructure.SqlServer/TechWayFit.Licensing.Management.Infrastructure.SqlServer.csproj" />
    <ProjectReference Include="../../core/TechWayFit.Licensing.Generator/TechWayFit.Licensing.Generator.csproj" />
    <ProjectReference Include="../../services/TechWayFit.Licensing.Management.Services/TechWayFit.Licensing.Management.Services.csproj" />
    <ProjectReference Include="../../core/TechWayFit.Licensing.Management.Infrastructure/TechWayFit.Licensing.Management.Infrastructure.csproj" />
    <ProjectReference Include="../../core/TechWayFit.Licensing.Management.Core/TechWayFit.Licensing.Management.Core.csproj" />
    <ProjectReference Include="../../repositories/TechWayFit.Licensing.Management.Infrastructure.PostgreSql/TechWayFit.Licensing.Management.Infrastructure.PostgreSql.csproj" />
    <ProjectReference Include="../../repositories/TechWayFit.Licensing.Management.Infrastructure.EntityFramework/TechWayFit.Licensing.Management.Infrastructure.EntityFramework.csproj" />
  </ItemGroup>

  <ItemGroup>
    <Compile Remove="Controllers/Backup/**/*.cs" />
    <Compile Remove="Extensions_Backup/**/*.cs" />  
    <Content Remove="Views/ProductLicense/**" />
  </ItemGroup>

  <!-- SCSS Build Configuration -->
  <PropertyGroup>
    <ScssInputFile>wwwroot/scss/main.scss</ScssInputFile>
    <ScssOutputFile>wwwroot/css/compiled.css</ScssOutputFile>
    <ScssOutputFileMin>wwwroot/css/compiled.min.css</ScssOutputFileMin>
    <ScssOutputDir>wwwroot/css</ScssOutputDir>
  </PropertyGroup>

  <!-- Include SCSS files in project -->
  <ItemGroup>
    <None Include="wwwroot/scss/**/*.scss" />
    <None Include="package.json" />
    <None Include="build-scss.sh" />
    <None Include="SCSS_MIGRATION_GUIDE.md" />
  </ItemGroup>

  <!-- Ensure npm packages are installed before build -->
  <Target Name="EnsureNodeModules" BeforeTargets="BeforeBuild">
    <Message Text="Checking for npm dependencies..." Importance="high" />
    <Exec Command="npm install" 
          Condition="!Exists('node_modules')" 
          ContinueOnError="false" 
          WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

  <!-- Build SCSS during development builds -->
  <Target Name="BuildScss" BeforeTargets="BeforeBuild" DependsOnTargets="EnsureNodeModules">
    <Message Text="Compiling SCSS files..." Importance="high" />
    
    <!-- Create output directory if it doesn't exist -->
    <MakeDir Directories="$(ScssOutputDir)" Condition="!Exists('$(ScssOutputDir)')" />
    
    <!-- Compile SCSS for development (expanded with source maps) -->
    <Exec Command="npm run scss:dev" 
          ContinueOnError="false" 
          WorkingDirectory="$(MSBuildProjectDirectory)"
          Condition="'$(Configuration)' == 'Debug'" />
    
    <!-- Compile SCSS for production (both expanded and minified) -->
    <Exec Command="npm run scss:prod" 
          ContinueOnError="false" 
          WorkingDirectory="$(MSBuildProjectDirectory)"
          Condition="'$(Configuration)' == 'Release'" />
          
    <Message Text="SCSS compilation completed successfully!" Importance="high" />
    <Message Text="Output files: $(ScssOutputFile)" Importance="high" Condition="'$(Configuration)' == 'Debug'" />
    <Message Text="Output files: $(ScssOutputFile), $(ScssOutputFileMin)" Importance="high" Condition="'$(Configuration)' == 'Release'" />
  </Target>

  <!-- Clean compiled CSS files during clean -->
  <Target Name="CleanScss" BeforeTargets="BeforeClean">
    <Message Text="Cleaning compiled SCSS files..." Importance="high" />
    <Delete Files="$(ScssOutputFile);$(ScssOutputFile).map;$(ScssOutputFileMin)" ContinueOnError="true" />
  </Target>

  <!-- Watch SCSS files for changes in development -->
  <Target Name="WatchScss" Condition="'$(Configuration)' == 'Debug' AND '$(DOTNET_WATCH)' == '1'">
    <Message Text="Starting SCSS watch mode..." Importance="high" />
    <Exec Command="npm run scss:watch" 
          ContinueOnError="true" 
          WorkingDirectory="$(MSBuildProjectDirectory)" />
  </Target>

</Project>
